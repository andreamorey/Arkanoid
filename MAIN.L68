00001DEC Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 04/01/2020 2:04:55

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : BREAKING BLOCKS
00000000                             3  ; AUTHOR   : ANDREA MOREY SANCHEZ Y AISHA GANDAROVA
00000000                             4  ; CREATION : 
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8              
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10            
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =000002E4                 81  SCRWIDTH    EQU     740                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            91  
00001000                            92  
00001000                            93  -------------------- end include --------------------
00001000                            94              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            95  ; =============================================================================
00001000                            96  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            97  ; =============================================================================
00001000                            98  ;           AUTHORS: Andrea Morey Sánchez and Aisha Gandarova
00001000                            99  ; -----------------------------------------------------------------------------
00001000                           100  SYSINIT
00001000                           101  ; INITIALIZES THE SYSTEM
00001000                           102  ; INPUT    - NONE
00001000                           103  ; OUTPUT   - NONE
00001000                           104  ; MODIFIES - NONE
00001000                           105  ; -----------------------------------------------------------------------------
00001000  205F                     106              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010A6            107              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            108              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 0000111A            109              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                110              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     111              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     112              RTS
0000101C                           113  
0000101C                           114  ; =============================================================================
0000101C                           115  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           116  ; =============================================================================
0000101C                           117  
0000101C                           118  ; -----------------------------------------------------------------------------
0000101C                           119  SCRINIT
0000101C                           120  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           121  ; INPUT    - NONE
0000101C                           122  ; OUTPUT   - NONE
0000101C                           123  ; MODIFIES - D0,D1,D2,D3
0000101C                           124  ; -----------------------------------------------------------------------------
0000101C                           125              ; TO DO:
0000101C                           126              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C  007C 0700                127              ORI.W   #$0700,SR
00001020                           128              ; - DISABLE ALL AUTO-IRQ (SEE TRAP #15 TASK 32)
00001020                           129              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
00001020  21FC 0000108C 0084       130              MOVE.L  #SCRUPD,$80+(SCRTRAP*4)
00001028                           131              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
00001028  103C 0021                132              MOVE.B  #33,D0
0000102C  223C 02E401E0            133              MOVE.L  #(SCRWIDTH<<16)|SCRHEIGH,D1
00001032  4E4F                     134              TRAP    #15
00001034                           135              ; - SET WINDOWED MODE
00001034  7201                     136              MOVE.L  #1,D1
00001036  4E4F                     137              TRAP    #15
00001038                           138              ; - CLEAR VISIBLE BUFFER
00001038  103C 000B                139              MOVE.B  #11,D0
0000103C  323C FF00                140              MOVE.W  #$FF00,D1
00001040  4E4F                     141              TRAP    #15
00001042                           142              ; - ENABLE DOUBLE BUFFER
00001042  103C 005C                143              MOVE.B  #92,D0
00001046  123C 0011                144              MOVE.B  #17,D1
0000104A  4E4F                     145              TRAP    #15
0000104C                           146              ; - CLEAR HIDDEN BUFFER
0000104C  700B                     147              MOVE.L  #11,D0
0000104E  323C FF00                148              MOVE.W  #$FF00,D1
00001052  4E4F                     149              TRAP    #15
00001054                           150              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
00001054                           151              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
00001054  21FC 0000107E 0064       152              MOVE.L  #SCRISR,$60+(SCRIRQ*4)
0000105C                           153              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000105C                           154              ;   TASK 32)
0000105C  103C 0020                155              MOVE.B  #32,D0
00001060  123C 0006                156              MOVE.B  #6,D1
00001064                           157         
00001064  143C 0081                158              MOVE.B  #$80|SCRIRQ,D2
00001068  7614                     159              MOVE.L  #SCRTIM,D3
0000106A  4E4F                     160              TRAP    #15
0000106C                           161              ; - CLEAR SCRINTCT AND SCRCYCCT
0000106C  4239 00001E16            162              CLR.B   SCRINTCT
00001072  4239 00001E17            163              CLR.B   SCRCYCCT
00001078                           164              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
00001078  027C F8FF                165              ANDI.W  #$F8FF,SR
0000107C  4E75                     166              RTS
0000107E                           167  
0000107E                           168  ; -----------------------------------------------------------------------------
0000107E                           169  SCRISR
0000107E                           170  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000107E                           171  ; INPUT    - NONE
0000107E                           172  ; OUTPUT   - NONE
0000107E                           173  ; MODIFIES - NONE
0000107E                           174  ; -----------------------------------------------------------------------------
0000107E  5239 00001E16            175              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001084  5239 00001E17            176              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000108A  4E73                     177              RTE
0000108C                           178  
0000108C                           179  ; -----------------------------------------------------------------------------
0000108C                           180  SCRUPD
0000108C                           181  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000108C                           182  ; BUFFER FOR THE NEXT ONE.
0000108C                           183  ; INPUT    - NONE
0000108C                           184  ; OUTPUT   - NONE
0000108C                           185  ; MODIFIES - NONE
0000108C                           186  ; -----------------------------------------------------------------------------
0000108C                           187              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000108C  48E7 C000                188              MOVEM.L D0-D1,-(A7)
00001090  103C 005E                189              MOVE.B  #94,D0
00001094  4E4F                     190              TRAP    #15
00001096  103C 000B                191              MOVE.B  #11,D0
0000109A  323C FF00                192              MOVE.W  #$FF00,D1
0000109E  4E4F                     193              TRAP    #15
000010A0  4CDF 0003                194              MOVEM.L (A7)+,D0-D1
000010A4  4E73                     195              RTE
000010A6                           196  
000010A6                           197  ; =============================================================================
000010A6                           198  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010A6                           199  ; =============================================================================
000010A6                           200  
000010A6                           201  ; -----------------------------------------------------------------------------
000010A6                           202  KBDINIT
000010A6                           203  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010A6                           204  ; INPUT    - NONE
000010A6                           205  ; OUTPUT   - NONE
000010A6                           206  ; MODIFIES - NONE
000010A6                           207  ; -----------------------------------------------------------------------------
000010A6  4239 00001E14            208              CLR.B   (KBDVAL)                ; INIT VARS
000010AC  4239 00001E15            209              CLR.B   (KBDEDGE)
000010B2  21FC 000010BC 0080       210              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010BA  4E75                     211              RTS
000010BC                           212  
000010BC                           213  ; -----------------------------------------------------------------------------
000010BC                           214  KBDREAD
000010BC                           215  ; TRAP SERVICE ROUTINE.
000010BC                           216  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010BC                           217  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010BC                           218  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010BC                           219  ; INPUT    - NONE
000010BC                           220  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010BC                           221  ; MODIFIES - NONE
000010BC                           222  ; -----------------------------------------------------------------------------
000010BC                           223              ; TO DO: UPDATE KBDVAL AND KBDEDGE
000010BC  48E7 F800                224              MOVEM.L D0-D4,-(A7)
000010C0  103C 0013                225              MOVE.B  #19,D0
000010C4                           226              
000010C4  223C 50104D20            227              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010CA  4E4F                     228              TRAP    #15
000010CC                           229          
000010CC  4202                     230              CLR.B   D2                      ;D2 WILL CONTAIN THE VALUE OF KBDVAL
000010CE  383C 0003                231              MOVE.W  #3,D4
000010D2                           232              
000010D2                           233  .LOOP1      
000010D2                           234       
000010D2  E189                     235              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010D4  40C3                     236              MOVE.W  SR,D3                   
000010D6  0243 0001                237              ANDI.W  #$0001,D3               ;D3 = VALUE OF THE FLAG C
000010DA  E30A                     238              LSL.B   #1,D2                   ;MOVE THE BITS TO THE LEFT
000010DC  8403                     239              OR.B    D3,D2                   
000010DE  51CC FFF2                240              DBRA    D4,.LOOP1
000010E2                           241          
000010E2                           242              ;D2 = 0 0 0 0 KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1
000010E2                           243              
000010E2  223C 28272625            244              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E8  4E4F                     245              TRAP    #15
000010EA                           246              
000010EA  383C 0003                247              MOVE.W  #3,D4
000010EE                           248  .LOOP2      
000010EE  E189                     249              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010F0  40C3                     250              MOVE.W  SR,D3
000010F2  0243 0001                251              ANDI.W  #$0001,D3    
000010F6  E30A                     252              LSL.B   #1,D2
000010F8  8403                     253              OR.B    D3,D2
000010FA                           254              
000010FA  51CC FFF2                255              DBRA    D4,.LOOP2
000010FE                           256              
000010FE                           257              ;D2 = KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1 KBDDOWN KBDRIGHT KBDUP KBDLEFT
000010FE                           258              
000010FE                           259              ;UPDATE KBDVAL AND KBDEDGE
000010FE  1639 00001E14            260              MOVE.B  KBDVAL,D3
00001104  4603                     261              NOT.B   D3
00001106  13C2 00001E14            262              MOVE.B  D2,KBDVAL
0000110C  C602                     263              AND.B   D2,D3
0000110E  13C3 00001E15            264              MOVE.B  D3,KBDEDGE
00001114  4CDF 001F                265              MOVEM.L (A7)+,D0-D4
00001118  4E73                     266              RTE
0000111A                           267  
0000111A                           268  ; =============================================================================
0000111A                           269  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
0000111A                           270  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
0000111A                           271  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
0000111A                           272  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
0000111A                           273  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
0000111A                           274  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
0000111A                           275  ; =============================================================================
0000111A                           276  
0000111A                           277  ; -----------------------------------------------------------------------------
0000111A                           278  DMMINIT
0000111A                           279  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
0000111A                           280  ; INPUT    - NONE
0000111A                           281  ; OUTPUT   - NONE
0000111A                           282  ; MODIFIES - NONE
0000111A                           283  ; -----------------------------------------------------------------------------
0000111A  48E7 8080                284              MOVEM.L D0/A0,-(A7)
0000111E  41F9 00001E40            285              LEA     DMMDATA,A0
00001124  303C 0031                286              MOVE.W  #DMMBNUM-1,D0
00001128  30BC 0000                287  .LOOP       MOVE.W  #DMMSYSID,(A0)
0000112C  D1FC 00000040            288              ADD.L   #DMMBSIZE,A0
00001132  51C8 FFF4                289              DBRA.W  D0,.LOOP
00001136  4CDF 0101                290              MOVEM.L (A7)+,D0/A0
0000113A  4E75                     291              RTS
0000113C                           292  
0000113C                           293  ; -----------------------------------------------------------------------------
0000113C                           294  DMMFIRST
0000113C                           295  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000113C                           296  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000113C                           297  ; INPUT    - NONE
0000113C                           298  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000113C                           299  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000113C                           300  ; -----------------------------------------------------------------------------
0000113C  41F9 00001E40            301              LEA     DMMDATA,A0
00001142  4A58                     302  DMMFRLOP    TST.W   (A0)+
00001144  6600 0016                303              BNE     DMMFRFND
00001148  D1FC 0000003E            304              ADD.L   #DMMBSIZE-2,A0
0000114E  B1FC 00002ABF            305  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001154  6DEC                     306              BLT     DMMFRLOP
00001156  207C 00000000            307              MOVE.L  #0,A0
0000115C  4E75                     308  DMMFRFND    RTS
0000115E                           309  
0000115E                           310  ; -----------------------------------------------------------------------------
0000115E                           311  DMMNEXT
0000115E                           312  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000115E                           313  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000115E                           314  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
0000115E                           315  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000115E                           316  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000115E                           317  ; -----------------------------------------------------------------------------
0000115E  2F00                     318              MOVE.L  D0,-(A7)
00001160  2008                     319              MOVE.L  A0,D0
00001162  C0BC FFFFFFC0            320              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001168  0680 00000040            321              ADD.L   #DMMBSIZE,D0
0000116E  2040                     322              MOVE.L  D0,A0
00001170  201F                     323              MOVE.L  (A7)+,D0
00001172  60DA                     324              BRA     DMMFRCOM
00001174                           325  
00001174                           326  ; -----------------------------------------------------------------------------
00001174                           327  DMMFRSTO
00001174                           328  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001174                           329  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001174                           330  ; INPUT    - D0.W : ID TO SEARCH
00001174                           331  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001174                           332  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001174                           333  ; -----------------------------------------------------------------------------
00001174  41F9 00001E40            334              LEA     DMMDATA,A0
0000117A  B058                     335  DMMFLOOP    CMP.W   (A0)+,D0
0000117C  6700 0016                336              BEQ     DMMFFND
00001180  D1FC 0000003E            337              ADD.L   #DMMBSIZE-2,A0
00001186  B1FC 00002ABF            338  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000118C  6DEC                     339              BLT     DMMFLOOP
0000118E  207C 00000000            340              MOVE.L  #0,A0
00001194  4E75                     341  DMMFFND     RTS
00001196                           342  
00001196                           343  ; -----------------------------------------------------------------------------
00001196                           344  DMMNEXTO
00001196                           345  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001196                           346  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001196                           347  ; INPUT    - D0.W : ID TO SEARCH
00001196                           348  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001196                           349  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001196                           350  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001196                           351  ; -----------------------------------------------------------------------------
00001196  2F00                     352              MOVE.L  D0,-(A7)
00001198  2008                     353              MOVE.L  A0,D0
0000119A  C0BC FFFFFFC0            354              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011A0  0680 00000040            355              ADD.L   #DMMBSIZE,D0
000011A6  2040                     356              MOVE.L  D0,A0
000011A8  201F                     357              MOVE.L  (A7)+,D0
000011AA  60DA                     358              BRA     DMMFCOM
000011AC                           359  
000011AC                           360  ; -----------------------------------------------------------------------------
000011AC                           361  DMMALLOC
000011AC                           362  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011AC                           363  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011AC                           364  ; INPUT    - D0.W : ID TO ASSIGN
000011AC                           365  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011AC                           366  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011AC                           367  ; -----------------------------------------------------------------------------
000011AC  3F00                     368              MOVE.W  D0,-(A7)
000011AE  4240                     369              CLR.W   D0
000011B0  4EB8 1174                370              JSR     DMMFRSTO
000011B4  301F                     371              MOVE.W  (A7)+,D0
000011B6  B1FC 00000000            372              CMP.L   #0,A0
000011BC  6700 0006                373              BEQ     .END
000011C0  3140 FFFE                374              MOVE.W  D0,-2(A0)
000011C4  4E75                     375  .END        RTS
000011C6                           376  
000011C6                           377  ; -----------------------------------------------------------------------------
000011C6                           378  DMMFREE
000011C6                           379  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C6                           380  ; SYSTEM (0)
000011C6                           381  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C6                           382  ; OUTPUT   - NONE
000011C6                           383  ; MODIFIES - NONE
000011C6                           384  ; -----------------------------------------------------------------------------
000011C6  48E7 8080                385              MOVEM.L D0/A0,-(A7)
000011CA  2008                     386              MOVE.L  A0,D0
000011CC  C0BC FFFFFFC0            387              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011D2  2040                     388              MOVE.L  D0,A0
000011D4  4250                     389              CLR.W   (A0)
000011D6  4CDF 0101                390              MOVEM.L (A7)+,D0/A0
000011DA  4E75                     391              RTS
000011DC                           392  
000011DC                           393  
000011DC                           394  
000011DC                           395  
000011DC                           396  
000011DC                           397  
000011DC                           398  
000011DC                           399  
000011DC                           400  
000011DC                           401  
000011DC                           402  
000011DC                           403  
000011DC                           404  
000011DC                           405  
000011DC                           406  
000011DC                           407  
000011DC                           408  
000011DC                           409  
000011DC                           410  
000011DC                           411  
000011DC                           412  
000011DC                           413  
000011DC                           414  
000011DC                           415  -------------------- end include --------------------
000011DC                           416              INCLUDE "CONSTANTS.X68"         ; USER CONSTANTS
000011DC                           417  ; =============================================================================
000011DC                           418  ; CONSTANTS
000011DC                           419  ; =============================================================================
000011DC                           420  
000011DC                           421  ; --- INTRO STATE RELATED CONSTANTS -------------------------------------------
000011DC                           422  
000011DC  =0000000E                423  INTTITX     EQU     14                      ; TITLE X COORDINATE
000011DC  =00000007                424  INTTITY     EQU     7                       ; TITLE Y COORDINATE
000011DC  =00DCAA7C                425  INTTITC     EQU     $00DCAA7C               ; TITLE COLOR
000011DC  =00000020                426  INTPRSX     EQU     32                      ; PRESS FIRE X COORDINATE
000011DC  =00000052                427  INTPRSY     EQU     82                      ; PRESS FIRE Y COORDINATE
000011DC  =00FFFFFF                428  INTPRSC     EQU     $00FFFFFF               ; PRESS FIRE COLOR
000011DC  =00000012                429  TXBSIZE     EQU     18                      ;BIG SIZE LETTERS
000011DC  =00000010                430  TXMSIZE     EQU     16                      ;MEDIUM SIZE LETTERS
000011DC  =0000000A                431  TXSSIZE     EQU     10                      ;SMALL SIZE LETTERS
000011DC                           432  
000011DC                           433  ; STATES GAME ---------------------------------------------------------------
000011DC  =FFFFFFFF                434  STANONE     EQU     -1                      ; PLACEHOLDER TO FORCE CHANGE
000011DC  =00000000                435  STAINTR     EQU     0                       ; INTRO/PRESS FIRE STATE
000011DC  =00000001                436  STASPACE    EQU     1                       ; ESPERA EL ESPACIO PARA DISPARAR LA BOLA 
000011DC  =00000002                437  STAPLAY    EQU     2                       ; NORMAL GAME STATE
000011DC                           438  ;STAPLAY2    EQU     3
000011DC                           439  ;STAPLAY3    EQU     4
000011DC  =00000003                440  STAGOVR     EQU     3                       ; GAME OVER STATE
000011DC                           441  ;----------------------------------------------------------------------------
000011DC                           442  
000011DC                           443  ; --- GAME OVER STATE RELATED CONSTANTS ---------------------------------------
000011DC                           444  
000011DC  =00000012                445  GOVERX      EQU     18                      ; GAME OVER X COORDINATE
000011DC  =00000007                446  GOVERY      EQU     7                       ; GAME OVER Y COORDINATE
000011DC  =0000FFFF                447  GOVERC      EQU     $0000FFFF               ; GAME OVER COLOR
000011DC                           448  
000011DC                           449  ; SCREENCTRL---------------------------------------------------------------------
000011DC  =00000201                450  SCRCTRL     EQU     513   
000011DC  =00000005                451  SCRLWIDTH   EQU     5
000011DC  =00000040                452  LIVEWIDTH   EQU     64
000011DC  =00000010                453  LIVEHEIGHT  EQU     16
000011DC  =000000FF                454  LIVECOLOR   EQU     $000000FF               ;ROJO
000011DC  =00000215                455  LIVEPOSX    EQU     SCRCTRL+20
000011DC  =0000001E                456  LIVEPOSY    EQU     30
000011DC= 73 63 6F 72 65 2E ...    457  FILE        DC.B    'score.txt',0
000011E6                           458  ;----------------------------------------------------------------------------
000011E6                           459  
000011E6                           460  
000011E6                           461  ; PLAYER --------------------------------------------------------------------
000011E6                           462  
000011E6  =00000040                463  PINWIDTH1    EQU     64                      ; PLAYER INITIAL WIDTH (PIXELS)
000011E6  =00000038                464  PINWIDTH2    EQU     56
000011E6  =00000030                465  PINWIDTH3    EQU     48
000011E6  =0000000C                466  PHEIGHT     EQU     12                      ; PLAYER HEIGHT (PIXELS)
000011E6  =00ECD59D                467  PCOLOR      EQU     $00ECD59D               ; PLAYER NORMAL COLOR
000011E6  =00000003                468  PINLIVE     EQU     3                       ;PLAYER INTIAL LIVES 
000011E6  =00000008                469  PMOVE       EQU     8                       ;SPEED OF THE PLAYER (ALWAYS THE SAME)
000011E6  =000001D0                470  PPOSY       EQU     SCRHEIGH-PHEIGHT-4      ;POSICION DE LA PLATAFORMA Y
000011E6  =000000E0                471  PINPOSX1     EQU     SCRCTRL/2-PINWIDTH1/2
000011E6  =000000E4                472  PINPOSX2     EQU     SCRCTRL/2-PINWIDTH2/2
000011E6  =000000E8                473  PINPOSX3     EQU     SCRCTRL/2-PINWIDTH3/2
000011E6  =00000041                474  PSCORETX     EQU    65                       ; SCORE X COORDINATE
000011E6  =00000006                475  PSCORETY     EQU    6                       ; SCORE Y COORDINATE
000011E6  =00FFFFFF                476  PSCORECOL   EQU     $00FFFFFF
000011E6                           477  ; ---------------------------------------------------------------------------
000011E6                           478  
000011E6                           479  ; BALL ----------------------------------------------------------------------
000011E6  =0000000A                480  BDIAMET     EQU     10                       ;ANCHURA DE LA BOLA
000011E6  =000000FB                481  BINPOSX     EQU     SCRCTRL/2-BDIAMET/2     ;POSICION DE LA PELOTA X INICIAL
000011E6  =000001CE                482  BINPOSY     EQU     PPOSY-2                 ;POSICION DE LA PELOTA Y INICIAL
000011E6  =FFFFFFFD                483  BINSPEED    EQU     -3                       ;INITIAL SPEED (HASTA LLEGAR A 500 PUNTOS)
000011E6                           484  
000011E6  =00FFFFFF                485  BINCOLOR    EQU     $00FFFFFF
000011E6                           486  
000011E6                           487  ; ---------------------------------------------------------------------------
000011E6                           488  
000011E6                           489  
000011E6                           490  ;BLOCKS-------------------------------------------------------------------------
000011E6  =00000040                491  BLWIDTH     EQU     64
000011E6  =00000010                492  BLHEIGHT     EQU     16
000011E6= 00F7E78E 004E8CF3 ...    493  COLORS      DC.L    BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE
00001216  =0000000C                494  BLROW       EQU     12
00001216  =00000008                495  BLCOL       EQU     8
00001216                           496  
00001216                           497  
00001216                           498  ;-------------------------------------------------------------------------------
00001216                           499  
00001216                           500  ;COLORS-------------------------------------------------------------
00001216  =004E8CF3                501  ORANGE      EQU     $004E8CF3
00001216  =00F7E78E                502  BLUE        EQU     $00F7E78E
00001216  =00FFACAC                503  PURPLE      EQU     $00FFACAC
00001216  =0038EEF8                504  YELLOW      EQU     $0038EEF8
00001216  =0095FF8C                505  GREEN       EQU     $0095FF8C
00001216                           506  ;-------------------------------------------------------------------
00001216                           507  
00001216                           508  
00001216                           509  
00001216                           510  
00001216                           511  -------------------- end include --------------------
00001216                           512              INCLUDE "UTIL.X68"              ; UTILITY MACRO AND SUBROUTINES
00001216                           513  ; =============================================================================
00001216                           514  ; UTILITY MACROS
00001216                           515  ; =============================================================================
00001216                           516  
00001216                           517  UTLSPEN     MACRO
00001216                           518  ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001216                           519  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
00001216                           520  ; OUTPUT   - NONE
00001216                           521  ; MODIFIES - D0,D1
00001216                           522  ; -----------------------------------------------------------------------------
00001216                           523              MOVE.B  #80,D0
00001216                           524              MOVE.L  \1,D1
00001216                           525              TRAP    #15
00001216                           526              ENDM
00001216                           527  ; -----------------------------------------------------------------------------
00001216                           528  UTLSFIL     MACRO
00001216                           529  ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001216                           530  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
00001216                           531  ; OUTPUT   - NONE
00001216                           532  ; MODIFIES - D0,D1
00001216                           533  ; -----------------------------------------------------------------------------
00001216                           534              MOVE.B  #81,D0
00001216                           535              MOVE.L  \1,D1
00001216                           536              TRAP    #15
00001216                           537              ENDM
00001216                           538              
00001216                           539  ; -----------------------------------------------------------------------------
00001216                           540  UTLLOCT     MACRO
00001216                           541  ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001216                           542  ; INPUT    - \1 X, \2 Y
00001216                           543  ; OUTPUT   - NONE
00001216                           544  ; MODIFIES - D0,D1
00001216                           545  ; -----------------------------------------------------------------------------
00001216                           546              MOVE.W  #\1<<8|\2, D1
00001216                           547              MOVE.B  #11,D0
00001216                           548              TRAP    #15
00001216                           549              ENDM
00001216                           550  ; -----------------------------------------------------------------------------
00001216                           551  UTLSIZC     MACRO
00001216                           552  ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001216                           553  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR \2 SIZE (8, 9, 10, 12, 14, 16, 18))
00001216                           554  ; OUTPUT   - NONE
00001216                           555  ; MODIFIES - D0,D1
00001216                           556  ; -----------------------------------------------------------------------------
00001216                           557              MOVE.L  \1,D1
00001216                           558              MOVE.L  #\2<<16|1,D2
00001216                           559              MOVE.B  #21,D0
00001216                           560              TRAP    #15
00001216                           561              ENDM
00001216                           562  ; -----------------------------------------------------------------------------
00001216                           563  UTLSNDS     MACRO
00001216                           564  ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001216                           565  ; INPUT    - \1 ADDRESS TO STRING WITH NAME OF THE FILE, \2 NUM SOUNDS, 
00001216                           566  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001216                           567  ; MODIFIES - D0,A1
00001216                           568  ; -----------------------------------------------------------------------------
00001216                           569              LEA     \1, A1             ;PLAY EXPLOSION SOUND
00001216                           570              MOVE.W  \2,D1
00001216                           571              MOVE.B  #71,D0
00001216                           572              TRAP    #15
00001216                           573              MOVE.B  #72,D0
00001216                           574              TRAP    #15
00001216                           575              ENDM
00001216                           576  ; -----------------------------------------------------------------------------
00001216                           577  UTLSNDST     MACRO
00001216                           578  ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
00001216                           579  ; INPUT    - NONE 
00001216                           580  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001216                           581  ; MODIFIES - D0,A1
00001216                           582  ; -----------------------------------------------------------------------------
00001216                           583              MOVE.L  #3,D2
00001216                           584              MOVE.B  #76,D0
00001216                           585              TRAP    #15
00001216                           586              ENDM
00001216                           587  ; -----------------------------------------------------------------------------            
00001216                           588  UTLSVNAME  MACRO
00001216                           589  ;SAVES THE NAME OS THE PLAYER
00001216                           590  ;MAX CARACTERS: 20
00001216                           591  ; -----------------------------------------------------------------------------
00001216                           592              LEA.L   .INSTRUCT,A1            ;hacer que escriba
00001216                           593              MOVE.B  #14,D0
00001216                           594              TRAP    #15
00001216                           595              
00001216                           596              LEA.L   PNAME,A1                ;GUARDAMOS EL NOMBRE
00001216                           597              MOVE.B  #2,D0
00001216                           598              TRAP    #15                     ;(A1) = PNAME
00001216                           599             
00001216                           600              RTS
00001216                           601  .INSTRUCT   DC.B    'ENTER YOUR NAME: ',0
00001216                           602              ENDM
00001216                           603              
00001216                           604  ; -----------------------------------------------------------------------------
00001216                           605  ; =============================================================================
00001216                           606  ; UTILITY SUBROUTINES
00001216                           607  ; =============================================================================
00001216                           608  ; -----------------------------------------------------------------------------
00001216                           609  UTLCHCOLW
00001216                           610  ; CHECKS COLLISION WITH WALL
00001216                           611  ; INPUT    - D0.W BPOSX1
00001216                           612  ;            D1.W BPOSY1
00001216                           613  ;            D2.W BPOSX2
00001216                           614  ;            D3.W BPOSY2
00001216                           615  ; OUTPUT   - NONE
00001216                           616  ; MODIFIES - NONE
00001216                           617  ; -----------------------------------------------------------------------------
00001216  48E7 F080                618              MOVEM.L D0-D3/A0,-(A7)
0000121A  41F9 000012F8            619              LEA.L   .COLLIS,A0
00001220  B258                     620              CMP.W   (A0)+,D1                ; UP
00001222  6E00 001C                621              BGT     .LEFT
00001226  4479 00002B22            622              NEG.W   BSPEEDY
0000122C  4279 00002B2C            623              CLR.W   BPOSY1
00001232  33FC 000A 00002B2E       624              MOVE.W  #BDIAMET,BPOSY2
0000123A  4EF9 000012F2            625              JMP     .END 
00001240                           626  .LEFT        
00001240  B058                     627              CMP.W   (A0)+,D0
00001242  6E00 001C                628              BGT     .RIGHT
00001246  4479 00002B20            629              NEG.W   BSPEEDX
0000124C  4279 00002B28            630              CLR.W   BPOSX1
00001252  33FC 000A 00002B2A       631              MOVE.W  #BDIAMET,BPOSX2
0000125A  4EF9 000012F2            632              JMP     .END
00001260                           633  .RIGHT      
00001260  B458                     634              CMP.W   (A0)+,D2
00001262  6D00 001E                635              BLT     .DOWN
00001266  4479 00002B20            636              NEG.W   BSPEEDX
0000126C  33FC 0201 00002B2A       637              MOVE.W  #SCRCTRL,BPOSX2
00001274  33FC 01F7 00002B28       638              MOVE.W  #SCRCTRL-BDIAMET,BPOSX1
0000127C  4EF9 000012F2            639              JMP     .END
00001282                           640  .DOWN       
00001282  B658                     641              CMP.W   (A0)+,D3         
00001284  6E00 0008                642              BGT     .MINLIVE                  
00001288  4EF9 000012F2            643              JMP     .END  
0000128E                           644  .MINLIVE       
0000128E                           645m             UTLSNDS .SOUNDL,#1
0000128E                           646m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
0000128E                           647m ; INPUT    - .SOUNDL ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
0000128E                           648m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000128E                           649m ; MODIFIES - D0,A1
0000128E                           650m ; -----------------------------------------------------------------------------
000012A4  33FC 01E0 00002B2E       651              MOVE.W  #SCRHEIGH,BPOSY2
000012AC  33FC 01D6 00002B2C       652              MOVE.W  #SCRHEIGH-BDIAMET,BPOSY1 
000012B4  5379 00002AC8            653              SUB.W   #1,PLIVES                
000012BA  6600 002E                654              BNE     .RESET               
000012BE                           655m             UTLSNDST
000012BE                           656m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
000012BE                           657m ; INPUT    - NONE 
000012BE                           658m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000012BE                           659m ; MODIFIES - D0,A1
000012BE                           660m ; -----------------------------------------------------------------------------
000012C6                           661m             UTLSNDS .SOUNDG,#1
000012C6                           662m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
000012C6                           663m ; INPUT    - .SOUNDG ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
000012C6                           664m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000012C6                           665m ; MODIFIES - D0,A1
000012C6                           666m ; -----------------------------------------------------------------------------
000012DC  33FC 0003 00002AC2       667              MOVE.W  #STAGOVR,(STANEXT)
000012E4  4EF9 000012F2            668              JMP     .END
000012EA                           669  .RESET     
000012EA  33FC 0001 00002AC2       670              MOVE.W  #STASPACE,(STANEXT) 
000012F2                           671             
000012F2                           672  .END        
000012F2  4CDF 010F                673              MOVEM.L (A7)+,D0-D3/A0
000012F6  4E75                     674              RTS
000012F8= 0000 0000 0201 01E0      675  .COLLIS     DC.W    0,0,SCRCTRL,SCRHEIGH
00001300= 67616D65 206F7665 ...    676  .SOUNDG     DC.L    'game over.wav',0
00001314= 6C6F7365 206C6966 ...    677  .SOUNDL     DC.L    'lose life.wav',0
00001328                           678  ; -----------------------------------------------------------------------------
00001328                           679  UTLCHCOLP
00001328                           680  ; CHECKS COLLISION WITH PLATAFORM
00001328                           681  ; INPUT    - D0.W BPOSX1
00001328                           682  ;            D1.W BPOSY1
00001328                           683  ;            D2.W PPOSX2
00001328                           684  ;            D3.W PPOSY2
00001328                           685  ; OUTPUT   
00001328                           686  ; MODIFIES - D4,D5
00001328                           687  ; -----------------------------------------------------------------------------
00001328  48E7 F000                688              MOVEM.L D0-d3,-(A7)
0000132C  383C 01D0                689              MOVE.W  #PPOSY,D4
00001330  B644                     690              CMP.W   D4,D3
00001332  6D00 0086                691              BLT     .END                    ;SI ESTÁ MÁS A ARRIBA DE LA PLATAFORMA NO HAY COLISIÓN
00001336  3839 00002AC4            692              MOVE.W  PPOSX,D4
0000133C  B444                     693              CMP.W   D4,D2
0000133E  6D00 007A                694              BLT     .END                    ;SI ESTÁ MÁS A LA IZQUIERDA DE LA PLATAFORMA NO HAY COLISIÓN
00001342  D879 00002AC6            695              ADD.W   PWIDTH,D4
00001348  B044                     696              CMP.W    D4,D0
0000134A  6E00 006E                697              BGT     .END                    ;SI ESTÁ MÁS A LA DERECHA NO HAY COLISIÓN
0000134E                           698              ;AQUÍ HAY COLISIÓN, TENEMOS QUE DETECTAR CUAL
0000134E  383C 01D0                699              MOVE.W  #PPOSY,D4
00001352  B244                     700              CMP.W   D4,D1
00001354  6E00 005E                701              BGT     .LADOS
00001358  4479 00002B22            702              NEG.W   BSPEEDY                 ;COLISIÓN CON LA PARTE DE ARRIBA
0000135E  33C4 00002B2E            703              MOVE.W  D4,BPOSY2
00001364  0444 000A                704              SUB.W   #BDIAMET,D4
00001368  33C4 00002B2C            705              MOVE.W  D4,BPOSY1       
0000136E                           706  .PLRXMIDDLE 
0000136E  3839 00002AC6            707              MOVE.W  PWIDTH,D4
00001374  E24C                     708              LSR.W   #1,D4
00001376  3A39 00002AC4            709              MOVE.W  PPOSX,D5 
0000137C  DA44                     710              ADD.W   D4,D5                   ;D5 = CENTRO PLATAFORMA
0000137E  BA42                     711              CMP.W   D2,D5                   ;CENTRO - POS PEL
00001380  6B00 001A                712              BMI     .PLRXRIGHT
00001384  3839 00002B20            713              MOVE.W  BSPEEDX,D4
0000138A  6B00 002E                714              BMI     .END
0000138E                           715                                           
0000138E  4444                     716              NEG.W   D4
00001390  33C4 00002B20            717              MOVE.W  D4,BSPEEDX
00001396  4EF9 000013BA            718              JMP     .END
0000139C                           719              
0000139C                           720  .PLRXRIGHT             
0000139C  3839 00002B20            721              MOVE.W  BSPEEDX,D4
000013A2  6A00 0016                722              BPL     .END              ;SI ES POSITIVO SOLO NEGAMOS Y
000013A6  4444                     723              NEG.W   D4
000013A8  33C4 00002B20            724              MOVE.W  D4,BSPEEDX
000013AE  4EF9 000013BA            725              JMP     .END
000013B4                           726  
000013B4                           727  .LADOS      
000013B4  4479 00002B20            728              NEG.W   BSPEEDX                 ;COLISIÓN CON LOS LADOS
000013BA                           729  .END        
000013BA  4CDF 000F                730              MOVEM.L (A7)+,D0-D3 
000013BE  4E75                     731              RTS
000013C0                           732  ; -----------------------------------------------------------------------------
000013C0                           733  UTLCOLBL   
000013C0                           734  ; CHECKS COLLISION WITH BLOCKS
000013C0                           735  ; INPUT    - 
000013C0                           736  ; OUTPUT   
000013C0                           737  ; MODIFIES - NONE
000013C0                           738  ; -----------------------------------------------------------------------------
000013C0  E849                     739              LSR.W   #4,D1           ;POSY/BLHEIGHT. D1 -> FILA
000013C2  343C 000B                740              MOVE.W  #BLROW-1,D2
000013C6  B441                     741              CMP.W   D1,D2           ;SI ESTÁ POR DEBAJO DE LA ÚLTIMA FILA SALTA DIRECTO A END
000013C8  6D00 00D2                742              BLT     .ENDNOCOLISION                    
000013CC  41F9 00002B32            743              LEA.L   BLMATRIX,A0
000013D2  D1C1                     744              ADDA.L  D1,A0           ;CARGAMOS EN A0 LA DIRECCIÓN DEL BYTE DE LA FILA
000013D4                           745                                          
000013D4  EC48                     746              LSR.W   #6,D0           ;D0 -> COLUMNA 
000013D6  363C 0007                747              MOVE.W  #BLCOL-1,D3                           
000013DA  9640                     748              SUB.W   D0,D3           ;D3 -> COLUMNA (DESDE DRCHA) DONDE ESTÁ LA BOLA
000013DC  3E03                     749              MOVE.W  D3,D7
000013DE  6A00 0004                750              BPL     .TEST  
000013E2  4283                     751              CLR.L   D3              ;POR SI SALE NEGATIVO LA REAJUSTAMOS
000013E4                           752  .TEST
000013E4  0710                     753              BTST.B  D3,(A0)         ;MIRAMOS EL BIT DONDE ESTA 
000013E6  6700 00B4                754              BEQ     .ENDNOCOLISION  ; SALTA SI EN ESA POSICION YA HABIA UN 0
000013EA                           755  
000013EA                           756  .IZQ        
000013EA  EC4D                     757              LSR.W   #6,D5           ;D5 -> COLUMNA
000013EC  343C 0007                758              MOVE.W  #BLCOL-1,D2
000013F0  9445                     759              SUB.W   D5,D2           ;D2 -> COLUMNA (DESDE DERECHA) DONDE ESTA EL PUNTO CONTRARIO (SI 1 ENTONCES 2)
000013F2  B443                     760              CMP     D3,D2                  
000013F4  6F00 000E                761              BLE     .CHOQUEDOBLE
000013F8  4479 00002B20            762              NEG.W   BSPEEDX
000013FE                           763              
000013FE  4EF9 0000145C            764              JMP     .ENDCOLISION    ;  (|)______|  COLISION DELADO IZQUIERDO COLISIONANDO POR LA IZQ DEL NLOQUE 
00001404                           765              
00001404                           766  .CHOQUEDOBLE                        ;SI ESTA EN MEDIO DEL BLOQUE  |___()___| COLISION EN MEDIO
00001404                           767                                      ;COMPARAMOS SI LE HA DADO A DOS A LA VEZ |______(|)______|
00001404  B443                     768              CMP     D3,D2
00001406  6700 0036                769              BEQ     .ENMEDIO
0000140A                           770              
0000140A  5A40                     771              ADDI.W  #BDIAMET/2,D0
0000140C  EC48                     772              LSR.W   #6,D0
0000140E  3A3C 0007                773              MOVE.W  #BLCOL-1,D5     ;D1 -> COLUMNA DONDE SE ENCUENTRA EL PUNTO MEDIO DE LA BOLA                         
00001412                           774              
00001412  9A40                     775              SUB.W   D0,D5
00001414  6A00 0004                776              BPL     .TEST2  
00001418  4285                     777              CLR.L   D5              ;POR SI SALE NEGATIVO LA REAJUSTAMOS
0000141A                           778  .TEST2
0000141A                           779              
0000141A  0B10                     780              BTST.B  D5,(A0)         ;MIRAMOS EL BIT DONDE ESTA 
0000141C  6700 0020                781              BEQ     .ENMEDIO
00001420  BE45                     782              CMP     D5,D7
00001422  6700 000E                783              BEQ     .CHOQUEDOBLEIZQ
00001426  4479 00002B22            784              NEG.W   BSPEEDY
0000142C  4EF9 0000145C            785              JMP     .ENDCOLISION
00001432                           786  .CHOQUEDOBLEIZQ
00001432  4479 00002B20            787              NEG.W   BSPEEDX
00001438  4EF9 0000145C            788              JMP     .ENDCOLISION
0000143E                           789  
0000143E                           790              
0000143E                           791  .ENMEDIO            
0000143E                           792              ;COMPARAMOS SI LA PARTE CONTRARIA ESTA DENTO DEL BLOQUE O FUERA
0000143E  B443                     793              CMP     D3,D2
00001440  6D00 000E                794              BLT     .DERECHA
00001444  4479 00002B22            795              NEG.W   BSPEEDY
0000144A  4EF9 0000145C            796              JMP     .ENDCOLISION
00001450                           797  .DERECHA
00001450  4479 00002B20            798              NEG.W   BSPEEDX
00001456  4EF9 0000145C            799              JMP     .ENDCOLISION
0000145C                           800              
0000145C                           801  
0000145C                           802  .ENDCOLISION
0000145C  383C 0001                803              MOVE.W  #1,D4
00001460  0790                     804              BCLR    D3,(A0)      
00001462  0679 0064 00002ACA       805              ADD.W   #100,PSCORE
0000146A  5379 00002B30            806              SUB.W   #1,BLCOUNTER
00001470  3039 00002B30            807              MOVE.W  BLCOUNTER,D0
00001476  B07C 0000                808              CMP     #0,D0
0000147A  6700 0020                809              BEQ     .ENDNOCOLISION
0000147E                           810m             UTLSNDST
0000147E                           811m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
0000147E                           812m ; INPUT    - NONE 
0000147E                           813m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000147E                           814m ; MODIFIES - D0,A1
0000147E                           815m ; -----------------------------------------------------------------------------
00001486                           816m             UTLSNDS  .SOUND,#1
00001486                           817m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001486                           818m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
00001486                           819m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001486                           820m ; MODIFIES - D0,A1
00001486                           821m ; -----------------------------------------------------------------------------
0000149C                           822              
0000149C                           823  .ENDNOCOLISION
0000149C                           824              
0000149C                           825              
0000149C  4E75                     826              RTS
0000149E= 626C6F63 6B732E77 ...    827  .SOUND      DC.L    'blocks.wav',0
000014AE                           828  
000014AE                           829  ; -----------------------------------------------------------------------------
000014AE                           830  UTLSCTRLP   
000014AE                           831  ; PLOTS THE SEPARATION BETWEEN THE GAME AND THE SCREEN CTRL
000014AE                           832  ; INPUT    - NONE
000014AE                           833  ; OUTPUT   - NONE
000014AE                           834  ; MODIFIES - NONE
000014AE                           835  ; -----------------------------------------------------------------------------
000014AE  48E7 FC40                836              MOVEM.L D0-D5/A1,-(A7)    
000014B2                           837              ;DIBUJA LA BARRA DE SEPARACIÓN
000014B2                           838m             UTLSPEN #$00FFFFFF
000014B2                           839m ; WRAPPER FOR SET PEN TRAP 15 TASK.
000014B2                           840m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
000014B2                           841m ; OUTPUT   - NONE
000014B2                           842m ; MODIFIES - D0,D1
000014B2                           843m ; -----------------------------------------------------------------------------
000014BE                           844m             UTLSFIL #$00FFFFFF
000014BE                           845m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000014BE                           846m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
000014BE                           847m ; OUTPUT   - NONE
000014BE                           848m ; MODIFIES - D0,D1
000014BE                           849m ; -----------------------------------------------------------------------------
000014CA  103C 0057                850              MOVE.B  #87,D0
000014CE  323C 0201                851              MOVE.W  #SCRCTRL,D1
000014D2  363C 0206                852              MOVE.W  #SCRCTRL+SCRLWIDTH,D3
000014D6  4282                     853              CLR.L   D2
000014D8  383C 01E0                854              MOVE.W  #SCRHEIGH,D4
000014DC  4E4F                     855              TRAP    #15
000014DE                           856              
000014DE                           857              ;SCORE
000014DE                           858m             UTLLOCT PSCORETX,PSCORETY            
000014DE                           859m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000014DE                           860m ; INPUT    - PSCORETX X, PSCORETY Y
000014DE                           861m ; OUTPUT   - NONE
000014DE                           862m ; MODIFIES - D0,D1
000014DE                           863m ; -----------------------------------------------------------------------------
000014E8                           864m             UTLSPEN #PSCORECOL          ;PENCOLOR Y TAMAÑO
000014E8                           865m ; WRAPPER FOR SET PEN TRAP 15 TASK.
000014E8                           866m ; INPUT    - #PSCORECOL COLOR IN FORMAT $00BBGGRR
000014E8                           867m ; OUTPUT   - NONE
000014E8                           868m ; MODIFIES - D0,D1
000014E8                           869m ; -----------------------------------------------------------------------------
000014F4                           870m             UTLSFIL #$00000000
000014F4                           871m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000014F4                           872m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
000014F4                           873m ; OUTPUT   - NONE
000014F4                           874m ; MODIFIES - D0,D1
000014F4                           875m ; -----------------------------------------------------------------------------
000014FC  43F9 00001514            876              LEA     .TXTSCORE,A1              ;PONE EL TEXTO
00001502  3239 00002ACA            877              MOVE.W  PSCORE,D1
00001508  103C 0011                878              MOVE.B  #17,D0
0000150C  4E4F                     879              TRAP    #15
0000150E                           880              
0000150E  4CDF 023F                881              MOVEM.L (A7)+,D0-D5/A1
00001512  4E75                     882              RTS   
00001514= 53 43 4F 52 45 3A ...    883  .TXTSCORE   DC.B    'SCORE: ',0
0000151C                           884              DS.W    0
0000151C                           885  
0000151C                           886  ;-----------------------------------------------------------------------------
0000151C                           887  UTLREADFILE  
0000151C  48E7 E040                888              MOVEM.L D0-D2/A1,-(A7)
00001520  303C 0032                889              MOVE.W  #50,D0                  ;CIERRA TODOS LOS FICHEROS
00001524  4E4F                     890              TRAP    #15
00001526  43F9 00002B46            891              LEA.L   RNKTABLE,A1
0000152C  303C 0064                892              MOVE.W  #100,D0
00001530                           893  .LOOP
00001530  4219                     894              CLR.B   (A1)+
00001532  51C8 FFFC                895              DBRA    D0,.LOOP
00001536  43F8 11DC                896              LEA     FILE,A1
0000153A  103C 0033                897              MOVE.B  #51,D0
0000153E  4E4F                     898              TRAP    #15                     ;ABRE UN FICHERO EXISTENTE, D1 = FILE ID
00001540                           899  
00001540                           900              
00001540  43F9 00002B46            901              LEA.L   RNKTABLE,A1
00001546  7464                     902              MOVE.L  #100,D2                 ;BYTES QUE LEE
00001548  103C 0035                903              MOVE.B  #53,D0
0000154C  4E4F                     904              TRAP    #15                     ;LEE DEL FICHERO
0000154E  B47C 0064                905              CMP     #$64,D2
00001552  6600 0004                906              BNE     .SALTA
00001556  7400                     907              MOVE.L  #0,D2
00001558                           908  .SALTA
00001558  23C2 00002B42            909              MOVE.L  D2,POSRNK
0000155E                           910              ;GUARDA EN EL BUFFER LO QUE HA LEIDO
0000155E  103C 0038                911              MOVE.B  #56,D0
00001562  4E4F                     912              TRAP    #15                     ;CIERRA EL FICHERO
00001564  4CDF 0207                913              MOVEM.L (A7)+,D0-D2/A1
00001568  4E75                     914              RTS
0000156A                           915  ;----------------------------------------------------------------------
0000156A                           916  UTLREADRNK
0000156A  48E7 FE40                917              MOVEM.L D0-D6/A1,-(A7)
0000156E                           918              ; D4 = EN QUE FILA ESTAMOS      
0000156E  4284                     919              CLR.L   D4
00001570                           920              
00001570  3A3C 0009                921              MOVE.W  #9,D5                   ;DBRA
00001574                           922              
00001574  2239 00002B42            923              MOVE.L  POSRNK,D1
0000157A  B27C 0064                924              CMP     #$64,D1
0000157E  6700 004A                925              BEQ     .END
00001582  3C3C 0014                926              MOVE.W  #20,D6
00001586                           927            
00001586                           928  .LOOP
00001586  43F9 00002B46            929              LEA.L   RNKTABLE,A1       1000   
0000158C  3004                     930              MOVE.W  D4,D0                
0000158E  C0FC 000A                931              MULU.W  #10,D0                  ;PARA LEER EL NOMBRE
00001592                           932              
00001592  D3C0                     933              ADDA.L  D0,A1                   ;A0 = RNKTABLE + 10*FILA
00001594                           934              
00001594  323C 3C00                935              MOVE.W  #60<<8,D1
00001598  D246                     936              ADD.W   D6,D1
0000159A  103C 000B                937              MOVE.B  #11,D0
0000159E  4E4F                     938              TRAP    #15
000015A0                           939              ;PRIMERO LEEMOS SCORE  (|SCORE|      NAME      |)
000015A0  103C 0003                940              MOVE.B  #3,D0 
000015A4  4281                     941              CLR.L   D1                  
000015A6  3211                     942              MOVE.W  (A1),D1
000015A8  4E4F                     943              TRAP    #15                     ;AQUI EN TEORIA VISUALIZA EL TEXTO, el score
000015AA  5489                     944              ADDA.L  #2,A1                   ;PARA LEER EL NOMBRE (8B)
000015AC                           945              
000015AC  323C 4600                946              MOVE.W  #70<<8,D1
000015B0  D246                     947              ADD.W   D6,D1
000015B2  103C 000B                948              MOVE.B  #11,D0
000015B6  4E4F                     949              TRAP    #15    
000015B8  5246                     950              ADDQ.W  #1,D6      
000015BA                           951              ;PRIMERO LEEMOS SCORE  (|SCORE|      NAME      |)
000015BA  103C 0001                952              MOVE.B  #1,D0                   
000015BE  323C 0008                953              MOVE.W  #8,D1                   ;8 BYTES QUE TIENE QUE IMPRIMIR
000015C2  4E4F                     954              TRAP    #15                     ;AQUI EN TEORIA VISUALIZA EL TEXTO, el score
000015C4                           955            
000015C4  5284                     956              ADD.L  #1,D4
000015C6  51CD FFBE                957              DBRA    D5,.LOOP
000015CA                           958  .END
000015CA  4CDF 027F                959              MOVEM.L (A7)+,D0-D6/A1
000015CE  4E75                     960              RTS
000015D0                           961  
000015D0                           962  ;--------------------------------------------------------------------------------          
000015D0                           963  UTLWRRNK    
000015D0  48E7 C0C0                964              MOVEM.L D0-D1/A0-A1,-(A7)
000015D4                           965              
000015D4  43F9 00002B46            966              LEA.L   RNKTABLE,A1
000015DA  2239 00002B42            967              MOVE.L  POSRNK,D1
000015E0  D3C1                     968              ADDA.L  D1,A1
000015E2                           969              
000015E2                           970  .OCUPADO
000015E2                           971              ;A1 = TIENE LA PRIMERA POSICION DONDE ESCRIBE (LA MAS VIEJA)
000015E2  32B9 00002ACA            972              MOVE.W  PSCORE,(A1)
000015E8  5489                     973              ADDA.L  #2,A1
000015EA  303C 0007                974              MOVE.W  #7,D0
000015EE  41F9 00002AD0            975              LEA.L   PNAME,A0
000015F4                           976  .LOOP
000015F4  12D8                     977              MOVE.B  (A0)+,(A1)+
000015F6  51C8 FFFC                978              DBRA    D0,.LOOP
000015FA                           979  ..          
000015FA  4CDF 0303                980              MOVEM.L (A7)+,D0-D1/A0-A1
000015FE  4E75                     981              RTS
00001600                           982  ;--------------------------------------------------------------------------------- 
00001600                           983  UTLWRFILE
00001600  48E7 E040                984              MOVEM.L D0-D2/A1,-(A7)
00001604  103C 0032                985              MOVE.B  #50,D0  ;CERRAMOS TODOS LOS FICHERO
00001608  4E4F                     986              TRAP    #15
0000160A                           987              
0000160A  43F8 11DC                988              LEA.L   FILE,A1                 ;ABRE NUESTRO FICHERO
0000160E  103C 0033                989              MOVE.B  #51,D0                  
00001612  4E4F                     990              TRAP    #15                     ;DEVUELVE EL ID DE FICHERO EN D1
00001614                           991              
00001614  43F9 00002B46            992              LEA.L   RNKTABLE,A1                ;escribimos en el fichero 
0000161A                           993              ;D1 YA TINENE EL ID DEL FICHERO
0000161A  2439 00002B42            994              MOVE.L  POSRNK,D2  
00001620  0642 000A                995              ADD.W   #10,D2         
00001624                           996              ;ADD.W   #1,D2                   ;PARA EL CARACTER NULL
00001624  103C 0036                997              MOVE.B  #54,D0
00001628  4E4F                     998              TRAP    #15
0000162A                           999             
0000162A  103C 0038               1000              MOVE.B  #56,D0                  ;cerramos fichero
0000162E  4E4F                    1001              TRAP    #15
00001630  4CDF 0207               1002              MOVEM.L (A7)+,D0-D2/A1
00001634  4E75                    1003              RTS
00001636                          1004  
00001636                          1005  
00001636                          1006  
00001636                          1007  
00001636                          1008  
00001636                          1009  -------------------- end include --------------------
00001636                          1010              INCLUDE "PLAYER.X68"            ; PLAYER MANAGEMENT
00001636                          1011  ; -----------------------------------------------------------------------------
00001636                          1012  ;           PLAYER
00001636                          1013  ; -----------------------------------------------------------------------------
00001636                          1014  PLRINIT
00001636                          1015  ; INITIALIZES THE PLAYER TO LEVEL 1
00001636                          1016  ; INPUT    - NONE
00001636                          1017  ; OUTPUT   - NONE
00001636                          1018  ; MODIFIES - NONE
00001636                          1019  ; -----------------------------------------------------------------------------
00001636  33FC 00E0 00002AC4      1020              MOVE.W  #PINPOSX1,PPOSX
0000163E  33FC 0040 00002AC6      1021              MOVE.W  #PINWIDTH1,PWIDTH
00001646  4E75                    1022              RTS
00001648                          1023  ; -----------------------------------------------------------------------------
00001648                          1024  PLRLEV2
00001648                          1025  ; INITIALIZES THE PLAYER TO LEVEL 2
00001648                          1026  ; INPUT    - NONE
00001648                          1027  ; OUTPUT   - NONE
00001648                          1028  ; MODIFIES - NONE
00001648                          1029  ; -----------------------------------------------------------------------------
00001648  33FC 00E4 00002AC4      1030              MOVE.W  #PINPOSX2,PPOSX
00001650  33FC 0038 00002AC6      1031              MOVE.W  #PINWIDTH2,PWIDTH
00001658  4E75                    1032              RTS        
0000165A                          1033  ; -----------------------------------------------------------------------------
0000165A                          1034  PLRLEV3
0000165A                          1035  ; INITIALIZES THE PLAYER TO LEVEL 3
0000165A                          1036  ; INPUT    - NONE
0000165A                          1037  ; OUTPUT   - NONE
0000165A                          1038  ; MODIFIES - NONE
0000165A                          1039  ; -----------------------------------------------------------------------------
0000165A  33FC 00E8 00002AC4      1040              MOVE.W  #PINPOSX3,PPOSX
00001662  33FC 0030 00002AC6      1041              MOVE.W  #PINWIDTH3,PWIDTH
0000166A  4E75                    1042              RTS     
0000166C                          1043  ; -----------------------------------------------------------------------------
0000166C                          1044  PLRUPD
0000166C                          1045  ; UPDATES THE POSITION, LIVES AND SCORE OF THE PLAYER
0000166C                          1046  ; INPUT     - NONE
0000166C                          1047  ; OUTPUT    - NONE
0000166C                          1048  ; MODIFIES  - NONE
0000166C                          1049  ; -----------------------------------------------------------------------------
0000166C  48E7 6000               1050              MOVEM.L D1-D2,-(A7)
00001670  1239 00001E14           1051              MOVE.B  KBDVAL,D1  
00001676  E219                    1052              ROR.B   #1,D1                   ;IZQUIERDA
00001678  6400 0016               1053              BCC     .RIGHTKEY               ;CUANDO C = 0
0000167C                          1054              ;CUANDO PPOSX ES 0 NO TINENE QUE MOVERSE MAS A LA IZQ
0000167C  3439 00002AC4           1055              MOVE.W  PPOSX,D2
00001682  B47C 0000               1056              CMP.W    #0,D2
00001686  6F00 0008               1057              BLE     .RIGHTKEY
0000168A  5179 00002AC4           1058              SUB.W   #PMOVE,(PPOSX)
00001690                          1059  .RIGHTKEY
00001690  E209                    1060              LSR.B   #1,D1                   
00001692  E219                    1061              ROR.B   #1,D1                   
00001694  6400 001C               1062              BCC     .END
00001698                          1063              ;CUANDO PPOSX ES IGUAL A SCRWIDTH+PWIDTH NO TIENE QUE MOVERSE A LA DERECHA
00001698  3439 00002AC4           1064              MOVE.W  PPOSX,D2
0000169E  D479 00002AC6           1065              ADD.W   PWIDTH,D2 
000016A4                          1066  
000016A4  B47C 01FC               1067              CMP.W    #SCRCTRL-SCRLWIDTH,D2
000016A8  6C00 0008               1068              BGE     .END
000016AC  5079 00002AC4           1069              ADD.W   #PMOVE,PPOSX
000016B2                          1070  .END
000016B2  4CDF 0006               1071              MOVEM.L (A7)+,D1-D2
000016B6  4E75                    1072              RTS
000016B8                          1073  
000016B8                          1074  ; -----------------------------------------------------------------------------
000016B8                          1075  PPLOT
000016B8                          1076  ; PLOTS THE PLAYER ITS LIFE AND THE SCORE
000016B8                          1077  ; INPUT    - NONE
000016B8                          1078  ; OUTPUT   - NONE
000016B8                          1079  ; MODIFIES - NONE
000016B8                          1080  ; -----------------------------------------------------------------------------
000016B8  48E7 FC40               1081              MOVEM.L  D0-D5/A1,-(A7)
000016BC                          1082              ;PLOT THE PLATAFORM
000016BC                          1083m             UTLSPEN #PCOLOR 
000016BC                          1084m ; WRAPPER FOR SET PEN TRAP 15 TASK.
000016BC                          1085m ; INPUT    - #PCOLOR COLOR IN FORMAT $00BBGGRR
000016BC                          1086m ; OUTPUT   - NONE
000016BC                          1087m ; MODIFIES - D0,D1
000016BC                          1088m ; -----------------------------------------------------------------------------
000016C8                          1089m             UTLSFIL #PCOLOR
000016C8                          1090m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000016C8                          1091m ; INPUT    - #PCOLOR COLOR IN FORMAT $00BBGGRR
000016C8                          1092m ; OUTPUT   - NONE
000016C8                          1093m ; MODIFIES - D0,D1
000016C8                          1094m ; -----------------------------------------------------------------------------
000016D4  3239 00002AC4           1095              MOVE.W  PPOSX,D1
000016DA  343C 01D0               1096              MOVE.W  #PPOSY,D2                    
000016DE  3639 00002AC4           1097              MOVE.W  PPOSX,D3
000016E4  3839 00002AC6           1098              MOVE.W  PWIDTH,D4 
000016EA  D644                    1099              ADD.W   D4,D3
000016EC  383C 01DC               1100              MOVE.W  #PPOSY+PHEIGHT,D4
000016F0  303C 0057               1101              MOVE.W  #87,D0
000016F4  4E4F                    1102              TRAP    #15
000016F6                          1103              
000016F6                          1104              ;PLOT LIFE
000016F6  3A39 00002AC8           1105              MOVE.W  PLIVES,D5
000016FC  6700 0088               1106              BEQ     .END
00001700                          1107m             UTLSPEN #LIVECOLOR 
00001700                          1108m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001700                          1109m ; INPUT    - #LIVECOLOR COLOR IN FORMAT $00BBGGRR
00001700                          1110m ; OUTPUT   - NONE
00001700                          1111m ; MODIFIES - D0,D1
00001700                          1112m ; -----------------------------------------------------------------------------
0000170C                          1113m             UTLSFIL #LIVECOLOR
0000170C                          1114m ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000170C                          1115m ; INPUT    - #LIVECOLOR COLOR IN FORMAT $00BBGGRR
0000170C                          1116m ; OUTPUT   - NONE
0000170C                          1117m ; MODIFIES - D0,D1
0000170C                          1118m ; -----------------------------------------------------------------------------
00001718  5345                    1119              SUB.W   #1,D5             
0000171A  103C 0057               1120              MOVE.B  #87,D0
0000171E  323C 0215               1121              MOVE.W  #LIVEPOSX,D1
00001722  3601                    1122              MOVE.W  D1,D3
00001724  0643 0040               1123              ADD.W   #LIVEWIDTH,D3
00001728  343C 001E               1124              MOVE.W  #LIVEPOSY,D2
0000172C  3802                    1125              MOVE.W  D2,D4
0000172E  0644 0010               1126              ADD.W   #LIVEHEIGHT,D4
00001732                          1127  .LIFES           
00001732  4E4F                    1128              TRAP    #15
00001734  3203                    1129              MOVE.W  D3,D1
00001736  0643 0040               1130              ADD.W   #LIVEWIDTH,D3
0000173A  51CD FFF6               1131              DBRA    D5,.LIFES
0000173E                          1132              
0000173E                          1133              ;PLOT SCORE
0000173E                          1134m             UTLLOCT PSCORETX,PSCORETY  
0000173E                          1135m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
0000173E                          1136m ; INPUT    - PSCORETX X, PSCORETY Y
0000173E                          1137m ; OUTPUT   - NONE
0000173E                          1138m ; MODIFIES - D0,D1
0000173E                          1139m ; -----------------------------------------------------------------------------
00001748                          1140m             UTLSFIL #$00000000
00001748                          1141m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001748                          1142m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
00001748                          1143m ; OUTPUT   - NONE
00001748                          1144m ; MODIFIES - D0,D1
00001748                          1145m ; -----------------------------------------------------------------------------
00001750  43F9 0000178C           1146              LEA     .TXTSCORE,A1             
00001756  3239 00002ACA           1147              MOVE.W  PSCORE,D1
0000175C  103C 0011               1148              MOVE.B  #17,D0
00001760  4E4F                    1149              TRAP    #15
00001762                          1150              
00001762                          1151              ;PLOT LEVEL
00001762                          1152m             UTLLOCT PSCORETX,PSCORETY+2  
00001762                          1153m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001762                          1154m ; INPUT    - PSCORETX X, PSCORETY+2 Y
00001762                          1155m ; OUTPUT   - NONE
00001762                          1156m ; MODIFIES - D0,D1
00001762                          1157m ; -----------------------------------------------------------------------------
0000176C                          1158m             UTLSFIL #$00000000
0000176C                          1159m ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000176C                          1160m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
0000176C                          1161m ; OUTPUT   - NONE
0000176C                          1162m ; MODIFIES - D0,D1
0000176C                          1163m ; -----------------------------------------------------------------------------
00001774  43F9 00001794           1164              LEA     .TXTLEVEL,A1              
0000177A  3239 00002ACE           1165              MOVE.W  LEVEL,D1
00001780  103C 0011               1166              MOVE.B  #17,D0
00001784  4E4F                    1167              TRAP    #15
00001786                          1168  .END            
00001786  4CDF 023F               1169              MOVEM.L (A7)+,D0-D5/A1
0000178A  4E75                    1170              RTS
0000178C                          1171              
0000178C= 53 43 4F 52 45 3A ...   1172  .TXTSCORE   DC.B    'SCORE: ',0
00001794= 4C 45 56 45 4C 3A ...   1173  .TXTLEVEL   DC.B    'LEVEL: ',0
0000179C                          1174              DS.W    0
0000179C                          1175  -------------------- end include --------------------
0000179C                          1176              INCLUDE "STATES.X68"            ; GAME STATES MANAGEMENT
0000179C                          1177  ; =============================================================================
0000179C                          1178  ; GAME STATE MANAGEMENT
0000179C                          1179  ; =============================================================================
0000179C                          1180  
0000179C                          1181  ; -----------------------------------------------------------------------------
0000179C                          1182  STAINIT
0000179C                          1183  ; INITALIZES THE STATE MANAGER
0000179C                          1184  ; INPUT    - NONE
0000179C                          1185  ; OUTPUT   - NONE
0000179C                          1186  ; MODIFIES - NONE
0000179C                          1187  ; -----------------------------------------------------------------------------
0000179C  33FC FFFF 00002AC0      1188              MOVE.W  #STANONE,(STACUR)       ;STACUR = -1 
000017A4                          1189             ; TENEMOS QUE SABER SI -1 = CAMBIO O SE QUEDA EN EL MISMO
000017A4  33FC 0000 00002AC2      1190              MOVE.W  #STAINTR,(STANEXT)      ;STAINTR = LA PANTALLA INTRO = 0
000017AC  4E75                    1191              RTS
000017AE                          1192  
000017AE                          1193  ; -----------------------------------------------------------------------------
000017AE                          1194  STAUPD
000017AE                          1195  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
000017AE                          1196  ; INPUT    - NONE
000017AE                          1197  ; OUTPUT   - NONE
000017AE                          1198  ; MODIFIES - NONE
000017AE                          1199  ; -----------------------------------------------------------------------------
000017AE  48E7 8080               1200              MOVEM.L D0/A0,-(A7)
000017B2  4280                    1201              CLR.L   D0
000017B4  3039 00002AC2           1202              MOVE.W  (STANEXT),D0
000017BA  B079 00002AC0           1203              CMP.W   (STACUR),D0
000017C0  6700 0012               1204              BEQ     .DOUPD
000017C4                          1205              
000017C4  33C0 00002AC0           1206              MOVE.W  D0,(STACUR)             ;AHORA ES LA PANTALLA DE INTRO
000017CA  E588                    1207              LSL.L   #2,D0
000017CC  2040                    1208              MOVE.L  D0,A0
000017CE  2068 17EC               1209              MOVE.L  .INITBL(A0),A0
000017D2                          1210              
000017D2  4E90                    1211              JSR     (A0)
000017D4  4280                    1212  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
000017D6  3039 00002AC0           1213              MOVE.W  (STACUR),D0
000017DC  E588                    1214              LSL.L   #2,D0
000017DE  2040                    1215              MOVE.L  D0,A0
000017E0  2068 17FC               1216              MOVE.L  .UPDTBL(A0),A0
000017E4  4E90                    1217              JSR     (A0)
000017E6  4CDF 0101               1218              MOVEM.L (A7)+,D0/A0
000017EA  4E75                    1219              RTS
000017EC= 000018C8 00001844 ...   1220  .INITBL     DC.L    STAINTRI,STAPLAYI,STAEMPTYP,STAEMPTYG ;EL 0 ES VACIAR LA MEMORIA DEL JUEGO
000017FC                          1221                                               ;EL 1 ES LO QUE INICIA EL JUEGO = PINIT
000017FC                          1222                                               ;EL 2 ES NO HACER NADA 
000017FC= 00001914 0000186E ...   1223  .UPDTBL     DC.L    STAINTRU,STASPACEU,STAPLAYU,STAGOVRU
0000180C                          1224                                              ;EL 0 ES SI SE PULSA ESPACIO CAMBIAR EL STANEXT A PLAY
0000180C                          1225                                              ;EL 2 HACE QUE SE UPDATE 
0000180C                          1226  
0000180C                          1227  ; -----------------------------------------------------------------------------
0000180C                          1228  STAPLOT
0000180C                          1229  ; PERFORMS STATE PLOT
0000180C                          1230  ; INPUT    - NONE
0000180C                          1231  ; OUTPUT   - NONE
0000180C                          1232  ; MODIFIES - NONE
0000180C                          1233  ; -----------------------------------------------------------------------------
0000180C  48E7 8080               1234              MOVEM.L D0/A0,-(A7)
00001810  4280                    1235              CLR.L   D0
00001812  3039 00002AC0           1236              MOVE.W  (STACUR),D0
00001818  E588                    1237              LSL.L   #2,D0
0000181A  2040                    1238              MOVE.L  D0,A0
0000181C  2068 1828               1239              MOVE.L  .PLTTBL(A0),A0          ;ELIGE QUE HACER
00001820  4E90                    1240              JSR     (A0)
00001822  4CDF 0101               1241              MOVEM.L (A7)+,D0/A0
00001826  4E75                    1242              RTS
00001828= 00001982 000018A6 ...   1243  .PLTTBL     DC.L    STAINTRP,STAPLAYP,STAPLAYP,STAGOVRP
00001838                          1244                             ;SPACE      NIVEL1   NIVEL2    NIVEL3   
00001838                          1245  
00001838                          1246  ; -----------------------------------------------------------------------------
00001838                          1247  STAEMPTYP
00001838                          1248  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
00001838                          1249  ; INPUT    - NONE
00001838                          1250  ; OUTPUT   - NONE
00001838                          1251  ; MODIFIES - NONE
00001838                          1252  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
00001838                          1253  ; -----------------------------------------------------------------------------
00001838  4E75                    1254              RTS
0000183A                          1255  ; -----------------------------------------------------------------------------
0000183A                          1256  STAEMPTYG
0000183A                          1257  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
0000183A                          1258  ; INPUT    - NONE
0000183A                          1259  ; OUTPUT   - NONE
0000183A                          1260  ; MODIFIES - NONE
0000183A                          1261  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
0000183A                          1262  ; -----------------------------------------------------------------------------
0000183A  4EB8 15D0               1263              JSR     UTLWRRNK                ;ESCRIBE EN EL TABLE
0000183E  4EB8 1600               1264              JSR     UTLWRFILE               ;ESCRIBIMOS EN EL FICHERO
00001842  4E75                    1265              RTS
00001844                          1266  
00001844                          1267  ; -----------------------------------------------------------------------------
00001844                          1268  STAPLAYI    ;DEL NIVEL1, COMIENZO
00001844                          1269  
00001844                          1270  ; PLAY STATE INITIALIZATION
00001844                          1271  ; INPUT    - NONE
00001844                          1272  ; OUTPUT   - NONE
00001844                          1273  ; MODIFIES - NONE
00001844                          1274  ; NOTE     - JUST A WRAPPER FOR PLRINIT
00001844                          1275  ; -----------------------------------------------------------------------------
00001844  48E7 FFFE               1276              MOVEM.L D0-D7/A0-A6,-(A7)
00001848  33FC 00FB 00002B28      1277              MOVE.W  #BINPOSX,BPOSX1
00001850  33FC 01CE 00002B2E      1278              MOVE.W  #BINPOSY,BPOSY2
00001858  33FC 0105 00002B2A      1279              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
00001860  33FC 01C4 00002B2C      1280              MOVE.W  #BINPOSY-BDIAMET,BPOSY1
00001868                          1281              
00001868  4CDF 7FFF               1282              MOVEM.L (A7)+,D0-D7/A0-A6
0000186C  4E75                    1283              RTS
0000186E                          1284  ; -----------------------------------------------------------------------------
0000186E                          1285  STASPACEU
0000186E                          1286  ; WAITS FOR SPACE TO BE PRESSED, AND BEGIN THE GAME
0000186E                          1287  ; INPUT    - NONE
0000186E                          1288  ; OUTPUT   - NONE
0000186E                          1289  ; MODIFIES - NONE
0000186E                          1290  ; -----------------------------------------------------------------------------
0000186E  33FC 00E0 00002AC4      1291              MOVE.W  #PINPOSX1,PPOSX
00001876  0839 0004 00001E15      1292              BTST.B  #KBDBITF1,(KBDEDGE)
0000187E  6700 000A               1293              BEQ     .END
00001882  33FC 0002 00002AC2      1294              MOVE.W  #STAPLAY,(STANEXT)
0000188A                          1295  .END        
0000188A  4E75                    1296              RTS
0000188C                          1297                               
0000188C                          1298  
0000188C                          1299  ; -----------------------------------------------------------------------------
0000188C                          1300  STAPLAYU
0000188C                          1301  ; PLAY STATE UPDATE
0000188C                          1302  ; INPUT    - NONE
0000188C                          1303  ; OUTPUT   - NONE
0000188C                          1304  ; MODIFIES - NONE
0000188C                          1305  ; -----------------------------------------------------------------------------
0000188C  48E7 FFFE               1306              MOVEM.L D0-D7/A0-A6,-(A7)
00001890  4EB8 166C               1307              JSR     PLRUPD
00001894  4EB9 00001B0A           1308              JSR     BUPD    
0000189A  4EB9 00001CBA           1309              JSR     BLUPD
000018A0  4CDF 7FFF               1310              MOVEM.L (A7)+,D0-D7/A0-A6          
000018A4  4E75                    1311              RTS
000018A6                          1312  ; -----------------------------------------------------------------------------
000018A6                          1313  STAPLAYP
000018A6                          1314  ; PLAY STATE PLOT
000018A6                          1315  ; INPUT    - NONE
000018A6                          1316  ; OUTPUT   - NONE
000018A6                          1317  ; MODIFIES - NONE
000018A6                          1318  ; -----------------------------------------------------------------------------
000018A6  48E7 FFFE               1319              MOVEM.L D0-D7/A0-A6,-(A7)
000018AA  4EB8 156A               1320              JSR     UTLREADRNK
000018AE  4EB9 00001D58           1321              JSR     BLPLOT
000018B4  4EB8 16B8               1322              JSR     PPLOT
000018B8  4EB9 00001BD6           1323              JSR     BPLOT
000018BE  4EB8 14AE               1324              JSR     UTLSCTRLP
000018C2  4CDF 7FFF               1325              MOVEM.L (A7)+,D0-D7/A0-A6 
000018C6  4E75                    1326              RTS
000018C8                          1327  
000018C8                          1328  ; -----------------------------------------------------------------------------
000018C8                          1329  STAINTRI                  ;VACIA LA MEMORIA DEL JUEGO
000018C8                          1330  ; PARA QUE EL SCORE LA VIDA SE VUELVAN A REINICIAR
000018C8                          1331  
000018C8                          1332  ; INTRO STATE INIT
000018C8                          1333  ; INPUT    - NONE
000018C8                          1334  ; OUTPUT   - NONE
000018C8                          1335  ; MODIFIES - NONE
000018C8                          1336  ; NOTE     - JUST A WRAPPER FOR DMMINIT TO RELEASE ALL MEMORY
000018C8                          1337  ; -----------------------------------------------------------------------------
000018C8                          1338                ;LEE TODOS LOS DATOS DEL FICHERO Y LO GUARDA EN LA TABLA
000018C8  4EB8 111A               1339              JSR     DMMINIT
000018CC                          1340  
000018CC  4EB8 151C               1341              JSR     UTLREADFILE
000018D0                          1342               ;GUARDA EL NOMBRE EN LA MEMORIA
000018D0                          1343m             UTLSPEN #$00FFFFFF          ;COLOR
000018D0                          1344m ; WRAPPER FOR SET PEN TRAP 15 TASK.
000018D0                          1345m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
000018D0                          1346m ; OUTPUT   - NONE
000018D0                          1347m ; MODIFIES - D0,D1
000018D0                          1348m ; -----------------------------------------------------------------------------
000018DC                          1349m             UTLLOCT 20,20           ;COLOCA
000018DC                          1350m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000018DC                          1351m ; INPUT    - 20 X, 20 Y
000018DC                          1352m ; OUTPUT   - NONE
000018DC                          1353m ; MODIFIES - D0,D1
000018DC                          1354m ; -----------------------------------------------------------------------------
000018E6                          1355m             UTLSVNAME
000018E6                          1356m ;SAVES THE NAME OS THE PLAYER
000018E6                          1357m ;MAX CARACTERS: 20
000018E6                          1358m ; -----------------------------------------------------------------------------
00001912                          1359              
00001912                          1360  
00001912                          1361              
00001912  4E75                    1362              RTS
00001914                          1363  ; -----------------------------------------------------------------------------
00001914                          1364  STAINTRU
00001914                          1365  ; INTRO STATE UPDATE
00001914                          1366  ; INPUT    - NONE
00001914                          1367  ; OUTPUT   - NONE
00001914                          1368  ; MODIFIES - NONE
00001914                          1369  ; -----------------------------------------------------------------------------
00001914  48E7 FFFE               1370              MOVEM.L D0-D7/A0-A6,-(A7)
00001918                          1371m             UTLSNDS .SOUND,#1
00001918                          1372m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001918                          1373m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
00001918                          1374m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001918                          1375m ; MODIFIES - D0,A1
00001918                          1376m ; -----------------------------------------------------------------------------
0000192E  0839 0004 00001E15      1377              BTST.B  #KBDBITF1,(KBDEDGE)
00001936  6700 0030               1378              BEQ     .END
0000193A                          1379              
0000193A  33FC 0001 00002AC2      1380              MOVE.W  #STASPACE,(STANEXT)
00001942                          1381m             UTLSNDST
00001942                          1382m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
00001942                          1383m ; INPUT    - NONE 
00001942                          1384m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001942                          1385m ; MODIFIES - D0,A1
00001942                          1386m ; -----------------------------------------------------------------------------
0000194A  4EB8 1636               1387              JSR     PLRINIT
0000194E  4EB9 00001C16           1388              JSR     BLINIT
00001954  4EB9 00001A76           1389              JSR     BINIT
0000195A  33FC 0003 00002AC8      1390              MOVE.W  #PINLIVE,PLIVES
00001962  4279 00002ACA           1391              CLR.W   PSCORE            
00001968                          1392  .END        
00001968  4CDF 7FFF               1393              MOVEM.L (A7)+,D0-D7/A0-A6
0000196C  4E75                    1394              RTS
0000196E= 73746172 74206C61 ...   1395  .SOUND      DC.L    'start largo.wav',0
00001982                          1396  
00001982                          1397  ; -----------------------------------------------------------------------------
00001982                          1398  STAINTRP
00001982                          1399  ; INTRO STATE PLOT
00001982                          1400  ; INPUT    - NONE
00001982                          1401  ; OUTPUT   - NONE
00001982                          1402  ; MODIFIES - NONE
00001982                          1403  ; -----------------------------------------------------------------------------
00001982  48E7 E040               1404              MOVEM.L D0-D2/A1,-(A7)
00001986                          1405              ;TITULO
00001986                          1406m             UTLLOCT INTTITX,INTTITY      
00001986                          1407m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001986                          1408m ; INPUT    - INTTITX X, INTTITY Y
00001986                          1409m ; OUTPUT   - NONE
00001986                          1410m ; MODIFIES - D0,D1
00001986                          1411m ; -----------------------------------------------------------------------------
00001990                          1412m             UTLSIZC #INTTITC,TXBSIZE
00001990                          1413m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001990                          1414m ; INPUT    - #INTTITC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001990                          1415m ; OUTPUT   - NONE
00001990                          1416m ; MODIFIES - D0,D1
00001990                          1417m ; -----------------------------------------------------------------------------
000019A2  43F9 000019DC           1418              LEA     .TITSTR,A1            
000019A8  103C 000E               1419              MOVE.B  #14,D0
000019AC  4E4F                    1420              TRAP    #15
000019AE                          1421              
000019AE                          1422              ;START
000019AE                          1423m             UTLLOCT INTPRSX,INTPRSY
000019AE                          1424m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000019AE                          1425m ; INPUT    - INTPRSX X, INTPRSY Y
000019AE                          1426m ; OUTPUT   - NONE
000019AE                          1427m ; MODIFIES - D0,D1
000019AE                          1428m ; -----------------------------------------------------------------------------
000019B8                          1429m             UTLSIZC #INTPRSC,TXSSIZE
000019B8                          1430m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
000019B8                          1431m ; INPUT    - #INTPRSC COLOR IN FORMAT $00BBGGRR TXSSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
000019B8                          1432m ; OUTPUT   - NONE
000019B8                          1433m ; MODIFIES - D0,D1
000019B8                          1434m ; -----------------------------------------------------------------------------
000019CA  43F9 000019EC           1435              LEA     .PRSSTR,A1
000019D0  103C 000E               1436              MOVE.B  #14,D0
000019D4  4E4F                    1437              TRAP    #15
000019D6                          1438              
000019D6                          1439              
000019D6  4CDF 0207               1440              MOVEM.L (A7)+,D0-D2/A1
000019DA  4E75                    1441              RTS
000019DC= 42 72 65 61 6B 69 ...   1442  .TITSTR     DC.B    'Breaking Blocks',0
000019EC= 50 55 53 48 20 46 ...   1443  .PRSSTR     DC.B    'PUSH FIRE TO START',0
00001A00                          1444              DS.W    0
00001A00                          1445  ; -----------------------------------------------------------------------------
00001A00                          1446  STAGOVRU
00001A00                          1447  ; GAME OVER STATE UPDATE
00001A00                          1448  ; INPUT    - NONE
00001A00                          1449  ; OUTPUT   - NONE
00001A00                          1450  ; MODIFIES - NONE
00001A00                          1451  ; -----------------------------------------------------------------------------
00001A00                          1452              ;visualiza el fichero
00001A00                          1453m             UTLSPEN #$00FFFFFF
00001A00                          1454m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001A00                          1455m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
00001A00                          1456m ; OUTPUT   - NONE
00001A00                          1457m ; MODIFIES - D0,D1
00001A00                          1458m ; -----------------------------------------------------------------------------
00001A0C                          1459m             UTLSFIL #$00000000
00001A0C                          1460m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001A0C                          1461m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
00001A0C                          1462m ; OUTPUT   - NONE
00001A0C                          1463m ; MODIFIES - D0,D1
00001A0C                          1464m ; -----------------------------------------------------------------------------
00001A14                          1465              
00001A14  0839 0004 00001E15      1466              BTST.B  #KBDBITF1,(KBDEDGE)
00001A1C  6700 0012               1467              BEQ     .END
00001A20                          1468m             UTLSNDST
00001A20                          1469m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
00001A20                          1470m ; INPUT    - NONE 
00001A20                          1471m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001A20                          1472m ; MODIFIES - D0,A1
00001A20                          1473m ; -----------------------------------------------------------------------------
00001A28  33FC 0000 00002AC2      1474              MOVE.W  #STAINTR,(STANEXT)
00001A30  4E75                    1475  .END        RTS
00001A32                          1476  
00001A32                          1477  ; -----------------------------------------------------------------------------
00001A32                          1478  STAGOVRP
00001A32                          1479  ; GAME OVER STATE PLOT
00001A32                          1480  ; INPUT    - NONE
00001A32                          1481  ; OUTPUT   - NONE
00001A32                          1482  ; MODIFIES - NONE
00001A32                          1483  ; -----------------------------------------------------------------------------
00001A32                          1484  
00001A32  48E7 E040               1485              MOVEM.L A1/D0-D2,-(A7)
00001A36                          1486              
00001A36                          1487              ;GAME OVER TEXT
00001A36                          1488m             UTLLOCT GOVERX,GOVERY            
00001A36                          1489m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001A36                          1490m ; INPUT    - GOVERX X, GOVERY Y
00001A36                          1491m ; OUTPUT   - NONE
00001A36                          1492m ; MODIFIES - D0,D1
00001A36                          1493m ; -----------------------------------------------------------------------------
00001A40                          1494m             UTLSIZC #GOVERC,TXBSIZE
00001A40                          1495m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001A40                          1496m ; INPUT    - #GOVERC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001A40                          1497m ; OUTPUT   - NONE
00001A40                          1498m ; MODIFIES - D0,D1
00001A40                          1499m ; -----------------------------------------------------------------------------
00001A52                          1500m             UTLSFIL #$00000000
00001A52                          1501m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001A52                          1502m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
00001A52                          1503m ; OUTPUT   - NONE
00001A52                          1504m ; MODIFIES - D0,D1
00001A52                          1505m ; -----------------------------------------------------------------------------
00001A5A  43F9 00001A6C           1506              LEA     .GOVSTR,A1              ;PONE EL TEXTO
00001A60  103C 000E               1507              MOVE.B  #14,D0
00001A64  4E4F                    1508              TRAP    #15
00001A66                          1509  
00001A66  4CDF 0207               1510              MOVEM.L (A7)+,A1/D0-D2
00001A6A  4E75                    1511              RTS
00001A6C= 47 41 4D 45 20 4F ...   1512  .GOVSTR     DC.B    'GAME OVER',0
00001A76                          1513              DS.W    0
00001A76                          1514  
00001A76                          1515  
00001A76                          1516  
00001A76                          1517  
00001A76                          1518  
00001A76                          1519  
00001A76                          1520  
00001A76                          1521  
00001A76                          1522  
00001A76                          1523  
00001A76                          1524  
00001A76                          1525  
00001A76                          1526  
00001A76                          1527  
00001A76                          1528  
00001A76                          1529  
00001A76                          1530  
00001A76                          1531  -------------------- end include --------------------
00001A76                          1532              INCLUDE "BALL.X68"              ; BALL MANAGEMENT
00001A76                          1533  ; =============================================================================
00001A76                          1534  ; BALL
00001A76                          1535  ; =============================================================================
00001A76                          1536  
00001A76                          1537  ; -----------------------------------------------------------------------------
00001A76                          1538  BINIT
00001A76                          1539  ;INITIALIZE THE BALL
00001A76                          1540  ; INPUT    - NONE 
00001A76                          1541  ; OUTPUT   - NONE 
00001A76                          1542  ; MODIFIES - NONE
00001A76                          1543  ; -----------------------------------------------------------------------------
00001A76  33FC 00FB 00002B28      1544              MOVE.W  #BINPOSX,BPOSX1
00001A7E  33FC 01CE 00002B2E      1545              MOVE.W  #BINPOSY,BPOSY2
00001A86  33FC 0105 00002B2A      1546              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
00001A8E  33FC 01C4 00002B2C      1547              MOVE.W  #BINPOSY-BDIAMET,BPOSY1
00001A96  33FC FFFD 00002B20      1548              MOVE.W  #BINSPEED,BSPEEDX
00001A9E  33FC FFFD 00002B22      1549              MOVE.W  #BINSPEED,BSPEEDY
00001AA6  4E75                    1550              RTS
00001AA8                          1551  ; -----------------------------------------------------------------------------
00001AA8                          1552  BNXTLEV
00001AA8                          1553  ;INITIALIZE THE BALL TO THE NEXT LEVEL
00001AA8                          1554  ; INPUT    - NONE 
00001AA8                          1555  ; OUTPUT   - NONE 
00001AA8                          1556  ; MODIFIES - NONE
00001AA8                          1557  ; -----------------------------------------------------------------------------
00001AA8  48E7 8000               1558              MOVEM.L D0,-(A7)
00001AAC  33FC 00FB 00002B28      1559              MOVE.W  #BINPOSX,BPOSX1
00001AB4  33FC 01CE 00002B2C      1560              MOVE.W  #BINPOSY,BPOSY1
00001ABC  33FC 0105 00002B2A      1561              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
00001AC4  33FC 01D8 00002B2E      1562              MOVE.W  #BINPOSY+BDIAMET,BPOSY2
00001ACC  3039 00002B22           1563              MOVE.W  BSPEEDY,D0
00001AD2  6B00 000E               1564              BMI     .NEGY
00001AD6  5279 00002B22           1565              ADD.W   #1,BSPEEDY
00001ADC  4EF9 00001AE8           1566              JMP     .X
00001AE2                          1567  .NEGY        
00001AE2  5379 00002B22           1568              SUB.W   #1,BSPEEDY
00001AE8                          1569  .X          
00001AE8  3039 00002B20           1570              MOVE.W  BSPEEDX,D0
00001AEE  6B00 000E               1571              BMI     .NEGX 
00001AF2  5279 00002B20           1572              ADD.W   #1,BSPEEDX
00001AF8  4EF9 00001B04           1573              JMP     .END
00001AFE                          1574  .NEGX       
00001AFE  5379 00002B20           1575              SUB.W   #1,BSPEEDX 
00001B04                          1576  .END        
00001B04  4CDF 0001               1577              MOVEM.L (A7)+,D0
00001B08  4E75                    1578              RTS
00001B0A                          1579        
00001B0A                          1580  ;-----------------------------------------------------------------------------
00001B0A                          1581  BUPD
00001B0A                          1582  ; UPDATES THE BALL MOTION
00001B0A                          1583  ; INPUT    - NONE 
00001B0A                          1584  ; OUTPUT   - NONE 
00001B0A                          1585  ; MODIFIES - NONE
00001B0A                          1586  ; -----------------------------------------------------------------------------
00001B0A  48E7 FFC0               1587              MOVEM.L D0-D7/A0-A1,-(A7)
00001B0E                          1588              ;COMPRUEBA COLISIONES CON LAS 4 PAREDES
00001B0E                          1589              ;Y SI PASA LA DE ABAJO LE ELIMINA UNA VIDA, O ENVIA LA PANTALLA GAME OVER
00001B0E  3039 00002B28           1590              MOVE.W  BPOSX1,D0
00001B14  3239 00002B2C           1591              MOVE.W  BPOSY1,D1
00001B1A  3439 00002B2A           1592              MOVE.W  BPOSX2,D2
00001B20  3639 00002B2E           1593              MOVE.W  BPOSY2,D3
00001B26  4EB8 1216               1594              JSR     UTLCHCOLW               ;COMPRUEBA COLISIÓN CON PAREDES               
00001B2A  4EB8 1328               1595              JSR     UTLCHCOLP               ;COMPRUEBA COLISIÓN CON PLATAFORMA
00001B2E  4284                    1596              CLR.L   D4
00001B30  3A39 00002B2A           1597              MOVE.W  BPOSX2,D5
00001B36  3C39 00002B2E           1598              MOVE.W  BPOSY2,D6
00001B3C  4EB8 13C0               1599              JSR     UTLCOLBL
00001B40                          1600              
00001B40  B87C 0000               1601              CMP     #0,D4
00001B44  6600 0066               1602              BNE     .END
00001B48  3039 00002B2A           1603              MOVE.W  BPOSX2,D0
00001B4E  3239 00002B2C           1604              MOVE.W  BPOSY1,D1
00001B54  3A39 00002B28           1605              MOVE.W  BPOSX1,D5
00001B5A  3C39 00002B2E           1606              MOVE.W  BPOSY2,D6
00001B60  4EB8 13C0               1607              JSR     UTLCOLBL
00001B64  B87C 0000               1608              CMP     #0,D4
00001B68  6600 0042               1609              BNE     .END
00001B6C  3039 00002B28           1610              MOVE.W  BPOSX1,D0
00001B72  3239 00002B2E           1611              MOVE.W  BPOSY2,D1
00001B78  3A39 00002B2A           1612              MOVE.W  BPOSX2,D5
00001B7E  3C39 00002B2C           1613              MOVE.W  BPOSY1,D6
00001B84  4EB8 13C0               1614              JSR     UTLCOLBL
00001B88  B87C 0000               1615              CMP     #0,D4
00001B8C  6600 001E               1616              BNE     .END
00001B90  3039 00002B2A           1617              MOVE.W  BPOSX2,D0
00001B96  3239 00002B2E           1618              MOVE.W  BPOSY2,D1
00001B9C  3A39 00002B28           1619              MOVE.W  BPOSX1,D5
00001BA2  3C39 00002B2C           1620              MOVE.W  BPOSY1,D6
00001BA8  4EB8 13C0               1621              JSR     UTLCOLBL   
00001BAC                          1622  .END            
00001BAC  3039 00002B20           1623              MOVE.W  BSPEEDX,D0              ;POSICIÓN = POSICIÓN + VELOCIDAD
00001BB2  D179 00002B28           1624              ADD.W   D0,BPOSX1
00001BB8  D179 00002B2A           1625              ADD.W   D0,BPOSX2
00001BBE                          1626              
00001BBE  3239 00002B22           1627              MOVE.W  BSPEEDY,D1
00001BC4  D379 00002B2C           1628              ADD.W   D1,BPOSY1
00001BCA  D379 00002B2E           1629              ADD.W   D1,BPOSY2
00001BD0  4CDF 03FF               1630              MOVEM.L (A7)+,D0-D7/A0-A1
00001BD4  4E75                    1631              RTS
00001BD6                          1632  ;-----------------------------------------------------------------------------
00001BD6                          1633  BPLOT
00001BD6                          1634  ; PLOTES THE BALL 
00001BD6                          1635  ; INPUT    - NONE 
00001BD6                          1636  ; OUTPUT   - NONE 
00001BD6                          1637  ; MODIFIES - NONE
00001BD6                          1638  ; -----------------------------------------------------------------------------
00001BD6  48E7 F800               1639              MOVEM.L  D0-D4,-(A7)
00001BDA                          1640m             UTLSPEN #BINCOLOR
00001BDA                          1641m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001BDA                          1642m ; INPUT    - #BINCOLOR COLOR IN FORMAT $00BBGGRR
00001BDA                          1643m ; OUTPUT   - NONE
00001BDA                          1644m ; MODIFIES - D0,D1
00001BDA                          1645m ; -----------------------------------------------------------------------------
00001BE6                          1646m             UTLSFIL #BINCOLOR
00001BE6                          1647m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001BE6                          1648m ; INPUT    - #BINCOLOR COLOR IN FORMAT $00BBGGRR
00001BE6                          1649m ; OUTPUT   - NONE
00001BE6                          1650m ; MODIFIES - D0,D1
00001BE6                          1651m ; -----------------------------------------------------------------------------
00001BF2  3239 00002B28           1652              MOVE.W  BPOSX1,D1
00001BF8  3439 00002B2C           1653              MOVE.W  BPOSY1,D2
00001BFE  3639 00002B2A           1654              MOVE.W  BPOSX2,D3
00001C04  3839 00002B2E           1655              MOVE.W  BPOSY2,D4
00001C0A  103C 0058               1656              MOVE.B  #88,D0
00001C0E  4E4F                    1657              TRAP    #15
00001C10  4CDF 001F               1658              MOVEM.L  (A7)+,D0-D4
00001C14  4E75                    1659              RTS
00001C16                          1660  
00001C16                          1661  -------------------- end include --------------------
00001C16                          1662              INCLUDE "BLOCKS.X68"            ; BLOQUES
00001C16                          1663  ;-----------------------------------------------------------
00001C16                          1664  ;           BLOCKS
00001C16                          1665  ;-----------------------------------------------------------
00001C16                          1666    
00001C16                          1667  BLINIT
00001C16  48E7 8080               1668              MOVEM.L D0/A0,-(A7)
00001C1A  41F9 00002B32           1669              LEA.L   BLMATRIX,A0
00001C20  303C 000B               1670              MOVE.W #BLROW-1,D0             
00001C24                          1671  .LOOP                   
00001C24  10FC 00FF               1672              MOVE.B  #%11111111,(A0)+
00001C28  51C8 FFFA               1673              DBRA    D0,.LOOP
00001C2C  4279 00002B30           1674              CLR.W   BLCOUNTER
00001C32  4EB9 00001DB6           1675              JSR     BLCOUNTBL
00001C38  33FC 0001 00002ACE      1676              MOVE.W  #1,LEVEL
00001C40  4CDF 0101               1677              MOVEM.L (A7)+,D0/A0
00001C44  4E75                    1678              RTS
00001C46                          1679  BLLEV2           
00001C46  48E7 8080               1680              MOVEM.L D0/A0,-(A7)
00001C4A  41F9 00002B32           1681              LEA.L   BLMATRIX,A0
00001C50  303C 000B               1682              MOVE.W  #BLROW-1,D0             
00001C54                          1683  .LOOP       
00001C54  10FC 005A               1684              MOVE.B  #%01011010,(A0)+
00001C58  51C8 FFFA               1685              DBRA    D0,.LOOP
00001C5C  4279 00002B30           1686              CLR.W   BLCOUNTER
00001C62  4EB9 00001DB6           1687              JSR     BLCOUNTBL
00001C68  4CDF 0101               1688              MOVEM.L (A7)+,D0/A0
00001C6C  4E75                    1689              RTS
00001C6E                          1690              
00001C6E                          1691  BLLEV3              
00001C6E  48E7 0080               1692              MOVEM.L A0,-(A7)
00001C72  41F9 00002B32           1693              LEA.L   BLMATRIX,A0         
00001C78  10FC 00F5               1694              MOVE.B  #%11110101,(A0)+
00001C7C  10FC 00A5               1695              MOVE.B  #%10100101,(A0)+
00001C80  10FC 00A5               1696              MOVE.B  #%10100101,(A0)+
00001C84  10FC 00A5               1697              MOVE.B  #%10100101,(A0)+
00001C88  10FC 00A5               1698              MOVE.B  #%10100101,(A0)+
00001C8C  10FC 00E5               1699              MOVE.B  #%11100101,(A0)+
00001C90  10FC 00A5               1700              MOVE.B  #%10100101,(A0)+
00001C94  10FC 00A5               1701              MOVE.B  #%10100101,(A0)+
00001C98  10FC 00A5               1702              MOVE.B  #%10100101,(A0)+
00001C9C  10FC 00A5               1703              MOVE.B  #%10100101,(A0)+
00001CA0  10FC 00A5               1704              MOVE.B  #%10100101,(A0)+
00001CA4  10FC 00F5               1705              MOVE.B  #%11110101,(A0)+
00001CA8  4279 00002B30           1706              CLR.W   BLCOUNTER
00001CAE  4EB9 00001DB6           1707              JSR     BLCOUNTBL
00001CB4  4CDF 0100               1708              MOVEM.L (A7)+,A0
00001CB8  4E75                    1709              RTS
00001CBA                          1710  
00001CBA                          1711  
00001CBA                          1712  ; -----------------------------------------------------------------------------
00001CBA                          1713  BLUPD
00001CBA                          1714  ; UPDATES THE LEVELS OF THE GAME
00001CBA                          1715  ; INPUT     - NONE
00001CBA                          1716  ; OUTPUT    - NONE
00001CBA                          1717  ; MODIFIES  - NONE
00001CBA                          1718  ; -----------------------------------------------------------------------------
00001CBA  48E7 C000               1719              MOVEM.L D0-D1,-(A7)
00001CBE  3039 00002B30           1720              MOVE.W  BLCOUNTER,D0
00001CC4  B07C 0000               1721              CMP     #0,D0                   ;SI NO HAY BLOQUES SALTA
00001CC8  6600 0078               1722              BNE     .END
00001CCC                          1723  .NEXTLEVEL  
00001CCC  5279 00002ACE           1724              ADD.W   #1,LEVEL
00001CD2                          1725m             UTLSNDS .SOUND,#1
00001CD2                          1726m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001CD2                          1727m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
00001CD2                          1728m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001CD2                          1729m ; MODIFIES - D0,A1
00001CD2                          1730m ; -----------------------------------------------------------------------------
00001CE8  3239 00002ACE           1731              MOVE.W  LEVEL,D1
00001CEE  B27C 0004               1732              CMP     #4,D1
00001CF2  6700 0046               1733              BEQ     .WON
00001CF6  B27C 0003               1734              CMP     #3,D1              
00001CFA  6700 001C               1735              BEQ     .NIVEL3
00001CFE  33FC 0001 00002AC2      1736              MOVE.W  #STASPACE,(STANEXT)
00001D06  4EB8 1C46               1737              JSR     BLLEV2
00001D0A  4EB8 1648               1738              JSR     PLRLEV2
00001D0E  4EB8 1AA8               1739              JSR     BNXTLEV
00001D12  4EF9 00001D42           1740              JMP     .END
00001D18                          1741  .NIVEL3
00001D18  B27C 0003               1742              CMP.W   #3,D1
00001D1C  6600 001C               1743              BNE     .WON
00001D20  33FC 0001 00002AC2      1744              MOVE.W  #STASPACE,STANEXT
00001D28  4EB8 1C6E               1745              JSR     BLLEV3 
00001D2C  4EB8 165A               1746              JSR     PLRLEV3
00001D30  4EB8 1AA8               1747              JSR     BNXTLEV
00001D34  4EF9 00001D42           1748              JMP     .END
00001D3A                          1749  .WON        
00001D3A  33FC 0003 00002AC2      1750              MOVE.W  #STAGOVR,STANEXT 
00001D42                          1751  .END 
00001D42  4CDF 0003               1752              MOVEM.L (A7)+,D0-D1
00001D46  4E75                    1753              RTS    
00001D48= 6C657665 6C207570 ...   1754  .SOUND      DC.L    'level up.wav',0      
00001D58                          1755  ; -----------------------------------------------------------------------------
00001D58                          1756  BLPLOT
00001D58                          1757  ; PLOTS THE BLOCKS
00001D58                          1758  ; INPUT    - NONE
00001D58                          1759  ; OUTPUT   - NONE
00001D58                          1760  ; MODIFIES - NONE
00001D58                          1761  ; -----------------------------------------------------------------------------
00001D58  48E7 FFC0               1762              MOVEM.L D0-D7/A0-A1,-(A7)
00001D5C                          1763m             UTLSPEN #$00000000
00001D5C                          1764m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001D5C                          1765m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
00001D5C                          1766m ; OUTPUT   - NONE
00001D5C                          1767m ; MODIFIES - D0,D1
00001D5C                          1768m ; -----------------------------------------------------------------------------
00001D64  4242                    1769              CLR.W   D2                      ; Y ARRIBA
00001D66  383C 0010               1770              MOVE.W  #BLHEIGHT,D4            ; Y ABAJO
00001D6A  41F8 11E6               1771              LEA     COLORS,A0
00001D6E                          1772              
00001D6E  3E3C 000B               1773              MOVE.W  #BLROW-1,D7  
00001D72  227C 00000000           1774              MOVE.L  #0,A1  
00001D78                          1775  .FILAS      
00001D78                          1776m             UTLSFIL (A0)+ 
00001D78                          1777m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001D78                          1778m ; INPUT    - (A0)+ COLOR IN FORMAT $00BBGGRR
00001D78                          1779m ; OUTPUT   - NONE
00001D78                          1780m ; MODIFIES - D0,D1
00001D78                          1781m ; -----------------------------------------------------------------------------
00001D80  363C 0040               1782              MOVE.W  #BLWIDTH,D3             ; X DERECHA
00001D84  4241                    1783              CLR.W   D1                      ; X IZQUIERDA
00001D86  3A3C 0007               1784              MOVE.W  #BLCOL-1,D5
00001D8A  1C29 2B32               1785              MOVE.B  BLMATRIX(A1),D6
00001D8E                          1786  .COLUM                                    
00001D8E  E31E                    1787              ROL.B   #1,D6
00001D90  6400 0008               1788              BCC     .VACIO                  
00001D94  103C 0057               1789              MOVE.B  #87,D0                  ; DIBUJAMOS EL CUADRADO
00001D98  4E4F                    1790              TRAP    #15
00001D9A                          1791  .VACIO
00001D9A  3203                    1792              MOVE.W  D3,D1
00001D9C  0643 0040               1793              ADD.W   #BLWIDTH, D3
00001DA0  51CD FFEC               1794              DBRA    D5,.COLUM
00001DA4  5249                    1795              ADDA.W  #1,A1
00001DA6  3404                    1796              MOVE.W  D4,D2
00001DA8  0644 0010               1797              ADD.W   #BLHEIGHT,D4
00001DAC  51CF FFCA               1798              DBRA    D7,.FILAS
00001DB0  4CDF 03FF               1799              MOVEM.L (A7)+,D0-D7/A0-A1
00001DB4  4E75                    1800              RTS
00001DB6                          1801  ; -----------------------------------------------------------------------------
00001DB6                          1802  BLCOUNTBL
00001DB6                          1803  ; COUNTS THE NUMBER OF BLOCKS OF THE MATRIX
00001DB6                          1804  ; INPUT    - NONE (BLMATRIX)
00001DB6                          1805  ; OUTPUT   - NONE
00001DB6                          1806  ; MODIFIES - NONE
00001DB6                          1807  ; -----------------------------------------------------------------------------
00001DB6  48E7 FF20               1808              MOVEM.L D0-D7/A2,-(A7)
00001DBA  323C 000B               1809              MOVE.W  #BLROW-1,D1    
00001DBE  4283                    1810              CLR.L   D3
00001DC0  227C 00000000           1811              MOVE.L  #0,A1                   ; RECORRE LAS FILAS (8 BYTES)
00001DC6                          1812  .FILAS                                          
00001DC6  343C 0007               1813              MOVE.W  #BLCOL-1,D2               
00001DCA  1029 2B32               1814              MOVE.B  BLMATRIX(A1),D0
00001DCE                          1815  .COLUM                       
00001DCE  E318                    1816              ROL.B   #1,D0         
00001DD0  6400 0004               1817              BCC     .VACIO
00001DD4  5243                    1818              ADD.W   #1,D3
00001DD6                          1819  .VACIO
00001DD6  51CA FFF6               1820              DBRA    D2,.COLUM   
00001DDA  5289                    1821              ADDA.L  #1,A1
00001DDC  51C9 FFE8               1822              DBRA    D1,.FILAS
00001DE0  33C3 00002B30           1823              MOVE.W  D3,BLCOUNTER
00001DE6  4CDF 04FF               1824              MOVEM.L (A7)+,D0-D7/A2
00001DEA  4E75                    1825              RTS
00001DEC                          1826  
00001DEC                          1827  
00001DEC                          1828  -------------------- end include --------------------
00001DEC                          1829  
00001DEC                          1830  ; --- INITIALIZE --------------------------------------------------------------
00001DEC                          1831              
00001DEC  4EB8 1000               1832  START       JSR     SYSINIT
00001DF0                          1833              ; TO DO: CALL GAME INITIALIZATION CODE HERE
00001DF0  4EB8 179C               1834              JSR     STAINIT                           
00001DF4                          1835              
00001DF4                          1836  ; --- UPDATE ------------------------------------------------------------------
00001DF4                          1837              
00001DF4  4E40                    1838  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD                 
00001DF6                          1839                                              ; UPDATE DEPENDING ON THE STATE
00001DF6                          1840              ; TO DO: CALL GAME UPDATE CODE HERE
00001DF6  4EB8 17AE               1841              JSR     STAUPD
00001DFA                          1842  
00001DFA                          1843  ; --- WAIT SYNCH --------------------------------------------------------------
00001DFA                          1844  
00001DFA  4A39 00001E16           1845  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
00001E00  67F8                    1846              BEQ     .WINT
00001E02                          1847              
00001E02  4239 00001E16           1848              CLR.B   (SCRINTCT)
00001E08                          1849  
00001E08                          1850  ; --- PLOT --------------------------------------------------------------------
00001E08                          1851              
00001E08                          1852              ; TO DO: CALL GAME PLOT CODE HERE
00001E08  4EB8 180C               1853              JSR     STAPLOT
00001E0C                          1854  
00001E0C  4E41                    1855              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001E0E  60E4                    1856              BRA     .LOOP
00001E10  FFFF FFFF               1857              SIMHALT
00001E14                          1858  
00001E14                          1859  ; --- VARIABLES ---------------------------------------------------------------
00001E14                          1860  
00001E14                          1861              INCLUDE "SYSVAR.X68"
00001E14                          1862  ; =============================================================================
00001E14                          1863  ; SYSTEM VARS
00001E14                          1864  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
00001E14                          1865  ; THEY MUST NOT BE IN PROTECTED MEMORY.
00001E14                          1866  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
00001E14                          1867  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
00001E14                          1868  ; THIS IS GOOD ENOUGH.
00001E14                          1869  ; =============================================================================
00001E14                          1870  
00001E14                          1871  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
00001E14                          1872  
00001E14                          1873  KBDVAL      DS.B    1                       ; KEY PRESSED=1
00001E15                          1874  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
00001E16                          1875  
00001E16                          1876              DS.W    0
00001E16                          1877  
00001E16                          1878  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
00001E16                          1879  
00001E16                          1880  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
00001E17                          1881  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
00001E18                          1882              DS.W    0
00001E18                          1883  
00001E18                          1884  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
00001E18                          1885  
00001E40                          1886              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001E40                          1887  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002AC0                          1888              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002AC0                          1889  
00002AC0                          1890  
00002AC0                          1891  
00002AC0                          1892  -------------------- end include --------------------
00002AC0                          1893              INCLUDE "VAR.X68"
00002AC0                          1894  ; =============================================================================
00002AC0                          1895  ; GAME VARS
00002AC0                          1896  ; =============================================================================
00002AC0                          1897  
00002AC0                          1898  ; TO DO: DECLARE GAME VARIABLES HERE.
00002AC0                          1899  
00002AC0                          1900  ; --- GAME STATE RELATED VARIABLES ------------------------------------------
00002AC0                          1901  
00002AC0                          1902  STACUR      DS.W    1                       ; CURRENT GAME STATE
00002AC2                          1903  STANEXT     DS.W    1                       ; NEXT GAME STATE
00002AC4                          1904  ;----------------------------------------------------------------------------
00002AC4                          1905  
00002AC4                          1906  ; PLAYER --------------------------------------------------------------------
00002AC4                          1907  PPOSX       DS.W    1                       ;POSICION DE LA PLATAFORMA
00002AC6                          1908  PWIDTH      DS.W    1                       ; PLAYER WIDTH (PIXELS)
00002AC8                          1909  PLIVES      DS.W    1                       ;LIVES LEFT
00002ACA                          1910  PSCORE      DS.W    1                       ;SCORE DEL PLAYER
00002ACC                          1911  PSPEED      DS.W    1
00002ACE                          1912  LEVEL       DS.B    2
00002AD0                          1913  PNAME       DS.B    80                      ;NOMBRE CON CARACTERES MAX = 80
00002B20                          1914              DS.W    0
00002B20                          1915  ;----------------------------------------------------------------------------
00002B20                          1916  
00002B20                          1917  ; BALL ----------------------------------------------------------------------
00002B20                          1918  ;BPOSX       DS.W    1                       ;POSICION DE LA PELOTA X
00002B20                          1919  ;BPOSY       DS.W    1                       ;POSICION DE LA PELOTA Y
00002B20                          1920  BSPEEDX     DS.W    1                       ;VELOCIDAD DE LA PELOTA
00002B22                          1921  BSPEEDY     DS.W    1
00002B24                          1922  BMXSPEED    DS.W    1                       ;LIMITACIÓN
00002B26                          1923  BCOLOR      DS.W    1
00002B28                          1924  BPOSX1      DS.W    1
00002B2A                          1925  BPOSX2      DS.W    1
00002B2C                          1926  BPOSY1      DS.W    1
00002B2E                          1927  BPOSY2      DS.W    1
00002B30                          1928  ; BLOCKS --------------------------------------------------------------------
00002B30                          1929  BLCOUNTER   DS.W    1
00002B32                          1930  BLMATRIX    DS.B    BLROW  ;12*8
00002B3E                          1931              DS.W    0
00002B3E                          1932  ;ALL SCORES:
00002B3E                          1933  ERRORFILE   DS.L    1
00002B42                          1934  POSRNK      DS.L    1
00002B46                          1935  RNKTABLE    DS.B    10
00002B50                          1936  
00002B50                          1937  BUFFER      DS.B    80
00002BA0                          1938              DS.W    0
00002BA0                          1939  PLSIZE      DS.W    1
00002BA2                          1940  
00002BA2                          1941  
00002BA2                          1942  
00002BA2                          1943  
00002BA2                          1944  
00002BA2                          1945  -------------------- end include --------------------
00002BA2                          1946              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BCOLOR              2B26
BDIAMET             A
BINCOLOR            FFFFFF
BINIT               1A76
BINPOSX             FB
BINPOSY             1CE
BINSPEED            FFFFFFFD
BLCOL               8
BLCOUNTBL           1DB6
BLCOUNTBL:COLUM     1DCE
BLCOUNTBL:FILAS     1DC6
BLCOUNTBL:VACIO     1DD6
BLCOUNTER           2B30
BLHEIGHT            10
BLINIT              1C16
BLINIT:LOOP         1C24
BLLEV2              1C46
BLLEV2:LOOP         1C54
BLLEV3              1C6E
BLMATRIX            2B32
BLPLOT              1D58
BLPLOT:COLUM        1D8E
BLPLOT:FILAS        1D78
BLPLOT:VACIO        1D9A
BLROW               C
BLUE                F7E78E
BLUPD               1CBA
BLUPD:END           1D42
BLUPD:NEXTLEVEL     1CCC
BLUPD:NIVEL3        1D18
BLUPD:SOUND         1D48
BLUPD:WON           1D3A
BLWIDTH             40
BMXSPEED            2B24
BNXTLEV             1AA8
BNXTLEV:END         1B04
BNXTLEV:NEGX        1AFE
BNXTLEV:NEGY        1AE2
BNXTLEV:X           1AE8
BPLOT               1BD6
BPOSX1              2B28
BPOSX2              2B2A
BPOSY1              2B2C
BPOSY2              2B2E
BSPEEDX             2B20
BSPEEDY             2B22
BUFFER              2B50
BUPD                1B0A
BUPD:END            1BAC
COLORS              11E6
DMMALLOC            11AC
DMMALLOC:END        11C4
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1E40
DMMFCOM             1186
DMMFFND             1194
DMMFIRST            113C
DMMFLOOP            117A
DMMFRCOM            114E
DMMFREE             11C6
DMMFRFND            115C
DMMFRLOP            1142
DMMFRSTO            1174
DMMINIT             111A
DMMINIT:LOOP        1128
DMMNEXT             115E
DMMNEXTO            1196
DMMSYSID            0
ERRORFILE           2B3E
FILE                11DC
GOVERC              FFFF
GOVERX              12
GOVERY              7
GREEN               95FF8C
INTPRSC             FFFFFF
INTPRSX             20
INTPRSY             52
INTTITC             DCAA7C
INTTITX             E
INTTITY             7
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             1E15
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10A6
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10BC
KBDREAD:LOOP1       10D2
KBDREAD:LOOP2       10EE
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              1E14
LEVEL               2ACE
LIVECOLOR           FF
LIVEHEIGHT          10
LIVEPOSX            215
LIVEPOSY            1E
LIVEWIDTH           40
ORANGE              4E8CF3
PCOLOR              ECD59D
PHEIGHT             C
PINLIVE             3
PINPOSX1            E0
PINPOSX2            E4
PINPOSX3            E8
PINWIDTH1           40
PINWIDTH2           38
PINWIDTH3           30
PLIVES              2AC8
PLRINIT             1636
PLRLEV2             1648
PLRLEV3             165A
PLRUPD              166C
PLRUPD:END          16B2
PLRUPD:RIGHTKEY     1690
PLSIZE              2BA0
PMOVE               8
PNAME               2AD0
POSRNK              2B42
PPLOT               16B8
PPLOT:END           1786
PPLOT:LIFES         1732
PPLOT:TXTLEVEL      1794
PPLOT:TXTSCORE      178C
PPOSX               2AC4
PPOSY               1D0
PSCORE              2ACA
PSCORECOL           FFFFFF
PSCORETX            41
PSCORETY            6
PSPEED              2ACC
PURPLE              FFACAC
PWIDTH              2AC6
RNKTABLE            2B46
SCRCTRL             201
SCRCYCCT            1E17
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            1E16
SCRIRQ              1
SCRISR              107E
SCRLWIDTH           5
SCRTIM              14
SCRTRAP             1
SCRUPD              108C
SCRWIDTH            2E4
STACUR              2AC0
STAEMPTYG           183A
STAEMPTYP           1838
STAGOVR             3
STAGOVRP            1A32
STAGOVRP:GOVSTR     1A6C
STAGOVRU            1A00
STAGOVRU:END        1A30
STAINIT             179C
STAINTR             0
STAINTRI            18C8
STAINTRI:INSTRUCT   1900
STAINTRP            1982
STAINTRP:PRSSTR     19EC
STAINTRP:TITSTR     19DC
STAINTRU            1914
STAINTRU:END        1968
STAINTRU:SOUND      196E
STANEXT             2AC2
STANONE             FFFFFFFF
STAPLAY             2
STAPLAYI            1844
STAPLAYP            18A6
STAPLAYU            188C
STAPLOT             180C
STAPLOT:PLTTBL      1828
START               1DEC
START:LOOP          1DF4
START:WINT          1DFA
STASPACE            1
STASPACEU           186E
STASPACEU:END       188A
STAUPD              17AE
STAUPD:DOUPD        17D4
STAUPD:INITBL       17EC
STAUPD:UPDTBL       17FC
SYSINIT             1000
TXBSIZE             12
TXMSIZE             10
TXSSIZE             A
UTLCHCOLP           1328
UTLCHCOLP:END       13BA
UTLCHCOLP:LADOS     13B4
UTLCHCOLP:PLRXMIDDLE  136E
UTLCHCOLP:PLRXRIGHT  139C
UTLCHCOLW           1216
UTLCHCOLW:COLLIS    12F8
UTLCHCOLW:DOWN      1282
UTLCHCOLW:END       12F2
UTLCHCOLW:LEFT      1240
UTLCHCOLW:MINLIVE   128E
UTLCHCOLW:RESET     12EA
UTLCHCOLW:RIGHT     1260
UTLCHCOLW:SOUNDG    1300
UTLCHCOLW:SOUNDL    1314
UTLCOLBL            13C0
UTLCOLBL:CHOQUEDOBLE  1404
UTLCOLBL:CHOQUEDOBLEIZQ  1432
UTLCOLBL:DERECHA    1450
UTLCOLBL:ENDCOLISION  145C
UTLCOLBL:ENDNOCOLISION  149C
UTLCOLBL:ENMEDIO    143E
UTLCOLBL:IZQ        13EA
UTLCOLBL:SOUND      149E
UTLCOLBL:TEST       13E4
UTLCOLBL:TEST2      141A
UTLLOCT             254
UTLREADFILE         151C
UTLREADFILE:LOOP    1530
UTLREADFILE:SALTA   1558
UTLREADRNK          156A
UTLREADRNK:END      15CA
UTLREADRNK:LOOP     1586
UTLSCTRLP           14AE
UTLSCTRLP:TXTSCORE  1514
UTLSFIL             12A
UTLSIZC             37C
UTLSNDS             4F7
UTLSNDST            6E5
UTLSPEN             0
UTLSVNAME           82B
UTLWRFILE           1600
UTLWRRNK            15D0
UTLWRRNK:.          15FA
UTLWRRNK:LOOP       15F4
UTLWRRNK:OCUPADO    15E2
YELLOW              38EEF8
