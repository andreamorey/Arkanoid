00001F34 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 04/01/2020 21:57:08

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : BREAKING BLOCKS
00000000                             3  ; AUTHOR   : ANDREA MOREY SANCHEZ Y AISHA GANDAROVA
00000000                             4  ; CREATION : 
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8              
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10            
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =000002E4                 81  SCRWIDTH    EQU     740                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            91  
00001000                            92  
00001000                            93  -------------------- end include --------------------
00001000                            94              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            95  ; =============================================================================
00001000                            96  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            97  ; =============================================================================
00001000                            98  ;           AUTHORS: Andrea Morey Sánchez and Aisha Gandarova
00001000                            99  ; -----------------------------------------------------------------------------
00001000                           100  SYSINIT
00001000                           101  ; INITIALIZES THE SYSTEM
00001000                           102  ; INPUT    - NONE
00001000                           103  ; OUTPUT   - NONE
00001000                           104  ; MODIFIES - NONE
00001000                           105  ; -----------------------------------------------------------------------------
00001000  205F                     106              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010A6            107              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            108              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 0000111A            109              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                110              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     111              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     112              RTS
0000101C                           113  
0000101C                           114  ; =============================================================================
0000101C                           115  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           116  ; =============================================================================
0000101C                           117  
0000101C                           118  ; -----------------------------------------------------------------------------
0000101C                           119  SCRINIT
0000101C                           120  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           121  ; INPUT    - NONE
0000101C                           122  ; OUTPUT   - NONE
0000101C                           123  ; MODIFIES - D0,D1,D2,D3
0000101C                           124  ; -----------------------------------------------------------------------------
0000101C                           125              ; TO DO:
0000101C                           126              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C  007C 0700                127              ORI.W   #$0700,SR
00001020                           128              ; - DISABLE ALL AUTO-IRQ (SEE TRAP #15 TASK 32)
00001020                           129              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
00001020  21FC 0000108C 0084       130              MOVE.L  #SCRUPD,$80+(SCRTRAP*4)
00001028                           131              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
00001028  103C 0021                132              MOVE.B  #33,D0
0000102C  223C 02E401E0            133              MOVE.L  #(SCRWIDTH<<16)|SCRHEIGH,D1
00001032  4E4F                     134              TRAP    #15
00001034                           135              ; - SET WINDOWED MODE
00001034  7201                     136              MOVE.L  #1,D1
00001036  4E4F                     137              TRAP    #15
00001038                           138              ; - CLEAR VISIBLE BUFFER
00001038  103C 000B                139              MOVE.B  #11,D0
0000103C  323C FF00                140              MOVE.W  #$FF00,D1
00001040  4E4F                     141              TRAP    #15
00001042                           142              ; - ENABLE DOUBLE BUFFER
00001042  103C 005C                143              MOVE.B  #92,D0
00001046  123C 0011                144              MOVE.B  #17,D1
0000104A  4E4F                     145              TRAP    #15
0000104C                           146              ; - CLEAR HIDDEN BUFFER
0000104C  700B                     147              MOVE.L  #11,D0
0000104E  323C FF00                148              MOVE.W  #$FF00,D1
00001052  4E4F                     149              TRAP    #15
00001054                           150              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
00001054                           151              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
00001054  21FC 0000107E 0064       152              MOVE.L  #SCRISR,$60+(SCRIRQ*4)
0000105C                           153              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000105C                           154              ;   TASK 32)
0000105C  103C 0020                155              MOVE.B  #32,D0
00001060  123C 0006                156              MOVE.B  #6,D1
00001064                           157         
00001064  143C 0081                158              MOVE.B  #$80|SCRIRQ,D2
00001068  7614                     159              MOVE.L  #SCRTIM,D3
0000106A  4E4F                     160              TRAP    #15
0000106C                           161              ; - CLEAR SCRINTCT AND SCRCYCCT
0000106C  4239 00001F5E            162              CLR.B   SCRINTCT
00001072  4239 00001F5F            163              CLR.B   SCRCYCCT
00001078                           164              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
00001078  027C F8FF                165              ANDI.W  #$F8FF,SR
0000107C  4E75                     166              RTS
0000107E                           167  
0000107E                           168  ; -----------------------------------------------------------------------------
0000107E                           169  SCRISR
0000107E                           170  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000107E                           171  ; INPUT    - NONE
0000107E                           172  ; OUTPUT   - NONE
0000107E                           173  ; MODIFIES - NONE
0000107E                           174  ; -----------------------------------------------------------------------------
0000107E  5239 00001F5E            175              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001084  5239 00001F5F            176              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000108A  4E73                     177              RTE
0000108C                           178  
0000108C                           179  ; -----------------------------------------------------------------------------
0000108C                           180  SCRUPD
0000108C                           181  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000108C                           182  ; BUFFER FOR THE NEXT ONE.
0000108C                           183  ; INPUT    - NONE
0000108C                           184  ; OUTPUT   - NONE
0000108C                           185  ; MODIFIES - NONE
0000108C                           186  ; -----------------------------------------------------------------------------
0000108C                           187              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000108C  48E7 C000                188              MOVEM.L D0-D1,-(A7)
00001090  103C 005E                189              MOVE.B  #94,D0
00001094  4E4F                     190              TRAP    #15
00001096  103C 000B                191              MOVE.B  #11,D0
0000109A  323C FF00                192              MOVE.W  #$FF00,D1
0000109E  4E4F                     193              TRAP    #15
000010A0  4CDF 0003                194              MOVEM.L (A7)+,D0-D1
000010A4  4E73                     195              RTE
000010A6                           196  
000010A6                           197  ; =============================================================================
000010A6                           198  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010A6                           199  ; =============================================================================
000010A6                           200  
000010A6                           201  ; -----------------------------------------------------------------------------
000010A6                           202  KBDINIT
000010A6                           203  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010A6                           204  ; INPUT    - NONE
000010A6                           205  ; OUTPUT   - NONE
000010A6                           206  ; MODIFIES - NONE
000010A6                           207  ; -----------------------------------------------------------------------------
000010A6  4239 00001F5C            208              CLR.B   (KBDVAL)                ; INIT VARS
000010AC  4239 00001F5D            209              CLR.B   (KBDEDGE)
000010B2  21FC 000010BC 0080       210              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010BA  4E75                     211              RTS
000010BC                           212  
000010BC                           213  ; -----------------------------------------------------------------------------
000010BC                           214  KBDREAD
000010BC                           215  ; TRAP SERVICE ROUTINE.
000010BC                           216  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010BC                           217  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010BC                           218  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010BC                           219  ; INPUT    - NONE
000010BC                           220  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010BC                           221  ; MODIFIES - NONE
000010BC                           222  ; -----------------------------------------------------------------------------
000010BC                           223              ; TO DO: UPDATE KBDVAL AND KBDEDGE
000010BC  48E7 F800                224              MOVEM.L D0-D4,-(A7)
000010C0  103C 0013                225              MOVE.B  #19,D0
000010C4                           226              
000010C4  223C 50104D20            227              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010CA  4E4F                     228              TRAP    #15
000010CC                           229          
000010CC  4202                     230              CLR.B   D2                      ;D2 WILL CONTAIN THE VALUE OF KBDVAL
000010CE  383C 0003                231              MOVE.W  #3,D4
000010D2                           232              
000010D2                           233  .LOOP1      
000010D2                           234       
000010D2  E189                     235              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010D4  40C3                     236              MOVE.W  SR,D3                   
000010D6  0243 0001                237              ANDI.W  #$0001,D3               ;D3 = VALUE OF THE FLAG C
000010DA  E30A                     238              LSL.B   #1,D2                   ;MOVE THE BITS TO THE LEFT
000010DC  8403                     239              OR.B    D3,D2                   
000010DE  51CC FFF2                240              DBRA    D4,.LOOP1
000010E2                           241          
000010E2                           242              ;D2 = 0 0 0 0 KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1
000010E2                           243              
000010E2  223C 28272625            244              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E8  4E4F                     245              TRAP    #15
000010EA                           246              
000010EA  383C 0003                247              MOVE.W  #3,D4
000010EE                           248  .LOOP2      
000010EE  E189                     249              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010F0  40C3                     250              MOVE.W  SR,D3
000010F2  0243 0001                251              ANDI.W  #$0001,D3    
000010F6  E30A                     252              LSL.B   #1,D2
000010F8  8403                     253              OR.B    D3,D2
000010FA                           254              
000010FA  51CC FFF2                255              DBRA    D4,.LOOP2
000010FE                           256              
000010FE                           257              ;D2 = KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1 KBDDOWN KBDRIGHT KBDUP KBDLEFT
000010FE                           258              
000010FE                           259              ;UPDATE KBDVAL AND KBDEDGE
000010FE  1639 00001F5C            260              MOVE.B  KBDVAL,D3
00001104  4603                     261              NOT.B   D3
00001106  13C2 00001F5C            262              MOVE.B  D2,KBDVAL
0000110C  C602                     263              AND.B   D2,D3
0000110E  13C3 00001F5D            264              MOVE.B  D3,KBDEDGE
00001114  4CDF 001F                265              MOVEM.L (A7)+,D0-D4
00001118  4E73                     266              RTE
0000111A                           267  
0000111A                           268  ; =============================================================================
0000111A                           269  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
0000111A                           270  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
0000111A                           271  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
0000111A                           272  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
0000111A                           273  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
0000111A                           274  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
0000111A                           275  ; =============================================================================
0000111A                           276  
0000111A                           277  ; -----------------------------------------------------------------------------
0000111A                           278  DMMINIT
0000111A                           279  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
0000111A                           280  ; INPUT    - NONE
0000111A                           281  ; OUTPUT   - NONE
0000111A                           282  ; MODIFIES - NONE
0000111A                           283  ; -----------------------------------------------------------------------------
0000111A  48E7 8080                284              MOVEM.L D0/A0,-(A7)
0000111E  41F9 00001F80            285              LEA     DMMDATA,A0
00001124  303C 0031                286              MOVE.W  #DMMBNUM-1,D0
00001128  30BC 0000                287  .LOOP       MOVE.W  #DMMSYSID,(A0)
0000112C  D1FC 00000040            288              ADD.L   #DMMBSIZE,A0
00001132  51C8 FFF4                289              DBRA.W  D0,.LOOP
00001136  4CDF 0101                290              MOVEM.L (A7)+,D0/A0
0000113A  4E75                     291              RTS
0000113C                           292  
0000113C                           293  ; -----------------------------------------------------------------------------
0000113C                           294  DMMFIRST
0000113C                           295  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000113C                           296  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000113C                           297  ; INPUT    - NONE
0000113C                           298  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000113C                           299  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000113C                           300  ; -----------------------------------------------------------------------------
0000113C  41F9 00001F80            301              LEA     DMMDATA,A0
00001142  4A58                     302  DMMFRLOP    TST.W   (A0)+
00001144  6600 0016                303              BNE     DMMFRFND
00001148  D1FC 0000003E            304              ADD.L   #DMMBSIZE-2,A0
0000114E  B1FC 00002BFF            305  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001154  6DEC                     306              BLT     DMMFRLOP
00001156  207C 00000000            307              MOVE.L  #0,A0
0000115C  4E75                     308  DMMFRFND    RTS
0000115E                           309  
0000115E                           310  ; -----------------------------------------------------------------------------
0000115E                           311  DMMNEXT
0000115E                           312  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000115E                           313  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000115E                           314  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
0000115E                           315  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000115E                           316  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000115E                           317  ; -----------------------------------------------------------------------------
0000115E  2F00                     318              MOVE.L  D0,-(A7)
00001160  2008                     319              MOVE.L  A0,D0
00001162  C0BC FFFFFFC0            320              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001168  0680 00000040            321              ADD.L   #DMMBSIZE,D0
0000116E  2040                     322              MOVE.L  D0,A0
00001170  201F                     323              MOVE.L  (A7)+,D0
00001172  60DA                     324              BRA     DMMFRCOM
00001174                           325  
00001174                           326  ; -----------------------------------------------------------------------------
00001174                           327  DMMFRSTO
00001174                           328  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001174                           329  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001174                           330  ; INPUT    - D0.W : ID TO SEARCH
00001174                           331  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001174                           332  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001174                           333  ; -----------------------------------------------------------------------------
00001174  41F9 00001F80            334              LEA     DMMDATA,A0
0000117A  B058                     335  DMMFLOOP    CMP.W   (A0)+,D0
0000117C  6700 0016                336              BEQ     DMMFFND
00001180  D1FC 0000003E            337              ADD.L   #DMMBSIZE-2,A0
00001186  B1FC 00002BFF            338  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000118C  6DEC                     339              BLT     DMMFLOOP
0000118E  207C 00000000            340              MOVE.L  #0,A0
00001194  4E75                     341  DMMFFND     RTS
00001196                           342  
00001196                           343  ; -----------------------------------------------------------------------------
00001196                           344  DMMNEXTO
00001196                           345  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001196                           346  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001196                           347  ; INPUT    - D0.W : ID TO SEARCH
00001196                           348  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001196                           349  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001196                           350  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001196                           351  ; -----------------------------------------------------------------------------
00001196  2F00                     352              MOVE.L  D0,-(A7)
00001198  2008                     353              MOVE.L  A0,D0
0000119A  C0BC FFFFFFC0            354              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011A0  0680 00000040            355              ADD.L   #DMMBSIZE,D0
000011A6  2040                     356              MOVE.L  D0,A0
000011A8  201F                     357              MOVE.L  (A7)+,D0
000011AA  60DA                     358              BRA     DMMFCOM
000011AC                           359  
000011AC                           360  ; -----------------------------------------------------------------------------
000011AC                           361  DMMALLOC
000011AC                           362  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011AC                           363  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011AC                           364  ; INPUT    - D0.W : ID TO ASSIGN
000011AC                           365  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011AC                           366  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011AC                           367  ; -----------------------------------------------------------------------------
000011AC  3F00                     368              MOVE.W  D0,-(A7)
000011AE  4240                     369              CLR.W   D0
000011B0  4EB8 1174                370              JSR     DMMFRSTO
000011B4  301F                     371              MOVE.W  (A7)+,D0
000011B6  B1FC 00000000            372              CMP.L   #0,A0
000011BC  6700 0006                373              BEQ     .END
000011C0  3140 FFFE                374              MOVE.W  D0,-2(A0)
000011C4  4E75                     375  .END        RTS
000011C6                           376  
000011C6                           377  ; -----------------------------------------------------------------------------
000011C6                           378  DMMFREE
000011C6                           379  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C6                           380  ; SYSTEM (0)
000011C6                           381  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C6                           382  ; OUTPUT   - NONE
000011C6                           383  ; MODIFIES - NONE
000011C6                           384  ; -----------------------------------------------------------------------------
000011C6  48E7 8080                385              MOVEM.L D0/A0,-(A7)
000011CA  2008                     386              MOVE.L  A0,D0
000011CC  C0BC FFFFFFC0            387              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011D2  2040                     388              MOVE.L  D0,A0
000011D4  4250                     389              CLR.W   (A0)
000011D6  4CDF 0101                390              MOVEM.L (A7)+,D0/A0
000011DA  4E75                     391              RTS
000011DC                           392  
000011DC                           393  
000011DC                           394  
000011DC                           395  
000011DC                           396  
000011DC                           397  
000011DC                           398  
000011DC                           399  
000011DC                           400  
000011DC                           401  
000011DC                           402  
000011DC                           403  
000011DC                           404  
000011DC                           405  
000011DC                           406  
000011DC                           407  
000011DC                           408  
000011DC                           409  
000011DC                           410  
000011DC                           411  
000011DC                           412  
000011DC                           413  
000011DC                           414  
000011DC                           415  -------------------- end include --------------------
000011DC                           416              INCLUDE "CONSTANTS.X68"         ; USER CONSTANTS
000011DC                           417  ; =============================================================================
000011DC                           418  ; CONSTANTS
000011DC                           419  ; =============================================================================
000011DC                           420  
000011DC                           421  ; --- TEXT RELATED CONSTANTS --------------------------------------------------
000011DC  =0000000E                422  INTTITX     EQU     14                      ; TITLE X COORDINATE
000011DC  =00000007                423  INTTITY     EQU     7                       ; TITLE Y COORDINATE
000011DC  =00DCAA7C                424  INTTITC     EQU     $00DCAA7C               ; TITLE COLOR
000011DC  =00000020                425  INTPRSX     EQU     32                      ; PRESS FIRE X COORDINATE
000011DC  =00000052                426  INTPRSY     EQU     82                      ; PRESS FIRE Y COORDINATE
000011DC  =00FFFFFF                427  INTPRSC     EQU     $00FFFFFF               ; PRESS FIRE COLOR
000011DC  =00000012                428  TXBSIZE     EQU     18                      ; BIG SIZE LETTERS
000011DC  =00000010                429  TXMSIZE     EQU     16                      ; MEDIUM SIZE LETTERS
000011DC  =0000000A                430  TXSSIZE     EQU     10                      ; SMALL SIZE LETTERS
000011DC  =00000012                431  GOVERX      EQU     18                      ; GAME OVER X COORDINATE
000011DC  =00000007                432  GOVERY      EQU     7                       ; GAME OVER Y COORDINATE
000011DC  =0000FFFF                433  GOVERC      EQU     $0000FFFF               ; GAME OVER COLOR
000011DC                           434  
000011DC                           435  ; --- STATES GAME -------------------------------------------------------------
000011DC  =FFFFFFFF                436  STANONE     EQU     -1                      ; PLACEHOLDER TO FORCE CHANGE
000011DC  =00000000                437  STAINTR     EQU     0                       ; INTRO/PRESS FIRE STATE
000011DC  =00000001                438  STASPACE    EQU     1                       ; WAITS PRESS FIER TO MOVE THE BALL
000011DC  =00000002                439  STAPLAY     EQU     2                       ; NORMAL GAME STATE
000011DC  =00000003                440  STAGOVR     EQU     3                       ; GAME OVER STATE
000011DC  =00000004                441  STAWIN      EQU     4                       ; WIN STATE
000011DC                           442  
000011DC                           443  ; --- SCREENCTRL --------------------------------------------------------------
000011DC  =00000201                444  SCRCTRL     EQU     513                     ; COORDINATE X OF DATA SCREEN
000011DC  =00000005                445  SCRLWIDTH   EQU     5                       ; WIDTH OF THE DATA SCREEN
000011DC  =000000C8                446  SCRRNKY     EQU     200                     ; POSITION X OF THE RNK SCREEN
000011DC  =00000040                447  LIVEWIDTH   EQU     64                      ; WIDTH OF THE LIVE BAR
000011DC  =00000010                448  LIVEHEIGHT  EQU     16                      ; HEIGHT OF THE LIFE BAR
000011DC  =006666FF                449  LIVECOLOR   EQU     $006666FF               ; RED COLOR OF THE LIFE BAR
000011DC  =00000215                450  LIVEPOSX    EQU     SCRCTRL+20              ; LIFE BAR X COORDINATE
000011DC  =0000001E                451  LIVEPOSY    EQU     30                      ; LIFE BAR Y COORDINATE
000011DC= 73 63 6F 72 65 2E ...    452  FILE        DC.B    'score.txt',0           ; SCORES' FILE
000011E6                           453  
000011E6                           454  ; -- PLAYER -------------------------------------------------------------------
000011E6  =00000040                455  PINWIDTH1    EQU     64                     ; PLAYER INITIAL WIDTH 
000011E6  =00000036                456  PINWIDTH2    EQU     54                     ; PLAYER LEVEL2 WIDTH
000011E6  =0000002C                457  PINWIDTH3    EQU     44                     ; PLAYER LEVEL3 WIDTH
000011E6  =0000000C                458  PHEIGHT      EQU     12                     ; PLAYER HEIGHT (PIXELS)
000011E6  =00ECD59D                459  PCOLOR       EQU     $00ECD59D              ; PLAYER COLOR
000011E6  =00000003                460  PINLIVE      EQU     3                      ; PLAYER INTIAL LIVES 
000011E6  =00000008                461  PMOVE        EQU     8                      ; SPEED OF THE PLAYER
000011E6  =000001D0                462  PPOSY        EQU     SCRHEIGH-PHEIGHT-4     ; POSICION DE LA PLATAFORMA Y)
000011E6  =000000E0                463  PINPOSX1     EQU     SCRCTRL/2-PINWIDTH1/2  ; PLAYER LVL1 COORDINATE X
000011E6  =000000E5                464  PINPOSX2     EQU     SCRCTRL/2-PINWIDTH2/2  ; PLAYER LVL2 COORDINATE X
000011E6  =000000EA                465  PINPOSX3     EQU     SCRCTRL/2-PINWIDTH3/2  ; PLAYER LVL3 COORDINATE X
000011E6  =0000003E                466  PSCORETX     EQU     62                     ; SCORE X COORDINATE
000011E6  =00000006                467  PSCORETY     EQU     6                      ; SCORE Y COORDINATE
000011E6  =00FFFFFF                468  PSCORECOL    EQU     $00FFFFFF
000011E6                           469  
000011E6                           470  ; --- BALL --------------------------------------------------------------------
000011E6  =0000000A                471  BDIAMET     EQU     10                      ; DIAMETER OF THE BALL
000011E6  =000000FB                472  BINPOSX     EQU     SCRCTRL/2-BDIAMET/2     ; BALL X INITIAL COORDINATE 
000011E6  =000001CE                473  BINPOSY     EQU     PPOSY-2                 ; BALL Y INITIAL COORDINATE 
000011E6  =FFFFFFFD                474  BINSPEED    EQU     -3                      ; INITIAL SPEED
000011E6  =00FFFFFF                475  BINCOLOR    EQU     $00FFFFFF               ; BALL COLOR
000011E6                           476  
000011E6                           477  ; --- BLOCKS ------------------------------------------------------------------
000011E6  =00000040                478  BLWIDTH     EQU     64                      ; BLOCKS WIDTH
000011E6  =00000010                479  BLHEIGHT    EQU     16                      ; BLOCKS HEIGHT
000011E6= 00F7E78E 004E8CF3 ...    480  COLORS      DC.L    BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE
00001216                           481  ; BLOCKS DIFFERENT COLORS
00001216  =0000000C                482  BLROW       EQU     12                      ; ROWS OF BLOCKS
00001216  =00000008                483  BLCOL       EQU     8                       ; COLUMS OF BLOCKS
00001216                           484  
00001216                           485  ; --- COLORS ------------------------------------------------------------------
00001216  =004E8CF3                486  ORANGE      EQU     $004E8CF3
00001216  =00F7E78E                487  BLUE        EQU     $00F7E78E
00001216  =00FFACAC                488  PURPLE      EQU     $00FFACAC
00001216  =0038EEF8                489  YELLOW      EQU     $0038EEF8
00001216  =0095FF8C                490  GREEN       EQU     $0095FF8C
00001216                           491  ; --- RANKING TABLE -----------------------------------------------------------
00001216                           492  
00001216  =00000011                493  RNKPOSR     EQU     17                      ; POSITION ROW
00001216  =0000003C                494  RNKPSCC     EQU     60                      ; COLUMN POSITION FOR SCORE
00001216  =00000046                495  RNKPNAC     EQU     70                      ; COLUMN POSITION FOR NAME
00001216                           496  
00001216                           497  
00001216                           498  
00001216                           499  
00001216                           500  -------------------- end include --------------------
00001216                           501              INCLUDE "UTIL.X68"              ; UTILITY MACRO AND SUBROUTINES
00001216                           502  ; =============================================================================
00001216                           503  ; UTILITY MACROS
00001216                           504  ; =============================================================================
00001216                           505  
00001216                           506  UTLSPEN     MACRO
00001216                           507  ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001216                           508  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
00001216                           509  ; OUTPUT   - NONE
00001216                           510  ; MODIFIES - D0,D1
00001216                           511  ; -----------------------------------------------------------------------------
00001216                           512              MOVE.B  #80,D0
00001216                           513              MOVE.L  \1,D1
00001216                           514              TRAP    #15
00001216                           515              ENDM
00001216                           516  ; -----------------------------------------------------------------------------
00001216                           517  UTLSFIL     MACRO
00001216                           518  ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001216                           519  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
00001216                           520  ; OUTPUT   - NONE
00001216                           521  ; MODIFIES - D0,D1
00001216                           522  ; -----------------------------------------------------------------------------
00001216                           523              MOVE.B  #81,D0
00001216                           524              MOVE.L  \1,D1
00001216                           525              TRAP    #15
00001216                           526              ENDM
00001216                           527              
00001216                           528  ; -----------------------------------------------------------------------------
00001216                           529  UTLLOCT     MACRO
00001216                           530  ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001216                           531  ; INPUT    - \1 X, \2 Y
00001216                           532  ; OUTPUT   - NONE
00001216                           533  ; MODIFIES - D0,D1
00001216                           534  ; -----------------------------------------------------------------------------
00001216                           535              MOVE.W  #\1<<8|\2, D1
00001216                           536              MOVE.B  #11,D0
00001216                           537              TRAP    #15
00001216                           538              ENDM
00001216                           539  ; -----------------------------------------------------------------------------
00001216                           540  UTLSIZC     MACRO
00001216                           541  ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001216                           542  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR \2 SIZE (8, 9, 10, 12, 14, 16, 18))
00001216                           543  ; OUTPUT   - NONE
00001216                           544  ; MODIFIES - D0,D1
00001216                           545  ; -----------------------------------------------------------------------------
00001216                           546              MOVE.L  \1,D1
00001216                           547              MOVE.L  #\2<<16|1,D2
00001216                           548              MOVE.B  #21,D0
00001216                           549              TRAP    #15
00001216                           550              ENDM
00001216                           551  ; -----------------------------------------------------------------------------
00001216                           552  UTLSNDS     MACRO
00001216                           553  ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001216                           554  ; INPUT    - \1 ADDRESS TO STRING WITH NAME OF THE FILE, \2 NUM SOUNDS, 
00001216                           555  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001216                           556  ; MODIFIES - D0,A1
00001216                           557  ; -----------------------------------------------------------------------------
00001216                           558              LEA     \1, A1             ;PLAY EXPLOSION SOUND
00001216                           559              MOVE.W  \2,D1
00001216                           560              MOVE.B  #71,D0
00001216                           561              TRAP    #15
00001216                           562              MOVE.B  #72,D0
00001216                           563              TRAP    #15
00001216                           564              ENDM
00001216                           565  ; -----------------------------------------------------------------------------
00001216                           566  UTLSNDST     MACRO
00001216                           567  ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
00001216                           568  ; INPUT    - NONE 
00001216                           569  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001216                           570  ; MODIFIES - D0,A1
00001216                           571  ; -----------------------------------------------------------------------------
00001216                           572              MOVE.L  #3,D2
00001216                           573              MOVE.B  #76,D0
00001216                           574              TRAP    #15
00001216                           575              ENDM
00001216                           576  ; -----------------------------------------------------------------------------            
00001216                           577  UTLSVNAME  MACRO
00001216                           578  ; WRAPPER FOR SAVING THE NAME OF THE PLAYER
00001216                           579  ; MAX CARACTERS: 20
00001216                           580  ; -----------------------------------------------------------------------------
00001216                           581              CLR.B   PNAME
00001216                           582              LEA.L   .INSTRUCT,A1            
00001216                           583              MOVE.B  #14,D0
00001216                           584              TRAP    #15
00001216                           585              LEA.L   PNAME,A1                ; SAVES IN PNAME
00001216                           586              MOVE.B  #2,D0
00001216                           587              TRAP    #15
00001216                           588              RTS
00001216                           589  .INSTRUCT   DC.B    'ENTER YOUR NAME (MAX. 8 LETTERS): ',0
00001216                           590              ENDM
00001216                           591  ; -----------------------------------------------------------------------------
00001216                           592  ; =============================================================================
00001216                           593  ; UTILITY SUBROUTINES
00001216                           594  ; =============================================================================
00001216                           595  ; -----------------------------------------------------------------------------
00001216                           596  UTLINTRI
00001216                           597  ; PLOTS THE TITLE OF THE GAME
00001216                           598  ; INPUT    - NONE
00001216                           599  ; OUTPUT   - NONE
00001216                           600  ; MODIFIES - NONE
00001216                           601  ; -----------------------------------------------------------------------------
00001216  48E7 E040                602              MOVEM.L D0-D2/A1,-(A7)
0000121A                           603              ;TITULO
0000121A                           604m             UTLLOCT INTTITX,INTTITY      
0000121A                           605m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
0000121A                           606m ; INPUT    - INTTITX X, INTTITY Y
0000121A                           607m ; OUTPUT   - NONE
0000121A                           608m ; MODIFIES - D0,D1
0000121A                           609m ; -----------------------------------------------------------------------------
00001224                           610m             UTLSIZC #INTTITC,TXBSIZE
00001224                           611m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001224                           612m ; INPUT    - #INTTITC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001224                           613m ; OUTPUT   - NONE
00001224                           614m ; MODIFIES - D0,D1
00001224                           615m ; -----------------------------------------------------------------------------
00001236  43F9 00001248            616              LEA     .TITSTR,A1            
0000123C  103C 000E                617              MOVE.B  #14,D0
00001240  4E4F                     618              TRAP    #15
00001242  4CDF 0207                619              MOVEM.L (A7)+,D0-D2/A1
00001246  4E75                     620              RTS
00001248= 42 72 65 61 6B 69 ...    621  .TITSTR     DC.B    'Breaking Blocks',0
00001258                           622              DS.W    0
00001258                           623  ; -----------------------------------------------------------------------------
00001258                           624  UTLCHCOLW
00001258                           625  ; CHECKS COLLISION WITH WALL
00001258                           626  ; INPUT    - D0.W BPOSX1
00001258                           627  ;            D1.W BPOSY1
00001258                           628  ;            D2.W BPOSX2
00001258                           629  ;            D3.W BPOSY2
00001258                           630  ; OUTPUT   - NONE
00001258                           631  ; MODIFIES - NONE
00001258                           632  ; -----------------------------------------------------------------------------
00001258  48E7 F080                633              MOVEM.L D0-D3/A0,-(A7)
0000125C  41F9 0000133A            634              LEA.L   .COLLIS,A0
00001262  B258                     635              CMP.W   (A0)+,D1                ; UP
00001264  6E00 001C                636              BGT     .LEFT
00001268  4479 00002C1A            637              NEG.W   BSPEEDY
0000126E  4279 00002C24            638              CLR.W   BPOSY1
00001274  33FC 000A 00002C26       639              MOVE.W  #BDIAMET,BPOSY2
0000127C  4EF9 00001334            640              JMP     .END 
00001282                           641  .LEFT        
00001282  B058                     642              CMP.W   (A0)+,D0
00001284  6E00 001C                643              BGT     .RIGHT
00001288  4479 00002C18            644              NEG.W   BSPEEDX
0000128E  4279 00002C20            645              CLR.W   BPOSX1
00001294  33FC 000A 00002C22       646              MOVE.W  #BDIAMET,BPOSX2
0000129C  4EF9 00001334            647              JMP     .END
000012A2                           648  .RIGHT      
000012A2  B458                     649              CMP.W   (A0)+,D2
000012A4  6D00 001E                650              BLT     .DOWN
000012A8  4479 00002C18            651              NEG.W   BSPEEDX
000012AE  33FC 0201 00002C22       652              MOVE.W  #SCRCTRL,BPOSX2
000012B6  33FC 01F7 00002C20       653              MOVE.W  #SCRCTRL-BDIAMET,BPOSX1
000012BE  4EF9 00001334            654              JMP     .END
000012C4                           655  .DOWN       
000012C4  B658                     656              CMP.W   (A0)+,D3         
000012C6  6E00 0008                657              BGT     .MINLIVE                  
000012CA  4EF9 00001334            658              JMP     .END  
000012D0                           659  .MINLIVE                                    ; MINUS ONE LIVE
000012D0                           660m             UTLSNDS .SOUNDL,#1              
000012D0                           661m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
000012D0                           662m ; INPUT    - .SOUNDL ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
000012D0                           663m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000012D0                           664m ; MODIFIES - D0,A1
000012D0                           665m ; -----------------------------------------------------------------------------
000012E6  33FC 01E0 00002C26       666              MOVE.W  #SCRHEIGH,BPOSY2
000012EE  33FC 01D6 00002C24       667              MOVE.W  #SCRHEIGH-BDIAMET,BPOSY1 
000012F6  5379 00002C08            668              SUB.W   #1,PLIVES                
000012FC  6600 002E                669              BNE     .RESET               
00001300                           670m             UTLSNDST
00001300                           671m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
00001300                           672m ; INPUT    - NONE 
00001300                           673m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001300                           674m ; MODIFIES - D0,A1
00001300                           675m ; -----------------------------------------------------------------------------
00001308                           676m             UTLSNDS .SOUNDG,#1
00001308                           677m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001308                           678m ; INPUT    - .SOUNDG ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
00001308                           679m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001308                           680m ; MODIFIES - D0,A1
00001308                           681m ; -----------------------------------------------------------------------------
0000131E  33FC 0003 00002C02       682              MOVE.W  #STAGOVR,(STANEXT)      ; IF PLAYER LOST ALL THE LIVES
00001326  4EF9 00001334            683              JMP     .END
0000132C                           684  .RESET                                      
0000132C  33FC 0001 00002C02       685              MOVE.W  #STASPACE,(STANEXT) 
00001334                           686             
00001334                           687  .END        
00001334  4CDF 010F                688              MOVEM.L (A7)+,D0-D3/A0
00001338  4E75                     689              RTS
0000133A= 0000 0000 0201 01E0      690  .COLLIS     DC.W    0,0,SCRCTRL,SCRHEIGH
00001342= 67616D65 206F7665 ...    691  .SOUNDG     DC.L    'game over.wav',0
00001356= 6C6F7365 206C6966 ...    692  .SOUNDL     DC.L    'lose life.wav',0
0000136A                           693  ; -----------------------------------------------------------------------------
0000136A                           694  UTLCHCOLP
0000136A                           695  ; CHECKS COLLISION WITH PLATAFORM
0000136A                           696  ; INPUT    - D0.W BPOSX1
0000136A                           697  ;            D1.W BPOSY1
0000136A                           698  ;            D2.W PPOSX2
0000136A                           699  ;            D3.W PPOSY2
0000136A                           700  ; OUTPUT   - NONE
0000136A                           701  ; MODIFIES - NONE
0000136A                           702  ; -----------------------------------------------------------------------------
0000136A  48E7 FC00                703              MOVEM.L D0-D5,-(A7)
0000136E  383C 01D0                704              MOVE.W  #PPOSY,D4
00001372  B644                     705              CMP.W   D4,D3
00001374  6D00 0086                706              BLT     .END                    ;SI ESTÁ MÁS A ARRIBA DE LA PLATAFORMA NO HAY COLISIÓN
00001378  3839 00002C04            707              MOVE.W  PPOSX,D4
0000137E  B444                     708              CMP.W   D4,D2
00001380  6D00 007A                709              BLT     .END                    ;SI ESTÁ MÁS A LA IZQUIERDA DE LA PLATAFORMA NO HAY COLISIÓN
00001384  D879 00002C06            710              ADD.W   PWIDTH,D4
0000138A  B044                     711              CMP.W    D4,D0
0000138C  6E00 006E                712              BGT     .END                    ;SI ESTÁ MÁS A LA DERECHA NO HAY COLISIÓN
00001390                           713              ;AQUÍ HAY COLISIÓN, TENEMOS QUE DETECTAR CUAL
00001390  383C 01D0                714              MOVE.W  #PPOSY,D4
00001394  B244                     715              CMP.W   D4,D1
00001396  6E00 005E                716              BGT     .LADOS
0000139A  4479 00002C1A            717              NEG.W   BSPEEDY                 ;COLISIÓN CON LA PARTE DE ARRIBA
000013A0  33C4 00002C26            718              MOVE.W  D4,BPOSY2
000013A6  0444 000A                719              SUB.W   #BDIAMET,D4
000013AA  33C4 00002C24            720              MOVE.W  D4,BPOSY1       
000013B0                           721  .PLRXMIDDLE 
000013B0  3839 00002C06            722              MOVE.W  PWIDTH,D4
000013B6  E24C                     723              LSR.W   #1,D4
000013B8  3A39 00002C04            724              MOVE.W  PPOSX,D5 
000013BE  DA44                     725              ADD.W   D4,D5                   ;D5 = CENTRO PLATAFORMA
000013C0  BA42                     726              CMP.W   D2,D5                   ;CENTRO - POS PEL
000013C2  6B00 001A                727              BMI     .PLRXRIGHT
000013C6  3839 00002C18            728              MOVE.W  BSPEEDX,D4
000013CC  6B00 002E                729              BMI     .END
000013D0                           730                                           
000013D0  4444                     731              NEG.W   D4
000013D2  33C4 00002C18            732              MOVE.W  D4,BSPEEDX
000013D8  4EF9 000013FC            733              JMP     .END
000013DE                           734              
000013DE                           735  .PLRXRIGHT             
000013DE  3839 00002C18            736              MOVE.W  BSPEEDX,D4
000013E4  6A00 0016                737              BPL     .END              ;SI ES POSITIVO SOLO NEGAMOS Y
000013E8  4444                     738              NEG.W   D4
000013EA  33C4 00002C18            739              MOVE.W  D4,BSPEEDX
000013F0  4EF9 000013FC            740              JMP     .END
000013F6                           741  
000013F6                           742  .LADOS      
000013F6  4479 00002C18            743              NEG.W   BSPEEDX                 ;COLISIÓN CON LOS LADOS
000013FC                           744  .END        
000013FC  4CDF 003F                745              MOVEM.L (A7)+,D0-D5 
00001400  4E75                     746              RTS
00001402                           747  ; -----------------------------------------------------------------------------
00001402                           748  UTLCOLBL   
00001402                           749  ; CHECKS COLLISION WITH BLOCKS
00001402                           750  ; INPUT    - 
00001402                           751  ; OUTPUT   
00001402                           752  ; MODIFIES - NONE
00001402                           753  ; -----------------------------------------------------------------------------
00001402  E849                     754              LSR.W   #4,D1           ;POSY/BLHEIGHT. D1 -> FILA
00001404  343C 000B                755              MOVE.W  #BLROW-1,D2
00001408  B441                     756              CMP.W   D1,D2           ;SI ESTÁ POR DEBAJO DE LA ÚLTIMA FILA SALTA DIRECTO A END
0000140A  6D00 00D2                757              BLT     .ENDNOCOLISION                    
0000140E  41F9 00002C2A            758              LEA.L   BLMATRIX,A0
00001414  D1C1                     759              ADDA.L  D1,A0           ;CARGAMOS EN A0 LA DIRECCIÓN DEL BYTE DE LA FILA
00001416                           760                                          
00001416  EC48                     761              LSR.W   #6,D0           ;D0 -> COLUMNA 
00001418  363C 0007                762              MOVE.W  #BLCOL-1,D3                           
0000141C  9640                     763              SUB.W   D0,D3           ;D3 -> COLUMNA (DESDE DRCHA) DONDE ESTÁ LA BOLA
0000141E  3E03                     764              MOVE.W  D3,D7
00001420  6A00 0004                765              BPL     .TEST  
00001424  4283                     766              CLR.L   D3              ;POR SI SALE NEGATIVO LA REAJUSTAMOS
00001426                           767  .TEST
00001426  0710                     768              BTST.B  D3,(A0)         ;MIRAMOS EL BIT DONDE ESTA 
00001428  6700 00B4                769              BEQ     .ENDNOCOLISION  ; SALTA SI EN ESA POSICION YA HABIA UN 0
0000142C                           770  
0000142C                           771  .IZQ        
0000142C  EC4D                     772              LSR.W   #6,D5           ;D5 -> COLUMNA
0000142E  343C 0007                773              MOVE.W  #BLCOL-1,D2
00001432  9445                     774              SUB.W   D5,D2           ;D2 -> COLUMNA (DESDE DERECHA) DONDE ESTA EL PUNTO CONTRARIO (SI 1 ENTONCES 2)
00001434  B443                     775              CMP     D3,D2                  
00001436  6F00 000E                776              BLE     .CHOQUEDOBLE
0000143A  4479 00002C18            777              NEG.W   BSPEEDX
00001440                           778              
00001440  4EF9 0000149E            779              JMP     .ENDCOLISION    ;  (|)______|  COLISION DELADO IZQUIERDO COLISIONANDO POR LA IZQ DEL NLOQUE 
00001446                           780              
00001446                           781  .CHOQUEDOBLE                        ;SI ESTA EN MEDIO DEL BLOQUE  |___()___| COLISION EN MEDIO
00001446                           782                                      ;COMPARAMOS SI LE HA DADO A DOS A LA VEZ |______(|)______|
00001446  B443                     783              CMP     D3,D2
00001448  6700 0036                784              BEQ     .ENMEDIO
0000144C                           785              
0000144C  5A40                     786              ADDI.W  #BDIAMET/2,D0
0000144E  EC48                     787              LSR.W   #6,D0
00001450  3A3C 0007                788              MOVE.W  #BLCOL-1,D5     ;D1 -> COLUMNA DONDE SE ENCUENTRA EL PUNTO MEDIO DE LA BOLA                         
00001454                           789              
00001454  9A40                     790              SUB.W   D0,D5
00001456  6A00 0004                791              BPL     .TEST2  
0000145A  4285                     792              CLR.L   D5              ;POR SI SALE NEGATIVO LA REAJUSTAMOS
0000145C                           793  .TEST2
0000145C                           794              
0000145C  0B10                     795              BTST.B  D5,(A0)         ;MIRAMOS EL BIT DONDE ESTA 
0000145E  6700 0020                796              BEQ     .ENMEDIO
00001462  BE45                     797              CMP     D5,D7
00001464  6700 000E                798              BEQ     .CHOQUEDOBLEIZQ
00001468  4479 00002C1A            799              NEG.W   BSPEEDY
0000146E  4EF9 0000149E            800              JMP     .ENDCOLISION
00001474                           801  .CHOQUEDOBLEIZQ
00001474  4479 00002C18            802              NEG.W   BSPEEDX
0000147A  4EF9 0000149E            803              JMP     .ENDCOLISION
00001480                           804  
00001480                           805              
00001480                           806  .ENMEDIO            
00001480                           807              ;COMPARAMOS SI LA PARTE CONTRARIA ESTA DENTO DEL BLOQUE O FUERA
00001480  B443                     808              CMP     D3,D2
00001482  6D00 000E                809              BLT     .DERECHA
00001486  4479 00002C1A            810              NEG.W   BSPEEDY
0000148C  4EF9 0000149E            811              JMP     .ENDCOLISION
00001492                           812  .DERECHA
00001492  4479 00002C18            813              NEG.W   BSPEEDX
00001498  4EF9 0000149E            814              JMP     .ENDCOLISION
0000149E                           815              
0000149E                           816  
0000149E                           817  .ENDCOLISION
0000149E  383C 0001                818              MOVE.W  #1,D4
000014A2  0790                     819              BCLR    D3,(A0)      
000014A4  0679 0064 00002C0A       820              ADD.W   #100,PSCORE
000014AC  5379 00002C28            821              SUB.W   #1,BLCOUNTER
000014B2  3039 00002C28            822              MOVE.W  BLCOUNTER,D0
000014B8  B07C 0000                823              CMP     #0,D0
000014BC  6700 0020                824              BEQ     .ENDNOCOLISION
000014C0                           825m             UTLSNDST
000014C0                           826m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
000014C0                           827m ; INPUT    - NONE 
000014C0                           828m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000014C0                           829m ; MODIFIES - D0,A1
000014C0                           830m ; -----------------------------------------------------------------------------
000014C8                           831m             UTLSNDS  .SOUND,#1
000014C8                           832m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
000014C8                           833m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
000014C8                           834m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000014C8                           835m ; MODIFIES - D0,A1
000014C8                           836m ; -----------------------------------------------------------------------------
000014DE                           837              
000014DE                           838  .ENDNOCOLISION
000014DE  4E75                     839              RTS
000014E0= 626C6F63 6B732E77 ...    840  .SOUND      DC.L    'blocks.wav',0
000014F0                           841  
000014F0                           842  ; -----------------------------------------------------------------------------
000014F0                           843  UTLSREENP   
000014F0                           844  ; PLOTS THE SEPARATION BETWEEN THE GAME AND THE SCREENCTRL AND THE RNKTABLE
000014F0                           845  ; INPUT    - NONE
000014F0                           846  ; OUTPUT   - NONE
000014F0                           847  ; MODIFIES - NONE
000014F0                           848  ; -----------------------------------------------------------------------------
000014F0  48E7 FC40                849              MOVEM.L D0-D5/A1,-(A7)    
000014F4                           850m             UTLSPEN #$00FFFFFF
000014F4                           851m ; WRAPPER FOR SET PEN TRAP 15 TASK.
000014F4                           852m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
000014F4                           853m ; OUTPUT   - NONE
000014F4                           854m ; MODIFIES - D0,D1
000014F4                           855m ; -----------------------------------------------------------------------------
00001500                           856m             UTLSFIL #$00FFFFFF
00001500                           857m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001500                           858m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
00001500                           859m ; OUTPUT   - NONE
00001500                           860m ; MODIFIES - D0,D1
00001500                           861m ; -----------------------------------------------------------------------------
0000150C  103C 0057                862              MOVE.B  #87,D0
00001510  323C 0201                863              MOVE.W  #SCRCTRL,D1
00001514  363C 0206                864              MOVE.W  #SCRCTRL+SCRLWIDTH,D3
00001518  4282                     865              CLR.L   D2
0000151A  383C 01E0                866              MOVE.W  #SCRHEIGH,D4
0000151E  4E4F                     867              TRAP    #15
00001520  103C 0057                868              MOVE.B  #87,D0
00001524  323C 0201                869              MOVE.W  #SCRCTRL,D1
00001528  363C 02E4                870              MOVE.W  #SCRWIDTH,D3
0000152C  343C 00C8                871              MOVE.W  #SCRRNKY,D2
00001530  383C 00CD                872              MOVE.W  #SCRRNKY+5,D4
00001534  4E4F                     873              TRAP    #15
00001536  4CDF 023F                874              MOVEM.L (A7)+,D0-D5/A1
0000153A  4E75                     875              RTS   
0000153C= 53 43 4F 52 45 3A ...    876  .TXTSCORE   DC.B    'SCORE: ',0
00001544                           877              DS.W    0
00001544                           878  ; -----------------------------------------------------------------------------
00001544                           879  UTLREADFILE  
00001544                           880  ; READS THE FILE OF SCORE AND SAVES THE INFO IN RNKTABLE
00001544                           881  ; INPUT    - NONE
00001544                           882  ; OUTPUT   - NONE
00001544                           883  ; MODIFIES - NONE
00001544                           884  ; -----------------------------------------------------------------------------
00001544  48E7 E040                885              MOVEM.L D0-D2/A1,-(A7)
00001548  303C 0032                886              MOVE.W  #50,D0                  ; CLOSES ALL THE FILES
0000154C  4E4F                     887              TRAP    #15
0000154E  43F9 00002C38            888              LEA.L   RNKTABLE,A1
00001554  43F8 11DC                889              LEA     FILE,A1
00001558  103C 0033                890              MOVE.B  #51,D0
0000155C  4E4F                     891              TRAP    #15                     ; OPENS A FILE D1 = FILE ID
0000155E  43F9 00002C38            892              LEA.L   RNKTABLE,A1
00001564  7464                     893              MOVE.L  #100,D2                 ; BYTES TO READ: 100
00001566  103C 0035                894              MOVE.B  #53,D0
0000156A  4E4F                     895              TRAP    #15 
0000156C  0C91 FFFFFFFF            896              CMP.L   #$FFFFFFFF,(A1)         ; IF THE RNKTABLE IS EMPTY
00001572  6600 0004                897              BNE     .HAYALGO
00001576  7400                     898              MOVE.L  #0,D2    
00001578                           899  .HAYALGO
00001578  33C2 00002C36            900              MOVE.W  D2,POSRNK
0000157E  103C 0038                901              MOVE.B  #56,D0
00001582  4E4F                     902              TRAP    #15                     ; CLOSE THE FILE
00001584  4CDF 0207                903              MOVEM.L (A7)+,D0-D2/A1
00001588  4E75                     904              RTS
0000158A                           905  ; -----------------------------------------------------------------------------
0000158A                           906  UTLREADRNK  
0000158A                           907  ; READS THE RNKTABLE AND PLOTS THE SCORES WITH THE NAMES OF THE PLAYERS
0000158A                           908  ; INPUT    - NONE
0000158A                           909  ; OUTPUT   - NONE
0000158A                           910  ; MODIFIES - NONE
0000158A                           911  ; -----------------------------------------------------------------------------
0000158A  48E7 F040                912              MOVEM.L D0-D3/A1,-(A7)
0000158E                           913m             UTLSPEN #$00FFFFFF
0000158E                           914m ; WRAPPER FOR SET PEN TRAP 15 TASK.
0000158E                           915m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
0000158E                           916m ; OUTPUT   - NONE
0000158E                           917m ; MODIFIES - D0,D1
0000158E                           918m ; -----------------------------------------------------------------------------
0000159A                           919m             UTLSFIL #$00000000    
0000159A                           920m ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000159A                           921m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
0000159A                           922m ; OUTPUT   - NONE
0000159A                           923m ; MODIFIES - D0,D1
0000159A                           924m ; -----------------------------------------------------------------------------
000015A2                           925m             UTLLOCT RNKPSCC,RNKPOSR-2  
000015A2                           926m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000015A2                           927m ; INPUT    - RNKPSCC X, RNKPOSR-2 Y
000015A2                           928m ; OUTPUT   - NONE
000015A2                           929m ; MODIFIES - D0,D1
000015A2                           930m ; -----------------------------------------------------------------------------
000015AC  43F9 00001610            931              LEA     .TEXT,A1            
000015B2  103C 000E                932              MOVE.B  #14,D0
000015B6  4E4F                     933              TRAP    #15
000015B8  3639 00002C36            934              MOVE.W  POSRNK,D3               
000015BE  86FC 000A                935              DIVU.W  #10,D3
000015C2  5343                     936              SUBQ.W  #1,D3                   ; D3 = NUMBER OF ELEMENTS IN RNK
000015C4  B67C 0000                937              CMP     #0,D3                   
000015C8  6D00 0040                938              BLT     .END                    ; IF RNKTABLE IS EMPTY DON'T SHOW
000015CC  343C 0011                939              MOVE.W  #RNKPOSR,D2             
000015D0  43F9 00002C38            940              LEA.L   RNKTABLE,A1 
000015D6                           941  .LOOP
000015D6  323C 3C00                942              MOVE.W  #RNKPSCC<<8,D1          ; PLACE THE SCORE
000015DA  D242                     943              ADD.W   D2,D1
000015DC  103C 000B                944              MOVE.B  #11,D0
000015E0  4E4F                     945              TRAP    #15
000015E2                           946              
000015E2  103C 0003                947              MOVE.B  #3,D0                    ; PLOTS THE SCORE
000015E6  3211                     948              MOVE.W  (A1),D1                
000015E8  4E4F                     949              TRAP    #15       
000015EA                           950                
000015EA  5489                     951              ADDA.L  #2,A1 
000015EC  323C 4600                952              MOVE.W  #RNKPNAC<<8,D1          ; PLACE THE NAME
000015F0  D242                     953              ADD.W   D2,D1
000015F2  103C 000B                954              MOVE.B  #11,D0
000015F6  4E4F                     955              TRAP    #15    
000015F8  5242                     956              ADDQ.W  #1,D2                   ; NEXT ROW  
000015FA                           957              
000015FA  103C 0001                958              MOVE.B  #1,D0                   
000015FE  323C 0008                959              MOVE.W  #8,D1                   ; PLOTS 8 BYTES = LETTERS
00001602  4E4F                     960              TRAP    #15     
00001604                           961              
00001604  5089                     962              ADDA.L  #8,A1
00001606  51CB FFCE                963              DBRA    D3,.LOOP
0000160A                           964  .END
0000160A  4CDF 020F                965              MOVEM.L (A7)+,D0-D3/A1
0000160E  4E75                     966              RTS
00001610= 52 41 4E 4B 49 4E ...    967  .TEXT       DC.B    'RANKING TABLE:',0
0000161F                           968  ; -----------------------------------------------------------------------------
0000161F                           969  UTLWRRNK 
0000161F                           970  ; ADDS THE PLAYER AT THE TOP OF THE TABLE
0000161F                           971  ; INPUT    - NONE
0000161F                           972  ; OUTPUT   - NONE
0000161F                           973  ; MODIFIES - NONE
0000161F                           974  ; -----------------------------------------------------------------------------         
0000161F                           975      
00001620  48E7 C0E0                976              MOVEM.L D0-D1/A0-A2,-(A7)
00001624                           977              
00001624  43F9 00002C38            978              LEA.L   RNKTABLE,A1
0000162A  3239 00002C36            979              MOVE.W  POSRNK,D1
00001630  0C91 FFFFFFFF            980              CMP.L   #$FFFFFFFF,(A1)         
00001636  6700 002E                981              BEQ     .LOAD                   ; IF THE MATRIX IS EMPTY
0000163A                           982              
0000163A                           983              ; MOVES ALL THE ELEMENTS AT THE RIGHT 
0000163A  2049                     984              MOVE.L  A1,A0            
0000163C  2449                     985              MOVE.L  A1,A2
0000163E  D4C1                     986              ADDA.W  D1,A2
00001640  94FC 000A                987              SUBA.W   #10,A2
00001644  D0C1                     988              ADDA.W  D1,A0                   
00001646  82FC 000A                989              DIVU    #10,D1
0000164A  5341                     990              SUBQ.W  #1,D1
0000164C                           991  .LOOP                   
0000164C  303C 0009                992              MOVE.W  #9,D0                   ; 10 COLUMNS
00001650                           993  .MOVER
00001650  10DA                     994              MOVE.B  (A2)+,(A0)+             ; A2 = OLD POS, A0 = NEW POS 
00001652  51C8 FFFC                995              DBRA    D0,.MOVER
00001656  95FC 00000014            996              SUBA.L  #20,A2
0000165C  91FC 00000014            997              SUBA.L  #20,A0
00001662  51C9 FFE8                998              DBRA    D1,.LOOP
00001666                           999  .LOAD                                       ; SAVES THE NAME AT ROW = 1
00001666  32B9 00002C0A           1000              MOVE.W  PSCORE,(A1)
0000166C  5489                    1001              ADDA.L  #2,A1
0000166E  303C 0007               1002              MOVE.W  #7,D0                   ; NAME = 8 BYTES
00001672  41F9 00002C10           1003              LEA.L   PNAME,A0                 
00001678                          1004  .NAME
00001678  12D8                    1005              MOVE.B  (A0)+,(A1)+
0000167A  51C8 FFFC               1006              DBRA    D0,.NAME          
0000167E  4CDF 0703               1007              MOVEM.L (A7)+,D0-D1/A0-A2
00001682  4E75                    1008              RTS
00001684                          1009  ; -----------------------------------------------------------------------------
00001684                          1010  UTLWRFILE 
00001684                          1011  ; SAVES THE RNKTABLE IN THE FILE
00001684                          1012  ; INPUT    - NONE
00001684                          1013  ; OUTPUT   - NONE
00001684                          1014  ; MODIFIES - score.txt 
00001684                          1015  ; -----------------------------------------------------------------------------
00001684  48E7 E040               1016              MOVEM.L D0-D2/A1,-(A7)
00001688  103C 0032               1017              MOVE.B  #50,D0                  ; CLOSES ALL THE FILES
0000168C  4E4F                    1018              TRAP    #15
0000168E  43F8 11DC               1019              LEA.L   FILE,A1                 ; OPEN FILE
00001692  103C 0033               1020              MOVE.B  #51,D0                  
00001696  4E4F                    1021              TRAP    #15                     ; D1 = FILE ID
00001698                          1022              
00001698  4282                    1023              CLR.L   D2
0000169A  43F9 00002C38           1024              LEA.L   RNKTABLE,A1             
000016A0  3439 00002C36           1025              MOVE.W  POSRNK,D2  
000016A6  0642 000A               1026              ADD.W   #10,D2                  
000016AA  103C 0036               1027              MOVE.B  #54,D0                  ; WRITES THE PLAYER IN THE FILE 
000016AE  4E4F                    1028              TRAP    #15
000016B0                          1029             
000016B0  103C 0038               1030              MOVE.B  #56,D0                  ; CLOSE THE FILE
000016B4  4E4F                    1031              TRAP    #15
000016B6  4CDF 0207               1032              MOVEM.L (A7)+,D0-D2/A1
000016BA  4E75                    1033              RTS
000016BC                          1034  
000016BC                          1035  
000016BC                          1036  -------------------- end include --------------------
000016BC                          1037              INCLUDE "PLAYER.X68"            ; PLAYER MANAGEMENT
000016BC                          1038  ; -----------------------------------------------------------------------------
000016BC                          1039  ;           PLAYER
000016BC                          1040  ; -----------------------------------------------------------------------------
000016BC                          1041  PLRINIT
000016BC                          1042  ; INITIALIZES THE PLAYER TO LEVEL 1
000016BC                          1043  ; INPUT    - NONE
000016BC                          1044  ; OUTPUT   - NONE
000016BC                          1045  ; MODIFIES - NONE
000016BC                          1046  ; -----------------------------------------------------------------------------
000016BC  33FC 00E0 00002C04      1047              MOVE.W  #PINPOSX1,PPOSX
000016C4  33FC 0040 00002C06      1048              MOVE.W  #PINWIDTH1,PWIDTH
000016CC  4E75                    1049              RTS
000016CE                          1050  ; -----------------------------------------------------------------------------
000016CE                          1051  PLRLEV2
000016CE                          1052  ; INITIALIZES THE PLAYER TO LEVEL 2
000016CE                          1053  ; INPUT    - NONE
000016CE                          1054  ; OUTPUT   - NONE
000016CE                          1055  ; MODIFIES - NONE
000016CE                          1056  ; -----------------------------------------------------------------------------
000016CE  33FC 00E5 00002C04      1057              MOVE.W  #PINPOSX2,PPOSX
000016D6  33FC 0036 00002C06      1058              MOVE.W  #PINWIDTH2,PWIDTH
000016DE  4E75                    1059              RTS        
000016E0                          1060  ; -----------------------------------------------------------------------------
000016E0                          1061  PLRLEV3
000016E0                          1062  ; INITIALIZES THE PLAYER TO LEVEL 3
000016E0                          1063  ; INPUT    - NONE
000016E0                          1064  ; OUTPUT   - NONE
000016E0                          1065  ; MODIFIES - NONE
000016E0                          1066  ; -----------------------------------------------------------------------------
000016E0  33FC 00EA 00002C04      1067              MOVE.W  #PINPOSX3,PPOSX
000016E8  33FC 002C 00002C06      1068              MOVE.W  #PINWIDTH3,PWIDTH
000016F0  4E75                    1069              RTS     
000016F2                          1070  ; -----------------------------------------------------------------------------
000016F2                          1071  PLRUPD
000016F2                          1072  ; UPDATES THE POSITION, LIVES AND SCORE OF THE PLAYER
000016F2                          1073  ; INPUT     - NONE
000016F2                          1074  ; OUTPUT    - NONE
000016F2                          1075  ; MODIFIES  - NONE
000016F2                          1076  ; -----------------------------------------------------------------------------
000016F2  48E7 6000               1077              MOVEM.L D1-D2,-(A7)
000016F6  1239 00001F5C           1078              MOVE.B  KBDVAL,D1  
000016FC  E219                    1079              ROR.B   #1,D1                   ;IZQUIERDA
000016FE  6400 0016               1080              BCC     .RIGHTKEY               ;CUANDO C = 0
00001702                          1081              ;CUANDO PPOSX ES 0 NO TINENE QUE MOVERSE MAS A LA IZQ
00001702  3439 00002C04           1082              MOVE.W  PPOSX,D2
00001708  B47C 0000               1083              CMP.W    #0,D2
0000170C  6F00 0008               1084              BLE     .RIGHTKEY
00001710  5179 00002C04           1085              SUB.W   #PMOVE,(PPOSX)
00001716                          1086  .RIGHTKEY
00001716  E209                    1087              LSR.B   #1,D1                   
00001718  E219                    1088              ROR.B   #1,D1                   
0000171A  6400 001C               1089              BCC     .END
0000171E                          1090              ;CUANDO PPOSX ES IGUAL A SCRWIDTH+PWIDTH NO TIENE QUE MOVERSE A LA DERECHA
0000171E  3439 00002C04           1091              MOVE.W  PPOSX,D2
00001724  D479 00002C06           1092              ADD.W   PWIDTH,D2 
0000172A                          1093  
0000172A  B47C 01FC               1094              CMP.W    #SCRCTRL-SCRLWIDTH,D2
0000172E  6C00 0008               1095              BGE     .END
00001732  5079 00002C04           1096              ADD.W   #PMOVE,PPOSX
00001738                          1097  .END
00001738  4CDF 0006               1098              MOVEM.L (A7)+,D1-D2
0000173C  4E75                    1099              RTS
0000173E                          1100  
0000173E                          1101  ; -----------------------------------------------------------------------------
0000173E                          1102  PPLOT
0000173E                          1103  ; PLOTS THE PLAYER ITS LIFE AND THE SCORE
0000173E                          1104  ; INPUT    - NONE
0000173E                          1105  ; OUTPUT   - NONE
0000173E                          1106  ; MODIFIES - NONE
0000173E                          1107  ; -----------------------------------------------------------------------------
0000173E  48E7 FC40               1108              MOVEM.L  D0-D5/A1,-(A7)
00001742                          1109              ;PLOT THE PLATAFORM
00001742                          1110m             UTLSPEN #PCOLOR 
00001742                          1111m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001742                          1112m ; INPUT    - #PCOLOR COLOR IN FORMAT $00BBGGRR
00001742                          1113m ; OUTPUT   - NONE
00001742                          1114m ; MODIFIES - D0,D1
00001742                          1115m ; -----------------------------------------------------------------------------
0000174E                          1116m             UTLSFIL #PCOLOR
0000174E                          1117m ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000174E                          1118m ; INPUT    - #PCOLOR COLOR IN FORMAT $00BBGGRR
0000174E                          1119m ; OUTPUT   - NONE
0000174E                          1120m ; MODIFIES - D0,D1
0000174E                          1121m ; -----------------------------------------------------------------------------
0000175A  3239 00002C04           1122              MOVE.W  PPOSX,D1
00001760  343C 01D0               1123              MOVE.W  #PPOSY,D2                    
00001764  3639 00002C04           1124              MOVE.W  PPOSX,D3
0000176A  3839 00002C06           1125              MOVE.W  PWIDTH,D4 
00001770  D644                    1126              ADD.W   D4,D3
00001772  383C 01DC               1127              MOVE.W  #PPOSY+PHEIGHT,D4
00001776  303C 0057               1128              MOVE.W  #87,D0
0000177A  4E4F                    1129              TRAP    #15
0000177C                          1130              
0000177C                          1131              ;PLOT LIFE
0000177C  3A39 00002C08           1132              MOVE.W  PLIVES,D5
00001782  6700 00A2               1133              BEQ     .END
00001786                          1134m             UTLSPEN #0 
00001786                          1135m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001786                          1136m ; INPUT    - #0 COLOR IN FORMAT $00BBGGRR
00001786                          1137m ; OUTPUT   - NONE
00001786                          1138m ; MODIFIES - D0,D1
00001786                          1139m ; -----------------------------------------------------------------------------
0000178E                          1140m             UTLSFIL #LIVECOLOR
0000178E                          1141m ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000178E                          1142m ; INPUT    - #LIVECOLOR COLOR IN FORMAT $00BBGGRR
0000178E                          1143m ; OUTPUT   - NONE
0000178E                          1144m ; MODIFIES - D0,D1
0000178E                          1145m ; -----------------------------------------------------------------------------
0000179A  5345                    1146              SUB.W   #1,D5             
0000179C  103C 0057               1147              MOVE.B  #87,D0
000017A0  323C 0215               1148              MOVE.W  #LIVEPOSX,D1
000017A4  3601                    1149              MOVE.W  D1,D3
000017A6  0643 0040               1150              ADD.W   #LIVEWIDTH,D3
000017AA  343C 001E               1151              MOVE.W  #LIVEPOSY,D2
000017AE  3802                    1152              MOVE.W  D2,D4
000017B0  0644 0010               1153              ADD.W   #LIVEHEIGHT,D4
000017B4                          1154  .LIFES           
000017B4  4E4F                    1155              TRAP    #15
000017B6  3203                    1156              MOVE.W  D3,D1
000017B8  0643 0040               1157              ADD.W   #LIVEWIDTH,D3
000017BC  51CD FFF6               1158              DBRA    D5,.LIFES
000017C0                          1159              
000017C0                          1160              ;PLOT SCORE
000017C0                          1161m             UTLLOCT PSCORETX,PSCORETY  
000017C0                          1162m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000017C0                          1163m ; INPUT    - PSCORETX X, PSCORETY Y
000017C0                          1164m ; OUTPUT   - NONE
000017C0                          1165m ; MODIFIES - D0,D1
000017C0                          1166m ; -----------------------------------------------------------------------------
000017CA                          1167m             UTLSFIL #$00000000
000017CA                          1168m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000017CA                          1169m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
000017CA                          1170m ; OUTPUT   - NONE
000017CA                          1171m ; MODIFIES - D0,D1
000017CA                          1172m ; -----------------------------------------------------------------------------
000017D2  43F9 0000182C           1173              LEA     .TXTSCORE,A1             
000017D8  3239 00002C0A           1174              MOVE.W  PSCORE,D1
000017DE  103C 0011               1175              MOVE.B  #17,D0
000017E2  4E4F                    1176              TRAP    #15
000017E4                          1177              
000017E4                          1178              ;PLOT LEVEL
000017E4                          1179m             UTLLOCT PSCORETX,PSCORETY+2  
000017E4                          1180m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000017E4                          1181m ; INPUT    - PSCORETX X, PSCORETY+2 Y
000017E4                          1182m ; OUTPUT   - NONE
000017E4                          1183m ; MODIFIES - D0,D1
000017E4                          1184m ; -----------------------------------------------------------------------------
000017EE                          1185m             UTLSFIL #$00000000
000017EE                          1186m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000017EE                          1187m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
000017EE                          1188m ; OUTPUT   - NONE
000017EE                          1189m ; MODIFIES - D0,D1
000017EE                          1190m ; -----------------------------------------------------------------------------
000017F6  43F9 00001834           1191              LEA     .TXTLEVEL,A1              
000017FC  3239 00002C0E           1192              MOVE.W  LEVEL,D1
00001802  103C 0011               1193              MOVE.B  #17,D0
00001806  4E4F                    1194              TRAP    #15
00001808                          1195              
00001808                          1196              ;PLOT NAME
00001808                          1197m             UTLLOCT PSCORETX,PSCORETY+4  
00001808                          1198m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001808                          1199m ; INPUT    - PSCORETX X, PSCORETY+4 Y
00001808                          1200m ; OUTPUT   - NONE
00001808                          1201m ; MODIFIES - D0,D1
00001808                          1202m ; -----------------------------------------------------------------------------
00001812                          1203m             UTLSFIL #$00000000
00001812                          1204m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001812                          1205m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
00001812                          1206m ; OUTPUT   - NONE
00001812                          1207m ; MODIFIES - D0,D1
00001812                          1208m ; -----------------------------------------------------------------------------
0000181A  43F9 00002C10           1209              LEA     PNAME,A1 
00001820  103C 000E               1210              MOVE.B  #14,D0
00001824  4E4F                    1211              TRAP    #15
00001826                          1212  
00001826                          1213  .END            
00001826  4CDF 023F               1214              MOVEM.L (A7)+,D0-D5/A1
0000182A  4E75                    1215              RTS
0000182C                          1216              
0000182C= 53 43 4F 52 45 3A ...   1217  .TXTSCORE   DC.B    'SCORE: ',0
00001834= 4C 45 56 45 4C 3A ...   1218  .TXTLEVEL   DC.B    'LEVEL: ',0
0000183C                          1219              DS.W    0
0000183C                          1220  
0000183C                          1221  -------------------- end include --------------------
0000183C                          1222              INCLUDE "STATES.X68"            ; GAME STATES MANAGEMENT
0000183C                          1223  ; =============================================================================
0000183C                          1224  ; GAME STATE MANAGEMENT
0000183C                          1225  ; =============================================================================
0000183C                          1226  
0000183C                          1227  ; -----------------------------------------------------------------------------
0000183C                          1228  STAINIT
0000183C                          1229  ; INITALIZES THE STATE MANAGER
0000183C                          1230  ; INPUT    - NONE
0000183C                          1231  ; OUTPUT   - NONE
0000183C                          1232  ; MODIFIES - NONE
0000183C                          1233  ; -----------------------------------------------------------------------------
0000183C  33FC FFFF 00002C00      1234              MOVE.W  #STANONE,STACUR  
00001844  33FC 0000 00002C02      1235              MOVE.W  #STAINTR,STANEXT  
0000184C  4E75                    1236              RTS
0000184E                          1237  ; -----------------------------------------------------------------------------
0000184E                          1238  STAUPD
0000184E                          1239  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
0000184E                          1240  ; INPUT    - NONE
0000184E                          1241  ; OUTPUT   - NONE
0000184E                          1242  ; MODIFIES - NONE
0000184E                          1243  ; -----------------------------------------------------------------------------
0000184E  48E7 8080               1244              MOVEM.L D0/A0,-(A7)
00001852  4280                    1245              CLR.L   D0
00001854  3039 00002C02           1246              MOVE.W  STANEXT,D0
0000185A  B079 00002C00           1247              CMP.W   (STACUR),D0
00001860  6700 0012               1248              BEQ     .DOUPD
00001864                          1249              
00001864  33C0 00002C00           1250              MOVE.W  D0,STACUR 
0000186A  E588                    1251              LSL.L   #2,D0
0000186C  2040                    1252              MOVE.L  D0,A0
0000186E  2068 188C               1253              MOVE.L  .INITBL(A0),A0
00001872                          1254              
00001872  4E90                    1255              JSR     (A0)
00001874  4280                    1256  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
00001876  3039 00002C00           1257              MOVE.W  STACUR,D0
0000187C  E588                    1258              LSL.L   #2,D0
0000187E  2040                    1259              MOVE.L  D0,A0
00001880  2068 18A0               1260              MOVE.L  .UPDTBL(A0),A0
00001884  4E90                    1261              JSR     (A0)
00001886  4CDF 0101               1262              MOVEM.L (A7)+,D0/A0
0000188A  4E75                    1263              RTS
0000188C= 000019D2 0000194E ...   1264  .INITBL     DC.L    STAINTRI,STAPLAYI,STAEMPTY,STASAVEI,STASAVEI 
000018A0= 00001A6A 00001978 ...   1265  .UPDTBL     DC.L    STAINTRU,STASPACEU,STAPLAYU,STAFINU,STAFINU
000018B4                          1266  ; -----------------------------------------------------------------------------
000018B4                          1267  STAPLOT
000018B4                          1268  ; PERFORMS STATE PLOT
000018B4                          1269  ; INPUT    - NONE
000018B4                          1270  ; OUTPUT   - NONE
000018B4                          1271  ; MODIFIES - NONE
000018B4                          1272  ; -----------------------------------------------------------------------------
000018B4  48E7 8080               1273              MOVEM.L D0/A0,-(A7)
000018B8  4280                    1274              CLR.L   D0
000018BA  3039 00002C02           1275              MOVE.W  STANEXT,D0
000018C0  E588                    1276              LSL.L   #2,D0
000018C2  2040                    1277              MOVE.L  D0,A0
000018C4  2068 18D0               1278              MOVE.L  .PLTTBL(A0),A0         
000018C8  4E90                    1279              JSR     (A0)
000018CA  4CDF 0101               1280              MOVEM.L (A7)+,D0/A0
000018CE  4E75                    1281              RTS
000018D0= 00001AD8 000019B0 ...   1282  .PLTTBL     DC.L    STAINTRP,STAPLAYP,STAPLAYP,STAGOVRP,STAWINP
000018E4                          1283                             ;SPACE        
000018E4                          1284  
000018E4                          1285  ; -----------------------------------------------------------------------------
000018E4                          1286  STAEMPTY
000018E4                          1287  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
000018E4                          1288  ; INPUT    - NONE
000018E4                          1289  ; OUTPUT   - NONE
000018E4                          1290  ; MODIFIES - NONE
000018E4                          1291  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
000018E4                          1292  ; -----------------------------------------------------------------------------
000018E4  4E75                    1293              RTS
000018E6                          1294  ; -----------------------------------------------------------------------------
000018E6                          1295  STASAVEI
000018E6                          1296  ; SAVES THE INFORMATION OF THE PLAYER
000018E6                          1297  ; INPUT    - NONE
000018E6                          1298  ; OUTPUT   - NONE
000018E6                          1299  ; MODIFIES - NONE
000018E6                          1300  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
000018E6                          1301  ; -----------------------------------------------------------------------------
000018E6  48E7 C0E0               1302              MOVEM.L D0-D1/A0-A2,-(A7)
000018EA                          1303              
000018EA  43F9 00002C38           1304              LEA.L   RNKTABLE,A1
000018F0  3239 00002C36           1305              MOVE.W  POSRNK,D1
000018F6  0C91 FFFFFFFF           1306              CMP.L   #$FFFFFFFF,(A1)         
000018FC  6700 002E               1307              BEQ     .LOAD                   ; IF THE MATRIX IS EMPTY
00001900                          1308              
00001900                          1309              ; MOVES ALL THE ELEMENTS AT THE RIGHT 
00001900  2049                    1310              MOVE.L  A1,A0            
00001902  2449                    1311              MOVE.L  A1,A2
00001904  D4C1                    1312              ADDA.W  D1,A2
00001906  94FC 000A               1313              SUBA.W   #10,A2
0000190A  D0C1                    1314              ADDA.W  D1,A0                   
0000190C  82FC 000A               1315              DIVU    #10,D1
00001910  5341                    1316              SUBQ.W  #1,D1
00001912                          1317  .LOOP                   
00001912  303C 0009               1318              MOVE.W  #9,D0                   ; 10 COLUMNS
00001916                          1319  .MOVER
00001916  10DA                    1320              MOVE.B  (A2)+,(A0)+             ; A2 = OLD POS, A0 = NEW POS 
00001918  51C8 FFFC               1321              DBRA    D0,.MOVER
0000191C  95FC 00000014           1322              SUBA.L  #20,A2
00001922  91FC 00000014           1323              SUBA.L  #20,A0
00001928  51C9 FFE8               1324              DBRA    D1,.LOOP
0000192C                          1325  .LOAD                                       ; SAVES THE NAME AT ROW = 1
0000192C  32B9 00002C0A           1326              MOVE.W  PSCORE,(A1)
00001932  5489                    1327              ADDA.L  #2,A1
00001934  303C 0007               1328              MOVE.W  #7,D0                   ; NAME = 8 BYTES
00001938  41F9 00002C10           1329              LEA.L   PNAME,A0                 
0000193E                          1330  .NAME
0000193E  12D8                    1331              MOVE.B  (A0)+,(A1)+
00001940  51C8 FFFC               1332              DBRA    D0,.NAME          
00001944  4CDF 0703               1333              MOVEM.L (A7)+,D0-D1/A0-A2
00001948                          1334          
00001948                          1335  
00001948  4EB8 1684               1336              JSR     UTLWRFILE               ;ESCRIBIMOS EN EL FICHERO
0000194C  4E75                    1337              RTS
0000194E                          1338  ; -----------------------------------------------------------------------------
0000194E                          1339  STAPLAYI    ;DEL NIVEL1, COMIENZO
0000194E                          1340  
0000194E                          1341  ; PLAY STATE INITIALIZATION
0000194E                          1342  ; INPUT    - NONE
0000194E                          1343  ; OUTPUT   - NONE
0000194E                          1344  ; MODIFIES - NONE
0000194E                          1345  ; NOTE     - JUST A WRAPPER FOR PLRINIT
0000194E                          1346  ; -----------------------------------------------------------------------------
0000194E  48E7 FFFE               1347              MOVEM.L D0-D7/A0-A6,-(A7)
00001952  33FC 00FB 00002C20      1348              MOVE.W  #BINPOSX,BPOSX1
0000195A  33FC 01CE 00002C26      1349              MOVE.W  #BINPOSY,BPOSY2
00001962  33FC 0105 00002C22      1350              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
0000196A  33FC 01C4 00002C24      1351              MOVE.W  #BINPOSY-BDIAMET,BPOSY1
00001972                          1352              
00001972  4CDF 7FFF               1353              MOVEM.L (A7)+,D0-D7/A0-A6
00001976  4E75                    1354              RTS
00001978                          1355  ; -----------------------------------------------------------------------------
00001978                          1356  STASPACEU
00001978                          1357  ; WAITS FOR SPACE TO BE PRESSED, AND BEGIN THE GAME
00001978                          1358  ; INPUT    - NONE
00001978                          1359  ; OUTPUT   - NONE
00001978                          1360  ; MODIFIES - NONE
00001978                          1361  ; -----------------------------------------------------------------------------
00001978  33FC 00E0 00002C04      1362              MOVE.W  #PINPOSX1,PPOSX
00001980  0839 0004 00001F5D      1363              BTST.B  #KBDBITF1,(KBDEDGE)
00001988  6700 000A               1364              BEQ     .END
0000198C  33FC 0002 00002C02      1365              MOVE.W  #STAPLAY,STANEXT
00001994                          1366  .END        
00001994  4E75                    1367              RTS
00001996                          1368  ; -----------------------------------------------------------------------------
00001996                          1369  STAPLAYU
00001996                          1370  ; PLAY STATE UPDATE
00001996                          1371  ; INPUT    - NONE
00001996                          1372  ; OUTPUT   - NONE
00001996                          1373  ; MODIFIES - NONE
00001996                          1374  ; -----------------------------------------------------------------------------
00001996  48E7 FFFE               1375              MOVEM.L D0-D7/A0-A6,-(A7)
0000199A  4EB8 16F2               1376              JSR     PLRUPD
0000199E  4EB9 00001C52           1377              JSR     BUPD    
000019A4  4EB9 00001E02           1378              JSR     BLUPD
000019AA  4CDF 7FFF               1379              MOVEM.L (A7)+,D0-D7/A0-A6          
000019AE  4E75                    1380              RTS
000019B0                          1381  ; -----------------------------------------------------------------------------
000019B0                          1382  STAPLAYP
000019B0                          1383  ; PLAY STATE PLOT
000019B0                          1384  ; INPUT    - NONE
000019B0                          1385  ; OUTPUT   - NONE
000019B0                          1386  ; MODIFIES - NONE
000019B0                          1387  ; -----------------------------------------------------------------------------
000019B0  48E7 FFFE               1388              MOVEM.L D0-D7/A0-A6,-(A7)
000019B4  4EB9 00001D1E           1389              JSR     BPLOT
000019BA  4EB9 00001EA0           1390              JSR     BLPLOT
000019C0  4EB8 173E               1391              JSR     PPLOT
000019C4  4EB8 14F0               1392              JSR     UTLSREENP
000019C8  4EB8 158A               1393              JSR     UTLREADRNK
000019CC  4CDF 7FFF               1394              MOVEM.L (A7)+,D0-D7/A0-A6 
000019D0  4E75                    1395              RTS
000019D2                          1396  ; -----------------------------------------------------------------------------
000019D2                          1397  STAINTRI   
000019D2                          1398  ; PARA QUE EL SCORE LA VIDA SE VUELVAN A REINICIAR
000019D2                          1399  
000019D2                          1400  ; INTRO STATE INIT
000019D2                          1401  ; INPUT    - NONE
000019D2                          1402  ; OUTPUT   - NONE
000019D2                          1403  ; MODIFIES - NONE
000019D2                          1404  ; -----------------------------------------------------------------------------
000019D2  4EB8 111A               1405              JSR     DMMINIT
000019D6  4EB8 1544               1406              JSR     UTLREADFILE
000019DA  4EB8 1216               1407              JSR     UTLINTRI
000019DE                          1408m             UTLSNDS .SOUND,#1
000019DE                          1409m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
000019DE                          1410m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
000019DE                          1411m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000019DE                          1412m ; MODIFIES - D0,A1
000019DE                          1413m ; -----------------------------------------------------------------------------
000019F4                          1414m             UTLSIZC #INTPRSC,TXSSIZE
000019F4                          1415m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
000019F4                          1416m ; INPUT    - #INTPRSC COLOR IN FORMAT $00BBGGRR TXSSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
000019F4                          1417m ; OUTPUT   - NONE
000019F4                          1418m ; MODIFIES - D0,D1
000019F4                          1419m ; -----------------------------------------------------------------------------
00001A06                          1420m             UTLLOCT 18,25  
00001A06                          1421m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001A06                          1422m ; INPUT    - 18 X, 25 Y
00001A06                          1423m ; OUTPUT   - NONE
00001A06                          1424m ; MODIFIES - D0,D1
00001A06                          1425m ; -----------------------------------------------------------------------------
00001A10                          1426m             UTLSVNAME
00001A10                          1427m ; WRAPPER FOR SAVING THE NAME OF THE PLAYER
00001A10                          1428m ; MAX CARACTERS: 20
00001A10                          1429m ; -----------------------------------------------------------------------------
00001A54  4E75                    1430              RTS
00001A56= 73746172 74206C61 ...   1431  .SOUND      DC.L    'start largo.wav',0
00001A6A                          1432  
00001A6A                          1433  ; -----------------------------------------------------------------------------
00001A6A                          1434  STAINTRU
00001A6A                          1435  ; INTRO STATE UPDATE
00001A6A                          1436  ; INPUT    - NONE
00001A6A                          1437  ; OUTPUT   - NONE
00001A6A                          1438  ; MODIFIES - NONE
00001A6A                          1439  ; -----------------------------------------------------------------------------
00001A6A  48E7 FFFE               1440              MOVEM.L D0-D7/A0-A6,-(A7)
00001A6E                          1441m             UTLSNDS .SOUND,#1
00001A6E                          1442m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001A6E                          1443m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
00001A6E                          1444m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001A6E                          1445m ; MODIFIES - D0,A1
00001A6E                          1446m ; -----------------------------------------------------------------------------
00001A84  0839 0004 00001F5D      1447              BTST.B  #KBDBITF1,(KBDEDGE)
00001A8C  6700 0030               1448              BEQ     .END
00001A90  33FC 0001 00002C02      1449              MOVE.W  #STASPACE,STANEXT
00001A98                          1450m             UTLSNDST
00001A98                          1451m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
00001A98                          1452m ; INPUT    - NONE 
00001A98                          1453m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001A98                          1454m ; MODIFIES - D0,A1
00001A98                          1455m ; -----------------------------------------------------------------------------
00001AA0  4EB8 16BC               1456              JSR     PLRINIT
00001AA4  4EB9 00001D5E           1457              JSR     BLINIT
00001AAA  4EB9 00001BBE           1458              JSR     BINIT
00001AB0  33FC 0003 00002C08      1459              MOVE.W  #PINLIVE,PLIVES
00001AB8  4279 00002C0A           1460              CLR.W   PSCORE            
00001ABE                          1461  .END        
00001ABE  4CDF 7FFF               1462              MOVEM.L (A7)+,D0-D7/A0-A6
00001AC2  4E75                    1463              RTS
00001AC4= 73746172 74206C61 ...   1464  .SOUND      DC.L    'start largo.wav',0
00001AD8                          1465  
00001AD8                          1466  ; -----------------------------------------------------------------------------
00001AD8                          1467  STAINTRP
00001AD8                          1468  ; INTRO STATE PLOT
00001AD8                          1469  ; INPUT    - NONE
00001AD8                          1470  ; OUTPUT   - NONE
00001AD8                          1471  ; MODIFIES - NONE
00001AD8                          1472  ; -----------------------------------------------------------------------------
00001AD8  4EB8 1216               1473             JSR      UTLINTRI
00001ADC  48E7 E040               1474              MOVEM.L D0-D2/A1,-(A7)
00001AE0                          1475              ;START
00001AE0                          1476m             UTLLOCT INTPRSX,INTPRSY
00001AE0                          1477m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001AE0                          1478m ; INPUT    - INTPRSX X, INTPRSY Y
00001AE0                          1479m ; OUTPUT   - NONE
00001AE0                          1480m ; MODIFIES - D0,D1
00001AE0                          1481m ; -----------------------------------------------------------------------------
00001AEA                          1482m             UTLSIZC #INTPRSC,TXSSIZE
00001AEA                          1483m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001AEA                          1484m ; INPUT    - #INTPRSC COLOR IN FORMAT $00BBGGRR TXSSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001AEA                          1485m ; OUTPUT   - NONE
00001AEA                          1486m ; MODIFIES - D0,D1
00001AEA                          1487m ; -----------------------------------------------------------------------------
00001AFC  43F9 00001B0E           1488              LEA     .PRSSTR,A1
00001B02  103C 000E               1489              MOVE.B  #14,D0
00001B06  4E4F                    1490              TRAP    #15
00001B08  4CDF 0207               1491              MOVEM.L (A7)+,D0-D2/A1
00001B0C  4E75                    1492              RTS
00001B0E= 50 55 53 48 20 46 ...   1493  .PRSSTR     DC.B    'PUSH FIRE TO START',0
00001B22                          1494              DS.W    0
00001B22                          1495             
00001B22                          1496  ; -----------------------------------------------------------------------------
00001B22                          1497  STAFINU
00001B22                          1498  ; GAME OVER STATE UPDATE
00001B22                          1499  ; INPUT    - NONE
00001B22                          1500  ; OUTPUT   - NONE
00001B22                          1501  ; MODIFIES - NONE
00001B22                          1502  ; -----------------------------------------------------------------------------
00001B22                          1503              ;visualiza el fichero
00001B22  0839 0004 00001F5D      1504              BTST.B  #KBDBITF1,(KBDEDGE)
00001B2A  6700 0012               1505              BEQ     .END
00001B2E                          1506m             UTLSNDST
00001B2E                          1507m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
00001B2E                          1508m ; INPUT    - NONE 
00001B2E                          1509m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001B2E                          1510m ; MODIFIES - D0,A1
00001B2E                          1511m ; -----------------------------------------------------------------------------
00001B36  33FC 0000 00002C02      1512              MOVE.W  #STAINTR,(STANEXT)
00001B3E  4E75                    1513  .END        RTS
00001B40                          1514  
00001B40                          1515  ; -----------------------------------------------------------------------------
00001B40                          1516  STAGOVRP
00001B40                          1517  ; GAME OVER STATE PLOT
00001B40                          1518  ; INPUT    - NONE
00001B40                          1519  ; OUTPUT   - NONE
00001B40                          1520  ; MODIFIES - NONE
00001B40                          1521  ; -----------------------------------------------------------------------------
00001B40                          1522  
00001B40  48E7 E040               1523              MOVEM.L A1/D0-D2,-(A7)
00001B44                          1524              
00001B44                          1525              ;GAME OVER TEXT
00001B44                          1526m             UTLLOCT GOVERX,GOVERY            
00001B44                          1527m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001B44                          1528m ; INPUT    - GOVERX X, GOVERY Y
00001B44                          1529m ; OUTPUT   - NONE
00001B44                          1530m ; MODIFIES - D0,D1
00001B44                          1531m ; -----------------------------------------------------------------------------
00001B4E                          1532m             UTLSIZC #GOVERC,TXBSIZE
00001B4E                          1533m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001B4E                          1534m ; INPUT    - #GOVERC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001B4E                          1535m ; OUTPUT   - NONE
00001B4E                          1536m ; MODIFIES - D0,D1
00001B4E                          1537m ; -----------------------------------------------------------------------------
00001B60                          1538m             UTLSFIL #$00000000
00001B60                          1539m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001B60                          1540m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
00001B60                          1541m ; OUTPUT   - NONE
00001B60                          1542m ; MODIFIES - D0,D1
00001B60                          1543m ; -----------------------------------------------------------------------------
00001B68  43F9 00001B7A           1544              LEA     .GOVSTR,A1              ;PONE EL TEXTO
00001B6E  103C 000E               1545              MOVE.B  #14,D0
00001B72  4E4F                    1546              TRAP    #15
00001B74                          1547  
00001B74  4CDF 0207               1548              MOVEM.L (A7)+,A1/D0-D2
00001B78  4E75                    1549              RTS
00001B7A= 47 41 4D 45 20 4F ...   1550  .GOVSTR     DC.B    'GAME OVER',0
00001B84                          1551              DS.W    0
00001B84                          1552              
00001B84                          1553  ; -----------------------------------------------------------------------------
00001B84                          1554  STAWINP
00001B84                          1555  ; WIN STATE PLOT
00001B84                          1556  ; INPUT    - NONE
00001B84                          1557  ; OUTPUT   - NONE
00001B84                          1558  ; MODIFIES - NONE
00001B84                          1559  ; -----------------------------------------------------------------------------
00001B84  48E7 E040               1560              MOVEM.L D0-D2/A1,-(A7)
00001B88                          1561              ;TITULO
00001B88                          1562m             UTLLOCT INTTITX,INTTITY      
00001B88                          1563m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001B88                          1564m ; INPUT    - INTTITX X, INTTITY Y
00001B88                          1565m ; OUTPUT   - NONE
00001B88                          1566m ; MODIFIES - D0,D1
00001B88                          1567m ; -----------------------------------------------------------------------------
00001B92                          1568m             UTLSIZC #INTTITC,TXBSIZE
00001B92                          1569m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001B92                          1570m ; INPUT    - #INTTITC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001B92                          1571m ; OUTPUT   - NONE
00001B92                          1572m ; MODIFIES - D0,D1
00001B92                          1573m ; -----------------------------------------------------------------------------
00001BA4  43F9 00001BB6           1574              LEA     .TITSTR,A1            
00001BAA  103C 000E               1575              MOVE.B  #14,D0
00001BAE  4E4F                    1576              TRAP    #15
00001BB0  4CDF 0207               1577              MOVEM.L (A7)+,D0-D2/A1
00001BB4  4E75                    1578              RTS
00001BB6= 59 4F 55 20 57 4F ...   1579  .TITSTR     DC.B    'YOU WON',0
00001BBE                          1580              DS.W    0
00001BBE                          1581  
00001BBE                          1582  
00001BBE                          1583  
00001BBE                          1584  
00001BBE                          1585  
00001BBE                          1586  
00001BBE                          1587  -------------------- end include --------------------
00001BBE                          1588              INCLUDE "BALL.X68"              ; BALL MANAGEMENT
00001BBE                          1589  ; =============================================================================
00001BBE                          1590  ; BALL
00001BBE                          1591  ; =============================================================================
00001BBE                          1592  
00001BBE                          1593  ; -----------------------------------------------------------------------------
00001BBE                          1594  BINIT
00001BBE                          1595  ;INITIALIZE THE BALL
00001BBE                          1596  ; INPUT    - NONE 
00001BBE                          1597  ; OUTPUT   - NONE 
00001BBE                          1598  ; MODIFIES - NONE
00001BBE                          1599  ; -----------------------------------------------------------------------------
00001BBE  33FC 00FB 00002C20      1600              MOVE.W  #BINPOSX,BPOSX1
00001BC6  33FC 01CE 00002C26      1601              MOVE.W  #BINPOSY,BPOSY2
00001BCE  33FC 0105 00002C22      1602              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
00001BD6  33FC 01C4 00002C24      1603              MOVE.W  #BINPOSY-BDIAMET,BPOSY1
00001BDE  33FC FFFD 00002C18      1604              MOVE.W  #BINSPEED,BSPEEDX
00001BE6  33FC FFFD 00002C1A      1605              MOVE.W  #BINSPEED,BSPEEDY
00001BEE  4E75                    1606              RTS
00001BF0                          1607  ; -----------------------------------------------------------------------------
00001BF0                          1608  BNXTLEV
00001BF0                          1609  ;INITIALIZE THE BALL TO THE NEXT LEVEL
00001BF0                          1610  ; INPUT    - NONE 
00001BF0                          1611  ; OUTPUT   - NONE 
00001BF0                          1612  ; MODIFIES - NONE
00001BF0                          1613  ; -----------------------------------------------------------------------------
00001BF0  48E7 8000               1614              MOVEM.L D0,-(A7)
00001BF4  33FC 00FB 00002C20      1615              MOVE.W  #BINPOSX,BPOSX1
00001BFC  33FC 01CE 00002C24      1616              MOVE.W  #BINPOSY,BPOSY1
00001C04  33FC 0105 00002C22      1617              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
00001C0C  33FC 01D8 00002C26      1618              MOVE.W  #BINPOSY+BDIAMET,BPOSY2
00001C14  3039 00002C1A           1619              MOVE.W  BSPEEDY,D0
00001C1A  6B00 000E               1620              BMI     .NEGY
00001C1E  5279 00002C1A           1621              ADD.W   #1,BSPEEDY
00001C24  4EF9 00001C30           1622              JMP     .X
00001C2A                          1623  .NEGY        
00001C2A  5379 00002C1A           1624              SUB.W   #1,BSPEEDY
00001C30                          1625  .X          
00001C30  3039 00002C18           1626              MOVE.W  BSPEEDX,D0
00001C36  6B00 000E               1627              BMI     .NEGX 
00001C3A  5279 00002C18           1628              ADD.W   #1,BSPEEDX
00001C40  4EF9 00001C4C           1629              JMP     .END
00001C46                          1630  .NEGX       
00001C46  5379 00002C18           1631              SUB.W   #1,BSPEEDX 
00001C4C                          1632  .END        
00001C4C  4CDF 0001               1633              MOVEM.L (A7)+,D0
00001C50  4E75                    1634              RTS
00001C52                          1635        
00001C52                          1636  ;-----------------------------------------------------------------------------
00001C52                          1637  BUPD
00001C52                          1638  ; UPDATES THE BALL MOTION
00001C52                          1639  ; INPUT    - NONE 
00001C52                          1640  ; OUTPUT   - NONE 
00001C52                          1641  ; MODIFIES - NONE
00001C52                          1642  ; -----------------------------------------------------------------------------
00001C52  48E7 FFC0               1643              MOVEM.L D0-D7/A0-A1,-(A7)
00001C56                          1644              ;COMPRUEBA COLISIONES CON LAS 4 PAREDES
00001C56                          1645              ;Y SI PASA LA DE ABAJO LE ELIMINA UNA VIDA, O ENVIA LA PANTALLA GAME OVER
00001C56  3039 00002C20           1646              MOVE.W  BPOSX1,D0
00001C5C  3239 00002C24           1647              MOVE.W  BPOSY1,D1
00001C62  3439 00002C22           1648              MOVE.W  BPOSX2,D2
00001C68  3639 00002C26           1649              MOVE.W  BPOSY2,D3
00001C6E  4EB8 1258               1650              JSR     UTLCHCOLW               ;COMPRUEBA COLISIÓN CON PAREDES               
00001C72  4EB8 136A               1651              JSR     UTLCHCOLP               ;COMPRUEBA COLISIÓN CON PLATAFORMA
00001C76  4284                    1652              CLR.L   D4
00001C78  3A39 00002C22           1653              MOVE.W  BPOSX2,D5
00001C7E  3C39 00002C26           1654              MOVE.W  BPOSY2,D6
00001C84  4EB8 1402               1655              JSR     UTLCOLBL
00001C88                          1656              
00001C88  B87C 0000               1657              CMP     #0,D4
00001C8C  6600 0066               1658              BNE     .END
00001C90  3039 00002C22           1659              MOVE.W  BPOSX2,D0
00001C96  3239 00002C24           1660              MOVE.W  BPOSY1,D1
00001C9C  3A39 00002C20           1661              MOVE.W  BPOSX1,D5
00001CA2  3C39 00002C26           1662              MOVE.W  BPOSY2,D6
00001CA8  4EB8 1402               1663              JSR     UTLCOLBL
00001CAC  B87C 0000               1664              CMP     #0,D4
00001CB0  6600 0042               1665              BNE     .END
00001CB4  3039 00002C20           1666              MOVE.W  BPOSX1,D0
00001CBA  3239 00002C26           1667              MOVE.W  BPOSY2,D1
00001CC0  3A39 00002C22           1668              MOVE.W  BPOSX2,D5
00001CC6  3C39 00002C24           1669              MOVE.W  BPOSY1,D6
00001CCC  4EB8 1402               1670              JSR     UTLCOLBL
00001CD0  B87C 0000               1671              CMP     #0,D4
00001CD4  6600 001E               1672              BNE     .END
00001CD8  3039 00002C22           1673              MOVE.W  BPOSX2,D0
00001CDE  3239 00002C26           1674              MOVE.W  BPOSY2,D1
00001CE4  3A39 00002C20           1675              MOVE.W  BPOSX1,D5
00001CEA  3C39 00002C24           1676              MOVE.W  BPOSY1,D6
00001CF0  4EB8 1402               1677              JSR     UTLCOLBL   
00001CF4                          1678  .END            
00001CF4  3039 00002C18           1679              MOVE.W  BSPEEDX,D0              ;POSICIÓN = POSICIÓN + VELOCIDAD
00001CFA  D179 00002C20           1680              ADD.W   D0,BPOSX1
00001D00  D179 00002C22           1681              ADD.W   D0,BPOSX2
00001D06                          1682              
00001D06  3239 00002C1A           1683              MOVE.W  BSPEEDY,D1
00001D0C  D379 00002C24           1684              ADD.W   D1,BPOSY1
00001D12  D379 00002C26           1685              ADD.W   D1,BPOSY2
00001D18  4CDF 03FF               1686              MOVEM.L (A7)+,D0-D7/A0-A1
00001D1C  4E75                    1687              RTS
00001D1E                          1688  ;-----------------------------------------------------------------------------
00001D1E                          1689  BPLOT
00001D1E                          1690  ; PLOTES THE BALL 
00001D1E                          1691  ; INPUT    - NONE 
00001D1E                          1692  ; OUTPUT   - NONE 
00001D1E                          1693  ; MODIFIES - NONE
00001D1E                          1694  ; -----------------------------------------------------------------------------
00001D1E  48E7 F800               1695              MOVEM.L  D0-D4,-(A7)
00001D22                          1696m             UTLSPEN #BINCOLOR
00001D22                          1697m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001D22                          1698m ; INPUT    - #BINCOLOR COLOR IN FORMAT $00BBGGRR
00001D22                          1699m ; OUTPUT   - NONE
00001D22                          1700m ; MODIFIES - D0,D1
00001D22                          1701m ; -----------------------------------------------------------------------------
00001D2E                          1702m             UTLSFIL #BINCOLOR
00001D2E                          1703m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001D2E                          1704m ; INPUT    - #BINCOLOR COLOR IN FORMAT $00BBGGRR
00001D2E                          1705m ; OUTPUT   - NONE
00001D2E                          1706m ; MODIFIES - D0,D1
00001D2E                          1707m ; -----------------------------------------------------------------------------
00001D3A  3239 00002C20           1708              MOVE.W  BPOSX1,D1
00001D40  3439 00002C24           1709              MOVE.W  BPOSY1,D2
00001D46  3639 00002C22           1710              MOVE.W  BPOSX2,D3
00001D4C  3839 00002C26           1711              MOVE.W  BPOSY2,D4
00001D52  103C 0058               1712              MOVE.B  #88,D0
00001D56  4E4F                    1713              TRAP    #15
00001D58  4CDF 001F               1714              MOVEM.L  (A7)+,D0-D4
00001D5C  4E75                    1715              RTS
00001D5E                          1716  
00001D5E                          1717  -------------------- end include --------------------
00001D5E                          1718              INCLUDE "BLOCKS.X68"            ; BLOQUES
00001D5E                          1719  ;-----------------------------------------------------------
00001D5E                          1720  ;           BLOCKS
00001D5E                          1721  ;-----------------------------------------------------------
00001D5E                          1722    
00001D5E                          1723  BLINIT
00001D5E  48E7 8080               1724              MOVEM.L D0/A0,-(A7)
00001D62  41F9 00002C2A           1725              LEA.L   BLMATRIX,A0
00001D68  303C 000B               1726              MOVE.W #BLROW-1,D0             
00001D6C                          1727  .LOOP                   
00001D6C  10FC 00FF               1728              MOVE.B  #%11111111,(A0)+
00001D70  51C8 FFFA               1729              DBRA    D0,.LOOP
00001D74  4279 00002C28           1730              CLR.W   BLCOUNTER
00001D7A  4EB9 00001EFE           1731              JSR     BLCOUNTBL
00001D80  33FC 0001 00002C0E      1732              MOVE.W  #1,LEVEL
00001D88  4CDF 0101               1733              MOVEM.L (A7)+,D0/A0
00001D8C  4E75                    1734              RTS
00001D8E                          1735  BLLEV2           
00001D8E  48E7 8080               1736              MOVEM.L D0/A0,-(A7)
00001D92  41F9 00002C2A           1737              LEA.L   BLMATRIX,A0
00001D98  303C 000B               1738              MOVE.W  #BLROW-1,D0             
00001D9C                          1739  .LOOP       
00001D9C  10FC 005A               1740              MOVE.B  #%01011010,(A0)+
00001DA0  51C8 FFFA               1741              DBRA    D0,.LOOP
00001DA4  4279 00002C28           1742              CLR.W   BLCOUNTER
00001DAA  4EB9 00001EFE           1743              JSR     BLCOUNTBL
00001DB0  4CDF 0101               1744              MOVEM.L (A7)+,D0/A0
00001DB4  4E75                    1745              RTS
00001DB6                          1746              
00001DB6                          1747  BLLEV3              
00001DB6  48E7 0080               1748              MOVEM.L A0,-(A7)
00001DBA  41F9 00002C2A           1749              LEA.L   BLMATRIX,A0         
00001DC0  10FC 00F5               1750              MOVE.B  #%11110101,(A0)+
00001DC4  10FC 00A5               1751              MOVE.B  #%10100101,(A0)+
00001DC8  10FC 00A5               1752              MOVE.B  #%10100101,(A0)+
00001DCC  10FC 00A5               1753              MOVE.B  #%10100101,(A0)+
00001DD0  10FC 00A5               1754              MOVE.B  #%10100101,(A0)+
00001DD4  10FC 00E5               1755              MOVE.B  #%11100101,(A0)+
00001DD8  10FC 00A5               1756              MOVE.B  #%10100101,(A0)+
00001DDC  10FC 00A5               1757              MOVE.B  #%10100101,(A0)+
00001DE0  10FC 00A5               1758              MOVE.B  #%10100101,(A0)+
00001DE4  10FC 00A5               1759              MOVE.B  #%10100101,(A0)+
00001DE8  10FC 00A5               1760              MOVE.B  #%10100101,(A0)+
00001DEC  10FC 00F5               1761              MOVE.B  #%11110101,(A0)+
00001DF0  4279 00002C28           1762              CLR.W   BLCOUNTER
00001DF6  4EB9 00001EFE           1763              JSR     BLCOUNTBL
00001DFC  4CDF 0100               1764              MOVEM.L (A7)+,A0
00001E00  4E75                    1765              RTS
00001E02                          1766  
00001E02                          1767  
00001E02                          1768  ; -----------------------------------------------------------------------------
00001E02                          1769  BLUPD
00001E02                          1770  ; UPDATES THE LEVELS OF THE GAME
00001E02                          1771  ; INPUT     - NONE
00001E02                          1772  ; OUTPUT    - NONE
00001E02                          1773  ; MODIFIES  - NONE
00001E02                          1774  ; -----------------------------------------------------------------------------
00001E02  48E7 C000               1775              MOVEM.L D0-D1,-(A7)
00001E06  3039 00002C28           1776              MOVE.W  BLCOUNTER,D0
00001E0C  B07C 0000               1777              CMP     #0,D0                   ;SI NO HAY BLOQUES SALTA
00001E10  6600 0078               1778              BNE     .END
00001E14                          1779  .NEXTLEVEL  
00001E14  5279 00002C0E           1780              ADD.W   #1,LEVEL
00001E1A                          1781m             UTLSNDS .SOUND,#1
00001E1A                          1782m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001E1A                          1783m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
00001E1A                          1784m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001E1A                          1785m ; MODIFIES - D0,A1
00001E1A                          1786m ; -----------------------------------------------------------------------------
00001E30  3239 00002C0E           1787              MOVE.W  LEVEL,D1
00001E36  B27C 0004               1788              CMP     #4,D1
00001E3A  6700 0046               1789              BEQ     .WON
00001E3E  B27C 0003               1790              CMP     #3,D1              
00001E42  6700 001C               1791              BEQ     .NIVEL3
00001E46  33FC 0001 00002C02      1792              MOVE.W  #STASPACE,(STANEXT)
00001E4E  4EB8 1D8E               1793              JSR     BLLEV2
00001E52  4EB8 16CE               1794              JSR     PLRLEV2
00001E56  4EB8 1BF0               1795              JSR     BNXTLEV
00001E5A  4EF9 00001E8A           1796              JMP     .END
00001E60                          1797  .NIVEL3
00001E60  B27C 0003               1798              CMP.W   #3,D1
00001E64  6600 001C               1799              BNE     .WON
00001E68  33FC 0001 00002C02      1800              MOVE.W  #STASPACE,STANEXT
00001E70  4EB8 1DB6               1801              JSR     BLLEV3 
00001E74  4EB8 16E0               1802              JSR     PLRLEV3
00001E78  4EB8 1BF0               1803              JSR     BNXTLEV
00001E7C  4EF9 00001E8A           1804              JMP     .END
00001E82                          1805  .WON        
00001E82  33FC 0004 00002C02      1806              MOVE.W  #STAWIN,STANEXT 
00001E8A                          1807  .END 
00001E8A  4CDF 0003               1808              MOVEM.L (A7)+,D0-D1
00001E8E  4E75                    1809              RTS    
00001E90= 6C657665 6C207570 ...   1810  .SOUND      DC.L    'level up.wav',0      
00001EA0                          1811  ; -----------------------------------------------------------------------------
00001EA0                          1812  BLPLOT
00001EA0                          1813  ; PLOTS THE BLOCKS
00001EA0                          1814  ; INPUT    - NONE
00001EA0                          1815  ; OUTPUT   - NONE
00001EA0                          1816  ; MODIFIES - NONE
00001EA0                          1817  ; -----------------------------------------------------------------------------
00001EA0  48E7 FFC0               1818              MOVEM.L D0-D7/A0-A1,-(A7)
00001EA4                          1819m             UTLSPEN #$00000000
00001EA4                          1820m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001EA4                          1821m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
00001EA4                          1822m ; OUTPUT   - NONE
00001EA4                          1823m ; MODIFIES - D0,D1
00001EA4                          1824m ; -----------------------------------------------------------------------------
00001EAC  4242                    1825              CLR.W   D2                      ; Y ARRIBA
00001EAE  383C 0010               1826              MOVE.W  #BLHEIGHT,D4            ; Y ABAJO
00001EB2  41F8 11E6               1827              LEA     COLORS,A0
00001EB6                          1828              
00001EB6  3E3C 000B               1829              MOVE.W  #BLROW-1,D7  
00001EBA  227C 00000000           1830              MOVE.L  #0,A1  
00001EC0                          1831  .FILAS      
00001EC0                          1832m             UTLSFIL (A0)+ 
00001EC0                          1833m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001EC0                          1834m ; INPUT    - (A0)+ COLOR IN FORMAT $00BBGGRR
00001EC0                          1835m ; OUTPUT   - NONE
00001EC0                          1836m ; MODIFIES - D0,D1
00001EC0                          1837m ; -----------------------------------------------------------------------------
00001EC8  363C 0040               1838              MOVE.W  #BLWIDTH,D3             ; X DERECHA
00001ECC  4241                    1839              CLR.W   D1                      ; X IZQUIERDA
00001ECE  3A3C 0007               1840              MOVE.W  #BLCOL-1,D5
00001ED2  1C29 2C2A               1841              MOVE.B  BLMATRIX(A1),D6
00001ED6                          1842  .COLUM                                    
00001ED6  E31E                    1843              ROL.B   #1,D6
00001ED8  6400 0008               1844              BCC     .VACIO                  
00001EDC  103C 0057               1845              MOVE.B  #87,D0                  ; DIBUJAMOS EL CUADRADO
00001EE0  4E4F                    1846              TRAP    #15
00001EE2                          1847  .VACIO
00001EE2  3203                    1848              MOVE.W  D3,D1
00001EE4  0643 0040               1849              ADD.W   #BLWIDTH, D3
00001EE8  51CD FFEC               1850              DBRA    D5,.COLUM
00001EEC  5249                    1851              ADDA.W  #1,A1
00001EEE  3404                    1852              MOVE.W  D4,D2
00001EF0  0644 0010               1853              ADD.W   #BLHEIGHT,D4
00001EF4  51CF FFCA               1854              DBRA    D7,.FILAS
00001EF8  4CDF 03FF               1855              MOVEM.L (A7)+,D0-D7/A0-A1
00001EFC  4E75                    1856              RTS
00001EFE                          1857  ; -----------------------------------------------------------------------------
00001EFE                          1858  BLCOUNTBL
00001EFE                          1859  ; COUNTS THE NUMBER OF BLOCKS OF THE MATRIX
00001EFE                          1860  ; INPUT    - NONE (BLMATRIX)
00001EFE                          1861  ; OUTPUT   - NONE
00001EFE                          1862  ; MODIFIES - NONE
00001EFE                          1863  ; -----------------------------------------------------------------------------
00001EFE  48E7 FF20               1864              MOVEM.L D0-D7/A2,-(A7)
00001F02  323C 000B               1865              MOVE.W  #BLROW-1,D1    
00001F06  4283                    1866              CLR.L   D3
00001F08  227C 00000000           1867              MOVE.L  #0,A1                   ; RECORRE LAS FILAS (8 BYTES)
00001F0E                          1868  .FILAS                                          
00001F0E  343C 0007               1869              MOVE.W  #BLCOL-1,D2               
00001F12  1029 2C2A               1870              MOVE.B  BLMATRIX(A1),D0
00001F16                          1871  .COLUM                       
00001F16  E318                    1872              ROL.B   #1,D0         
00001F18  6400 0004               1873              BCC     .VACIO
00001F1C  5243                    1874              ADD.W   #1,D3
00001F1E                          1875  .VACIO
00001F1E  51CA FFF6               1876              DBRA    D2,.COLUM   
00001F22  5289                    1877              ADDA.L  #1,A1
00001F24  51C9 FFE8               1878              DBRA    D1,.FILAS
00001F28  33C3 00002C28           1879              MOVE.W  D3,BLCOUNTER
00001F2E  4CDF 04FF               1880              MOVEM.L (A7)+,D0-D7/A2
00001F32  4E75                    1881              RTS
00001F34                          1882  
00001F34                          1883  
00001F34                          1884  
00001F34                          1885  
00001F34                          1886  -------------------- end include --------------------
00001F34                          1887  
00001F34                          1888  ; --- INITIALIZE --------------------------------------------------------------
00001F34                          1889              
00001F34  4EB8 1000               1890  START       JSR     SYSINIT
00001F38                          1891              ; TO DO: CALL GAME INITIALIZATION CODE HERE
00001F38  4EB8 183C               1892              JSR     STAINIT                           
00001F3C                          1893              
00001F3C                          1894  ; --- UPDATE ------------------------------------------------------------------
00001F3C                          1895              
00001F3C  4E40                    1896  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD                 
00001F3E                          1897                                              ; UPDATE DEPENDING ON THE STATE
00001F3E                          1898              ; TO DO: CALL GAME UPDATE CODE HERE
00001F3E  4EB8 184E               1899              JSR     STAUPD
00001F42                          1900  
00001F42                          1901  ; --- WAIT SYNCH --------------------------------------------------------------
00001F42                          1902  
00001F42  4A39 00001F5E           1903  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
00001F48  67F8                    1904              BEQ     .WINT
00001F4A                          1905              
00001F4A  4239 00001F5E           1906              CLR.B   (SCRINTCT)
00001F50                          1907  
00001F50                          1908  ; --- PLOT --------------------------------------------------------------------
00001F50                          1909              
00001F50                          1910              ; TO DO: CALL GAME PLOT CODE HERE
00001F50  4EB8 18B4               1911              JSR     STAPLOT
00001F54                          1912  
00001F54  4E41                    1913              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001F56  60E4                    1914              BRA     .LOOP
00001F58  FFFF FFFF               1915              SIMHALT
00001F5C                          1916  
00001F5C                          1917  ; --- VARIABLES ---------------------------------------------------------------
00001F5C                          1918  
00001F5C                          1919              INCLUDE "SYSVAR.X68"
00001F5C                          1920  ; =============================================================================
00001F5C                          1921  ; SYSTEM VARS
00001F5C                          1922  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
00001F5C                          1923  ; THEY MUST NOT BE IN PROTECTED MEMORY.
00001F5C                          1924  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
00001F5C                          1925  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
00001F5C                          1926  ; THIS IS GOOD ENOUGH.
00001F5C                          1927  ; =============================================================================
00001F5C                          1928  
00001F5C                          1929  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
00001F5C                          1930  
00001F5C                          1931  KBDVAL      DS.B    1                       ; KEY PRESSED=1
00001F5D                          1932  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
00001F5E                          1933  
00001F5E                          1934              DS.W    0
00001F5E                          1935  
00001F5E                          1936  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
00001F5E                          1937  
00001F5E                          1938  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
00001F5F                          1939  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
00001F60                          1940              DS.W    0
00001F60                          1941  
00001F60                          1942  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
00001F60                          1943  
00001F80                          1944              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001F80                          1945  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002C00                          1946              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002C00                          1947  
00002C00                          1948  
00002C00                          1949  
00002C00                          1950  -------------------- end include --------------------
00002C00                          1951              INCLUDE "VAR.X68"
00002C00                          1952  ; =============================================================================
00002C00                          1953  ; GAME VARS
00002C00                          1954  ; =============================================================================
00002C00                          1955  
00002C00                          1956  ; --- GAME STATE RELATED VARIABLES --------------------------------------------
00002C00                          1957  
00002C00                          1958  STACUR      DS.W    1                       ; CURRENT GAME STATE
00002C02                          1959  STANEXT     DS.W    1                       ; NEXT GAME STATE
00002C04                          1960  ;----------------------------------------------------------------------------
00002C04                          1961  
00002C04                          1962  ; -- PLAYER -------------------------------------------------------------------
00002C04                          1963  PPOSX       DS.W    1                       ;POSICION DE LA PLATAFORMA
00002C06                          1964  PWIDTH      DS.W    1                       ; PLAYER WIDTH (PIXELS)
00002C08                          1965  PLIVES      DS.W    1                       ;LIVES LEFT
00002C0A                          1966  PSCORE      DS.W    1                       ;SCORE DEL PLAYER
00002C0C                          1967  PSPEED      DS.W    1
00002C0E                          1968  LEVEL       DS.B    2
00002C10                          1969  PNAME       DS.B    8                      ; NAME
00002C18                          1970  ;----------------------------------------------------------------------------
00002C18                          1971  
00002C18                          1972  ; BALL ----------------------------------------------------------------------
00002C18                          1973  ;BPOSX       DS.W    1                       ;POSICION DE LA PELOTA X
00002C18                          1974  ;BPOSY       DS.W    1                       ;POSICION DE LA PELOTA Y
00002C18                          1975  BSPEEDX     DS.W    1                       ;VELOCIDAD DE LA PELOTA
00002C1A                          1976  BSPEEDY     DS.W    1
00002C1C                          1977  BMXSPEED    DS.W    1                       ;LIMITACIÓN
00002C1E                          1978  BCOLOR      DS.W    1
00002C20                          1979  BPOSX1      DS.W    1
00002C22                          1980  BPOSX2      DS.W    1
00002C24                          1981  BPOSY1      DS.W    1
00002C26                          1982  BPOSY2      DS.W    1
00002C28                          1983  ; --- BLOCKS ------------------------------------------------------------------
00002C28                          1984  BLCOUNTER   DS.W    1
00002C2A                          1985  BLMATRIX    DS.B    BLROW  ;12*8
00002C36                          1986              DS.W    0
00002C36                          1987  
00002C36                          1988  ; --- RANKING TABLE -----------------------------------------------------------
00002C36                          1989  POSRNK      DS.W    1                       ; NUMBER OF BYTES READ 
00002C38                          1990  RNKTABLE    DS.B    10                      ; RANKING TABLE
00002C42                          1991  
00002C42                          1992  
00002C42                          1993  
00002C42                          1994  -------------------- end include --------------------
00002C42                          1995              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BCOLOR              2C1E
BDIAMET             A
BINCOLOR            FFFFFF
BINIT               1BBE
BINPOSX             FB
BINPOSY             1CE
BINSPEED            FFFFFFFD
BLCOL               8
BLCOUNTBL           1EFE
BLCOUNTBL:COLUM     1F16
BLCOUNTBL:FILAS     1F0E
BLCOUNTBL:VACIO     1F1E
BLCOUNTER           2C28
BLHEIGHT            10
BLINIT              1D5E
BLINIT:LOOP         1D6C
BLLEV2              1D8E
BLLEV2:LOOP         1D9C
BLLEV3              1DB6
BLMATRIX            2C2A
BLPLOT              1EA0
BLPLOT:COLUM        1ED6
BLPLOT:FILAS        1EC0
BLPLOT:VACIO        1EE2
BLROW               C
BLUE                F7E78E
BLUPD               1E02
BLUPD:END           1E8A
BLUPD:NEXTLEVEL     1E14
BLUPD:NIVEL3        1E60
BLUPD:SOUND         1E90
BLUPD:WON           1E82
BLWIDTH             40
BMXSPEED            2C1C
BNXTLEV             1BF0
BNXTLEV:END         1C4C
BNXTLEV:NEGX        1C46
BNXTLEV:NEGY        1C2A
BNXTLEV:X           1C30
BPLOT               1D1E
BPOSX1              2C20
BPOSX2              2C22
BPOSY1              2C24
BPOSY2              2C26
BSPEEDX             2C18
BSPEEDY             2C1A
BUPD                1C52
BUPD:END            1CF4
COLORS              11E6
DMMALLOC            11AC
DMMALLOC:END        11C4
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1F80
DMMFCOM             1186
DMMFFND             1194
DMMFIRST            113C
DMMFLOOP            117A
DMMFRCOM            114E
DMMFREE             11C6
DMMFRFND            115C
DMMFRLOP            1142
DMMFRSTO            1174
DMMINIT             111A
DMMINIT:LOOP        1128
DMMNEXT             115E
DMMNEXTO            1196
DMMSYSID            0
FILE                11DC
GOVERC              FFFF
GOVERX              12
GOVERY              7
GREEN               95FF8C
INTPRSC             FFFFFF
INTPRSX             20
INTPRSY             52
INTTITC             DCAA7C
INTTITX             E
INTTITY             7
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             1F5D
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10A6
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10BC
KBDREAD:LOOP1       10D2
KBDREAD:LOOP2       10EE
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              1F5C
LEVEL               2C0E
LIVECOLOR           6666FF
LIVEHEIGHT          10
LIVEPOSX            215
LIVEPOSY            1E
LIVEWIDTH           40
ORANGE              4E8CF3
PCOLOR              ECD59D
PHEIGHT             C
PINLIVE             3
PINPOSX1            E0
PINPOSX2            E5
PINPOSX3            EA
PINWIDTH1           40
PINWIDTH2           36
PINWIDTH3           2C
PLIVES              2C08
PLRINIT             16BC
PLRLEV2             16CE
PLRLEV3             16E0
PLRUPD              16F2
PLRUPD:END          1738
PLRUPD:RIGHTKEY     1716
PMOVE               8
PNAME               2C10
POSRNK              2C36
PPLOT               173E
PPLOT:END           1826
PPLOT:LIFES         17B4
PPLOT:TXTLEVEL      1834
PPLOT:TXTSCORE      182C
PPOSX               2C04
PPOSY               1D0
PSCORE              2C0A
PSCORECOL           FFFFFF
PSCORETX            3E
PSCORETY            6
PSPEED              2C0C
PURPLE              FFACAC
PWIDTH              2C06
RNKPNAC             46
RNKPOSR             11
RNKPSCC             3C
RNKTABLE            2C38
SCRCTRL             201
SCRCYCCT            1F5F
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            1F5E
SCRIRQ              1
SCRISR              107E
SCRLWIDTH           5
SCRRNKY             C8
SCRTIM              14
SCRTRAP             1
SCRUPD              108C
SCRWIDTH            2E4
STACUR              2C00
STAEMPTY            18E4
STAFINU             1B22
STAFINU:END         1B3E
STAGOVR             3
STAGOVRP            1B40
STAGOVRP:GOVSTR     1B7A
STAINIT             183C
STAINTR             0
STAINTRI            19D2
STAINTRI:INSTRUCT   1A30
STAINTRI:SOUND      1A56
STAINTRP            1AD8
STAINTRP:PRSSTR     1B0E
STAINTRU            1A6A
STAINTRU:END        1ABE
STAINTRU:SOUND      1AC4
STANEXT             2C02
STANONE             FFFFFFFF
STAPLAY             2
STAPLAYI            194E
STAPLAYP            19B0
STAPLAYU            1996
STAPLOT             18B4
STAPLOT:PLTTBL      18D0
START               1F34
START:LOOP          1F3C
START:WINT          1F42
STASAVEI            18E6
STASAVEI:LOAD       192C
STASAVEI:LOOP       1912
STASAVEI:MOVER      1916
STASAVEI:NAME       193E
STASPACE            1
STASPACEU           1978
STASPACEU:END       1994
STAUPD              184E
STAUPD:DOUPD        1874
STAUPD:INITBL       188C
STAUPD:UPDTBL       18A0
STAWIN              4
STAWINP             1B84
STAWINP:TITSTR      1BB6
SYSINIT             1000
TXBSIZE             12
TXMSIZE             10
TXSSIZE             A
UTLCHCOLP           136A
UTLCHCOLP:END       13FC
UTLCHCOLP:LADOS     13F6
UTLCHCOLP:PLRXMIDDLE  13B0
UTLCHCOLP:PLRXRIGHT  13DE
UTLCHCOLW           1258
UTLCHCOLW:COLLIS    133A
UTLCHCOLW:DOWN      12C4
UTLCHCOLW:END       1334
UTLCHCOLW:LEFT      1282
UTLCHCOLW:MINLIVE   12D0
UTLCHCOLW:RESET     132C
UTLCHCOLW:RIGHT     12A2
UTLCHCOLW:SOUNDG    1342
UTLCHCOLW:SOUNDL    1356
UTLCOLBL            1402
UTLCOLBL:CHOQUEDOBLE  1446
UTLCOLBL:CHOQUEDOBLEIZQ  1474
UTLCOLBL:DERECHA    1492
UTLCOLBL:ENDCOLISION  149E
UTLCOLBL:ENDNOCOLISION  14DE
UTLCOLBL:ENMEDIO    1480
UTLCOLBL:IZQ        142C
UTLCOLBL:SOUND      14E0
UTLCOLBL:TEST       1426
UTLCOLBL:TEST2      145C
UTLINTRI            1216
UTLINTRI:TITSTR     1248
UTLLOCT             254
UTLREADFILE         1544
UTLREADFILE:HAYALGO  1578
UTLREADRNK          158A
UTLREADRNK:END      160A
UTLREADRNK:LOOP     15D6
UTLREADRNK:TEXT     1610
UTLSFIL             12A
UTLSIZC             37C
UTLSNDS             4F7
UTLSNDST            6E5
UTLSPEN             0
UTLSREENP           14F0
UTLSREENP:TXTSCORE  153C
UTLSVNAME           82B
UTLWRFILE           1684
UTLWRRNK            161F
UTLWRRNK:LOAD       1666
UTLWRRNK:LOOP       164C
UTLWRRNK:MOVER      1650
UTLWRRNK:NAME       1678
YELLOW              38EEF8
